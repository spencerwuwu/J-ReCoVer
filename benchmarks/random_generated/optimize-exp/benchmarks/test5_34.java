// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a008 -= a005;
a003 = a005 - a019;
a024 += a022;
cur -= a001;
a006 = a010 - a003;
a007 = a000 + a024;
a007 = a001 - cur;
a018 -= a011;
a020 += a013;
a016 += a024;
a011 = a012 + a013;
a009 = a019 + a005;
a006 -= a017;
a020 = a014 + a000;
a022 += a014;
a022 = a006 - cur;
a002 += a002;
a014 += a013;
a007 = a024 - a024;
a014 -= a014;
a005 -= a013;
a005 -= a014;
a021 = a005 + a001;
a015 -= a009;
a004 = a006 - cur;
a007 = a016 + a022;
a012 += a008;
a001 = a016 + a003;
a020 += a008;
a014 -= cur;
cur -= a014;
a001 -= a014;
a014 -= a004;
if (a020 >= a014) {
a016 += a013;
a020 -= a011;
a001 = a008 + a017;
a022 = a014 + 4;
a023 = a017 - a020;
a022 += a008;
a004 -= a017;
a011 = a003 - a000;
a022 += a016;
a011 = a003 + a020;
a009 += a013;
a001 = a013 - a024;
a021 -= a021;
a020 = a020 + a015;
a009 += a018;
a002 = a013 + -4;
a022 += a020;
a016 = a020 - a005;
a020 += a002;
a010 -= a010;
a011 = a013 + a008;
a001 -= a019;
a017 += a004;
a014 += a019;
a022 = a003 + a013;
a020 = a018 - a010;
a004 = a017 - a010;
a011 += a010;
a009 = a012 - a022;
a012 = a021 - a021;
if (a008 <= a017) {
a012 -= a017;
a001 += a023;
a013 = a011 - a023;
cur = a020 - a023;
a013 += a015;
a018 -= a009;
a018 -= a003;
a008 = a016 + a013;
a007 = a017 + a007;
a010 -= a004;
} else {
a012 += a004;
a001 = a000 - a006;
a009 = a012 + a013;
a008 = a013 - a013;
a015 = a003 + a008;
a016 -= a009;
a013 = a007 + a016;
a016 = a008 - a020;
a019 += a019;
a013 = a000 - a014;
a003 -= a020;
a007 = a018 - a006;
a016 -= a018;
a024 = a013 + a013;
a004 = a019 - a019;
a017 = a007 + a023;
a007 += a022;
a017 = a004 - a009;
a000 = a011 - a006;
a020 = a004 + a017;
a015 = a013 + a005;
a003 = a001 - a022;
a014 = a012 + a013;
a005 += a005;
a011 = a016 - a003;
a008 = a014 - cur;
cur -= a001;
a020 = a011 - a011;
a016 += a019;
}
a000 = a017 + a002;
a010 = 3 - a019;
a018 = a000 - a016;
a014 -= a012;
a004 = a023 + a018;
a024 = a001 + a018;
a016 = a007 + a006;
a020 = a018 - a017;
a002 = cur * -2;
a005 -= a021;
a000 -= a005;
a012 += a023;
a022 -= a012;
a015 = a005 * -4;
a023 = a009 - a016;
a017 = a009 - a010;
a005 -= a017;
a021 = a002 + a014;
a009 += a011;
a013 = a014 - a020;
a007 -= a009;
a018 += a024;
a010 = a023 - a006;
a003 = a016 + a004;
a012 += a024;
a007 += a014;
a001 += a024;
a019 -= a011;
a016 = a004 - a024;
a024 += a016;
a022 -= a007;
a022 -= a018;
a003 += a020;
if (a016 != a019) {
a002 = a007 + a023;
a013 = cur - a023;
a000 += a013;
a000 -= a014;
a012 = a014 + a006;
a016 += a009;
a017 = a001 - a014;
if (a022 != a021) {
a009 += a022;
a022 = a004 - a003;
a024 = a002 + a023;
a019 = a008 - cur;
a018 = a005 - a021;
a006 = a002 - a006;
a015 += a003;
a024 -= a024;
a016 += a010;
a006 = a005 - a008;
a009 = a018 + a020;
a001 += a012;
a004 = a006 + a022;
a021 = a009 + a018;
a014 = a018 * 1;
a020 = a006 + a009;
a019 -= a007;
a001 = a007 - a019;
a017 = a008 + a010;
a006 -= a013;
a004 = a003 - 3;
a011 -= a019;
a008 = a015 - a015;
a008 -= a004;
} else {
a003 = a015 + a020;
a015 = a014 + a015;
a019 = a001 - a001;
a004 = a017 + a017;
a007 -= a002;
a016 = a009 + a003;
a011 = a022 - -1;
a001 -= a014;
a022 += a000;
a006 -= a006;
a008 += a014;
a003 += a007;
a004 = a004 - a005;
a019 = a022 - a006;
a008 = a018 + a003;
a010 = a001 - a011;
a022 += a010;
a005 = a010 + a019;
a019 = a005 + a020;
a000 -= 0;
a013 = a003 + a024;
cur -= a017;
a014 -= a006;
a008 += a011;
a021 = a024 - a022;
a009 += cur;
a010 = a020 - a002;
}
a008 = cur + a012;
a005 += a011;
a024 = a010 - a000;
a003 = a008 + a007;
a020 += a004;
a024 = a001 - a019;
a006 += a015;
a005 = a012 - a002;
a024 = a015 + a005;
a006 += a023;
a010 -= 2;
a002 += a023;
a009 = cur - a010;
a013 = a024 - a005;
a016 += a013;
a022 -= a014;
a011 = a003 - a008;
a018 = a011 + a023;
a003 = a010 - a014;
a010 += a003;
a005 = a011 + a019;
a002 -= a023;
a016 = a002 + a018;
a012 = a003 * 0;
a019 -= a024;
a002 = a011 - a002;
a022 -= a019;
a008 += a014;
if (a014 < a010) {
a012 -= a023;
a002 += a000;
a023 = a003 - a001;
a009 -= 0;
a018 = a016 - a006;
a012 -= a016;
a016 -= a017;
a015 += a008;
a021 -= a020;
a018 = a017 - a017;
a016 = a019 + a018;
a016 = a006 + 0;
a016 = a005 + a003;
a018 = a005 + a012;
a018 = a009 + a018;
a017 = a014 - a016;
a016 += a013;
a006 += a008;
} else {
a023 += a003;
a020 -= a005;
}
a013 -= cur;
} else {
a022 += a008;
a022 += a002;
a000 = a010 - a018;
a004 -= a019;
a016 -= cur;
a001 += a017;
a005 -= a007;
}
} else {
}
a014 += a013;
}
output.collect(prefix, new IntWritable(a016));
}
