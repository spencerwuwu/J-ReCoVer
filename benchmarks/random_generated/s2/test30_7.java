// Note: only +, - operations
// Parameters:
//   Variables:   30
//   Baselines:   300
//   If-Branches: 30

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a017 = a009 - cur;
a007 = a004 + a021;
a021 += a027;
a004 += a003;
a029 += a029;
a021 += a029;
if (a021 <= a027) {
a022 = a010 - a008;
a006 = a003 - a008;
a003 = a009 + cur;
a010 = a005 - a021;
a024 -= a003;
} else {
a014 = a004 - a002;
a004 += a015;
a013 -= a002;
a029 = a020 - a013;
a002 += a028;
if (a029 < a029) {
a008 -= a003;
a025 += a012;
a013 += a004;
a021 -= a026;
if (a003 < a029) {
a002 += a014;
a007 -= 1;
a000 = a027 - a006;
a020 = a003 + a009;
a009 -= -2;
cur += a000;
a021 = a016 - a016;
} else {
a023 = -4 + a023;
a017 -= a021;
a011 += a029;
a013 += a027;
cur -= a000;
a016 -= a003;
}
a013 = a009 + a016;
a028 = -4 + a000;
a012 -= a016;
a025 += a014;
a003 = a011 + a000;
a005 = a022 - a010;
if (a006 > a003) {
a011 = a028 - a026;
a012 = a002 - a004;
a012 = a004 + a004;
a006 += a025;
a027 = cur - a025;
} else {
a000 -= a021;
a007 = a023 - a003;
a006 = a027 - a024;
a006 = a011 + a017;
if (a026 >= a022) {
if (a000 == a008) {
a008 -= a008;
a001 = a018 + a024;
a001 = a002 - a021;
cur = a001 + a003;
a022 = a029 - a003;
a012 += a008;
} else {
a025 = a011 - a028;
if (cur > a015) {
a014 = a002 - a017;
if (a018 == a019) {
a014 = a028 + a009;
a011 = a000 - a025;
a023 -= a023;
a010 -= a012;
a008 = a029 - a011;
} else {
a005 = a024 + a021;
a010 = cur - a004;
}
cur = a004 - a022;
} else {
if (a000 < a016) {
a021 -= a010;
a013 += a000;
} else {
cur = a012 - a017;
cur = a028 - a006;
a022 -= a005;
a014 -= a009;
if (a023 == a024) {
a008 = a021 + a013;
a028 += a000;
a029 += a022;
a007 = cur - a020;
a012 = a013 + a019;
} else {
a018 -= a001;
a003 -= a011;
a026 -= a018;
cur -= a028;
a024 += a021;
a015 = a020 + a009;
}
if (a002 < a013) {
a008 = cur + a000;
a024 -= a007;
a020 = a019 + a022;
a006 = a018 + a026;
} else {
a026 = a008 + a017;
a018 = a013 - a021;
cur += a005;
a018 += a002;
a003 = a007 - a024;
a021 -= a004;
a012 += a018;
if (a020 > a010) {
a024 = a003 - a002;
a029 = a021 - a011;
a005 = a028 + a018;
a020 = a019 + a014;
if (a022 != a029) {
if (a017 != a017) {
a014 -= a016;
a013 = a015 - a009;
a021 = a001 - -1;
a008 = a020 + a001;
cur = a008 - a024;
a023 += a020;
a006 = a020 + cur;
} else {
a028 = a021 + a006;
a020 = a015 + a006;
a020 += cur;
a024 -= a025;
a002 = a020 - a004;
a012 = a020 + a017;
}
a012 = a024 + 3;
} else {
a010 += a019;
a009 = a012 * -1;
a022 += a016;
a011 = a006 - 0;
a017 -= a005;
a016 += a012;
if (a018 > a004) {
a003 += a005;
} else {
a016 -= a014;
a012 += a024;
a029 += a004;
a002 -= 3;
a005 -= a001;
}
a002 = a026 - a004;
a020 -= a004;
a002 += a027;
a012 += a005;
a007 = a004 + a000;
}
a028 -= a004;
a006 += a022;
cur = a024 + a027;
a025 = a024 - a015;
a015 = a016 - 1;
a011 += a007;
a022 = a025 + a023;
} else {
a013 += a021;
a013 = a004 + a017;
a005 += a003;
a022 += a010;
a002 += a023;
cur = a022 + a013;
if (a011 == a021) {
a028 = a002 * -3;
a023 += a028;
a001 = a014 - a013;
a019 = a027 - a003;
a006 += a006;
if (a004 == a011) {
} else {
if (a024 > a024) {
a004 = a000 - a013;
a023 = a003 + a017;
a018 -= a022;
if (a004 <= a014) {
a015 = a027 - a025;
a015 -= a006;
a020 = a027 - a003;
a012 = a004 + cur;
} else {
if (a020 > a010) {
a021 -= a027;
} else {
a015 += a007;
a016 = a000 - a021;
a001 += a013;
a023 -= a015;
a011 -= a018;
}
}
a029 = a009 + a003;
a025 = a013 + a006;
a004 = a003 + a013;
if (a029 > a013) {
a015 = a022 - a019;
a003 += a027;
a020 -= a015;
if (a013 >= 0) {
a011 = a010 - a007;
a003 += a020;
a005 += a001;
a028 -= a002;
a021 += a000;
if (a024 > a029) {
a010 = a025 - a000;
a016 += a006;
a027 += a003;
a007 -= a004;
a004 = a016 - a028;
if (a019 > a000) {
a026 = a010 + a011;
a013 = a010 + a013;
a007 = a015 + a029;
a004 -= a028;
a017 -= a003;
a011 = -2 + a020;
a015 += a020;
if (a011 < 4) {
a019 = a006 - a008;
a018 -= a026;
a017 = a027 - a026;
a012 = a012 - a016;
} else {
a025 = a025 - cur;
}
a011 += a008;
} else {
a025 -= a016;
a004 += cur;
a000 = 3 - a017;
a011 -= a002;
a014 += a021;
a022 -= a008;
if (a029 <= a027) {
a007 -= a027;
a008 = a003 + a026;
a020 -= a004;
a026 = a013 - a010;
a027 = a009 + a029;
} else {
a017 += a008;
a009 += a027;
}
if (a027 != a015) {
a003 -= a003;
a028 = a018 - a005;
a014 = a010 + a007;
a015 += a019;
a004 = a012 + a010;
} else {
a029 = a023 + a008;
if (a026 <= a023) {
a029 += a005;
if (a014 <= a022) {
a028 = a002 + a021;
if (a007 >= a024) {
} else {
}
a016 -= a022;
a025 += cur;
a012 += a028;
a007 = a014 + a007;
} else {
}
a014 = a001 + a015;
a015 = a015 + a012;
} else {
a016 += a025;
}
a028 = a029 + a010;
a010 = a012 + a014;
a000 = a004 - a008;
a004 = a011 + a024;
a015 -= 2;
}
a025 = a015 + a001;
a000 = a005 + a019;
a011 -= a011;
a028 = a000 - a007;
}
a005 += a025;
a000 = a019 - a001;
a028 = a022 + cur;
a015 = a017 + a028;
a012 -= a026;
} else {
a017 = a027 - a004;
a028 -= a028;
cur = a002 - a011;
a014 = a018 + a008;
a011 -= a004;
}
cur = a010 - -4;
a009 += a028;
} else {
a011 = a014 + a004;
}
a021 = a016 - a000;
a002 += a000;
a006 = a029 - a001;
a007 -= a023;
a017 += a002;
a007 = a015 + a014;
a029 = cur + a026;
} else {
a029 += a007;
}
a009 = a018 - a015;
a014 = a008 + a011;
a002 += a004;
a025 -= a004;
} else {
a021 -= a022;
cur -= a015;
a008 += a006;
a001 = a014 - a026;
}
a014 += a008;
a014 = a020 - a004;
a025 = a001 + a009;
a007 = a027 + a009;
a017 = a026 + a008;
a024 = a022 - a014;
cur += a012;
}
a005 = a008 - a007;
a014 = a003 - a009;
a003 = a027 - a009;
} else {
a029 = a022 + a029;
a028 -= a003;
}
}
}
a008 = -4 - a027;
a029 = a021 - a002;
a009 -= a022;
cur = a003 - a005;
a015 += a024;
a006 = a003 * -2;
a021 -= a010;
}
a027 = a022 - a008;
a001 = a010 - a018;
a028 = a001 - a019;
a026 -= -5;
}
a000 += a025;
}
a013 = a020 + a029;
cur = a024 + a008;
a021 = a006 - a021;
a003 = a004 + a026;
} else {
}
a020 -= a027;
a005 = a019 - 2;
a010 -= a028;
a006 = a004 + a008;
a021 += a000;
}
a008 = a018 - a029;
cur -= a022;
a007 = a029 - a029;
a027 = a010 + a028;
a027 = a019 - cur;
} else {
a023 += a001;
a012 = a015 - a009;
a016 += a012;
a000 += a006;
}
a011 -= a005;
a017 = a024 - a016;
a007 = a002 - a012;
a019 += a011;
a024 = a013 + a001;
}
}
output.collect(prefix, new IntWritable(a015));
}
