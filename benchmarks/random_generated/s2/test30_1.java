// Note: only +, - operations
// Parameters:
//   Variables:   30
//   Baselines:   300
//   If-Branches: 30

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a024 = 4 - a003;
a004 -= a000;
a008 -= a027;
a001 = a001 - a015;
a019 += a012;
a009 -= a024;
a025 += a019;
if (a024 >= a017) {
} else {
if (a022 < a020) {
a024 = a005 + a008;
a017 -= a029;
if (a014 > cur) {
a023 = a026 - a018;
a020 = a010 - a025;
a028 = a006 - cur;
a021 -= a018;
if (a004 <= a018) {
a028 = a011 + a006;
a019 -= a016;
a018 = cur - a019;
a029 = a022 + -1;
a019 -= a001;
} else {
cur = a028 + a028;
a009 += a007;
a001 += a021;
if (a027 >= a006) {
a012 -= a000;
a013 = a021 - a001;
a018 = a016 + a013;
a016 = a014 + a023;
a005 += a006;
a016 = a007 + 1;
} else {
a015 = a026 + a004;
}
a016 -= a010;
if (a015 <= a014) {
} else {
a019 -= a008;
a005 = a008 + a016;
a022 += a026;
if (a016 < 2) {
a001 -= a004;
a019 = a010 + a029;
a013 += a008;
a023 = a002 - a013;
a024 = -3 - a001;
if (a006 != a028) {
a020 -= a007;
if (a025 <= a019) {
a004 = a014 - a013;
a001 = a001 - a014;
if (a000 >= a011) {
a024 += a002;
} else {
a005 += a003;
a022 -= a007;
}
a006 += a020;
a015 += a025;
a011 += a017;
a019 += a028;
if (a000 == a008) {
a024 += a020;
a004 += a017;
a019 = a013 + a006;
a002 += a000;
a002 = a024 - a028;
a011 += a007;
a017 -= a019;
} else {
a003 = a025 + a026;
a010 = 1 + a015;
a022 = a025 - a021;
a017 -= a004;
}
a026 = a018 - a020;
a004 -= a018;
a020 = a018 - a002;
} else {
a022 = a000 + a008;
a029 = cur + a006;
a020 -= a029;
a019 += a004;
if (a022 < a022) {
a006 = a028 + a001;
a017 += a014;
if (a000 <= a026) {
a027 -= a001;
a029 = a016 + a008;
a022 += a008;
} else {
a001 = a020 + a011;
a006 = a019 - cur;
if (a003 >= a029) {
a004 += a026;
a009 = a027 + a018;
a018 += a019;
if (a019 != -4) {
a010 = cur - a014;
a014 -= a017;
a005 = a004 + a010;
cur = a003 - a026;
a016 += a011;
if (a029 <= a029) {
a010 -= a018;
a023 = a029 + a023;
if (a023 > a025) {
a027 = a021 * 0;
a016 = a028 - a019;
a027 += a004;
} else {
a019 -= a026;
a010 = a028 - a020;
a021 = a011 - a010;
}
a007 -= a029;
a022 -= a005;
a016 -= a021;
a019 = cur - a021;
a024 = a011 - a018;
a004 += a006;
a025 -= a002;
if (a021 <= a007) {
a002 = a011 - a000;
a006 = a002 + a026;
a008 -= a010;
a013 = a014 + a010;
a009 += a013;
a019 = a025 + a027;
a006 += a018;
} else {
a029 = a005 - a019;
a025 = a027 - a014;
a008 = a017 - a010;
a016 = a004 + 0;
a005 = a026 + cur;
}
a001 -= a014;
a001 += a023;
cur = a028 + a014;
if (a011 > a023) {
a010 = a008 + a009;
a011 = a007 - a020;
if (a023 != a004) {
} else {
a011 = a002 + a026;
if (a026 != a015) {
a021 = 4 - a005;
a013 = a027 * -5;
a007 = a006 - a028;
a001 = a028 - a023;
} else {
a000 = a003 + a021;
a004 -= a011;
a026 = a020 - a007;
a027 = a029 + -1;
a001 -= a015;
a028 = a007 + a020;
a006 = a010 - a026;
}
a007 -= a005;
a018 += a013;
a023 = a019 + a026;
a009 = a029 - a019;
a006 += a025;
a009 = a011 + a006;
}
a019 = a025 + a009;
a021 -= cur;
a016 -= a022;
a006 += a010;
} else {
a008 -= a029;
a018 = a016 - a018;
a006 -= a012;
}
} else {
a000 = a013 - a011;
a007 = a013 + a026;
a012 = a021 - a019;
a006 = a005 - a026;
}
a016 = a025 + a012;
} else {
if (a025 >= a013) {
a007 = a011 - a016;
a007 = a012 + a020;
a004 -= a007;
} else {
a026 = a016 + a025;
a017 -= a022;
if (a009 <= 3) {
a006 = a027 - a006;
a002 = a000 - a002;
a006 -= a029;
} else {
a004 = a011 + a006;
a008 += a026;
a002 = a026 - a016;
a009 += a010;
}
a004 = a023 - a023;
a015 = a028 + a017;
cur += a025;
a008 = a026 + a028;
a004 += a016;
if (a011 != a011) {
a018 = a025 + a021;
cur -= a012;
a009 = a016 + a017;
} else {
a018 = a020 - cur;
}
a014 += a012;
a029 = a001 + -1;
if (a020 <= a019) {
a018 = a018 - a004;
a014 = a006 - a002;
a015 = a011 + a028;
a004 += a002;
a009 += a025;
a001 += a011;
} else {
a029 = a014 - a009;
if (a016 == a027) {
a005 = a026 - a016;
a027 -= -1;
if (a009 != a009) {
a022 -= a025;
a014 = a012 - a011;
a023 -= a005;
a025 += a017;
if (a007 < a027) {
a003 -= a016;
if (a000 == a015) {
a021 = a000 + a018;
a003 -= a020;
a015 = a019 - a000;
a000 += cur;
a006 = a006 + a003;
if (a029 <= a016) {
a015 = a008 + a010;
a014 += a020;
a028 = a026 + a017;
a014 += a008;
a011 += a017;
cur = a009 - a003;
a021 = a020 - a010;
} else {
a009 += a018;
a023 = a024 + cur;
a026 = a010 - a025;
}
a005 = a015 - a024;
a012 = a016 - a002;
a001 -= a015;
a002 += a009;
a021 -= a017;
} else {
a006 = a026 - a016;
a015 += a007;
}
a008 = a007 + a015;
a018 = a012 - a010;
} else {
a024 = a011 - a000;
a009 = a025 - a018;
a002 += a027;
a022 -= a002;
a011 = a019 - a029;
a012 = a012 - a002;
}
a020 = a010 - a024;
a003 = a011 + a027;
a000 = a006 - a015;
} else {
a023 -= a003;
a025 -= a019;
a020 = -2 - cur;
a028 = a004 + a029;
a026 -= a011;
a022 += a023;
a008 = a027 - a014;
}
} else {
a013 += a013;
a022 = a019 + a004;
a022 += a015;
a008 -= a003;
}
a014 -= a026;
a011 = a003 - a011;
}
a003 = a009 - a005;
}
a025 -= a021;
}
a029 += 2;
a013 -= a023;
a026 += a019;
a012 -= a027;
a005 = a004 + a019;
a008 = a019 + a001;
a008 = a026 + a007;
} else {
a018 -= a015;
a013 += a014;
a028 = a029 - a016;
a000 -= a006;
a020 += a010;
}
a015 += a005;
cur = -4 + a007;
a021 += a016;
a000 += a027;
a017 = a014 + 4;
}
a018 -= a021;
a015 = a004 + a023;
cur += a017;
} else {
a019 += a017;
a002 -= a015;
a017 = a019 - a024;
a014 += a027;
a022 = a023 - a025;
a007 = a028 - a000;
}
a015 += a017;
a007 = a000 + a027;
a007 += a011;
a016 += 1;
a022 -= a029;
}
a020 = a002 + a012;
} else {
a004 = a029 - a028;
a020 = cur - a024;
a022 -= a009;
a006 = a006 + a022;
a001 += a000;
a025 += a019;
}
a029 = a026 - a015;
a016 = a024 * -2;
a012 -= a016;
a006 -= a019;
a009 = a014 - a020;
a002 = a017 - a001;
a013 -= a022;
} else {
}
a020 = a018 + a001;
a001 += a011;
a016 += a023;
a003 -= a009;
a006 -= cur;
}
}
a025 -= a003;
a026 -= cur;
a005 += a018;
a001 -= a007;
a022 += a004;
a004 = a013 + a014;
} else {
a019 += a024;
a025 += a020;
a010 = a028 + a013;
a014 += a029;
a020 += a001;
a027 -= a013;
}
a029 = a004 - a008;
a002 -= a018;
a027 += a002;
a014 = a014 + a006;
a005 = a027 * -4;
a012 -= a024;
a003 = a020 + a027;
} else {
}
a003 = a008 + a023;
a012 += a006;
}
a002 = a016 + a012;
a024 += a004;
}
output.collect(prefix, new IntWritable(a021));
}
