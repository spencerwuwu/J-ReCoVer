// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a008 = a018 * 0;
if (a014 <= a011) {
a001 += a008;
a018 = cur - a019;
a005 += a005;
a013 += a005;
a015 += a011;
a008 = a009 - a011;
a013 = a014 + a009;
if (a018 < a018) {
a010 += a001;
a016 += a012;
a018 = 0 - a000;
a017 = a011 + a000;
a009 -= a001;
a009 = a013 + a015;
a006 = cur - a003;
a004 += a016;
a013 += a001;
a004 = a014 + a006;
a019 -= a003;
a015 -= a006;
a019 += a005;
a009 -= a018;
a014 += a005;
a000 -= a009;
a002 = a001 - a014;
a011 = a011 - a001;
a015 -= a006;
a019 -= a001;
a012 += a011;
a005 -= a019;
a014 = a011 - a011;
a002 += a007;
a010 += a007;
a008 += a007;
a005 += a010;
a008 += a010;
a016 += a008;
cur = 2 + a019;
if (a015 >= a018) {
a015 -= a003;
a018 = a003 - cur;
a008 = a006 + a018;
a013 += a018;
a000 = a011 + 2;
a005 = a014 + a005;
a013 = cur + a017;
a010 = a003 + a016;
a004 = a013 + a010;
a005 -= a011;
a011 -= a016;
a008 = a015 * -5;
a015 += a013;
a002 -= a018;
a017 += a010;
a000 = a006 + -2;
a012 = a011 + a003;
a015 = a011 + a019;
a011 = a008 + a013;
a012 -= a015;
a002 -= a012;
cur -= a012;
a009 -= a019;
a016 = a000 - a006;
a015 -= a004;
a015 = a004 - a006;
a011 += a016;
a012 = a011 * -5;
a013 = cur - a000;
if (a017 != a009) {
a012 = a003 + a003;
a015 -= a014;
a017 = a014 + 1;
a005 += a013;
a006 = a000 + a019;
a018 -= 1;
a002 += a011;
a007 += a016;
a014 = a003 + a019;
a007 -= a013;
a005 -= a002;
a012 = a006 - a016;
a004 -= a013;
a000 += a003;
a001 += a016;
a013 = a017 + a013;
a009 -= a007;
a014 += a010;
a007 -= a011;
} else {
a011 = a007 - a006;
a016 -= a011;
a019 = a017 - a017;
a005 += a013;
cur = a004 + a009;
a018 -= a011;
a008 = a006 + a006;
a003 = -3 - a015;
a002 -= 0;
a002 = a000 - a007;
a006 = a001 - -1;
a003 = a011 - a013;
a004 = 1 - a005;
a005 = a001 - a014;
cur = a001 - a015;
a008 -= a013;
a007 += a008;
a006 += a004;
a017 = a002 + a002;
a009 = a016 + a009;
cur -= a005;
a014 = a000 - a001;
a014 = a015 - a016;
a006 = a007 + a006;
a010 = a005 - a003;
a002 -= a014;
a010 += a016;
a004 += a005;
a008 -= a018;
a015 = a009 - a006;
}
a011 += a018;
a016 = a016 - a019;
a008 += a002;
a001 = a000 - a000;
a005 = cur + a004;
a014 -= a009;
a005 = cur - -1;
a018 -= a017;
a014 = a004 - a001;
a003 += a019;
a013 = a008 - a010;
a019 += a006;
a005 = a000 - a004;
a008 -= a006;
a012 = a019 - a014;
a019 += a018;
a015 = a000 + a013;
a016 = a007 + a008;
a008 += a010;
a011 = a017 + a012;
a014 = a008 - a011;
a008 -= a015;
a006 += a015;
a017 = a009 - a005;
a010 = a013 + a009;
a001 = a001 + a004;
a016 += a011;
a019 = cur + a008;
} else {
a007 = a011 - a017;
a015 += cur;
a013 = a000 - a000;
a012 += a000;
a000 -= a018;
}
a002 += a004;
a008 = a011 * -4;
a006 = a003 - a008;
a014 += cur;
a001 = a012 + a002;
a004 = a002 + a004;
a013 -= cur;
} else {
a004 -= a003;
a000 -= a013;
a019 = a010 + a005;
a003 = a017 - a014;
a001 -= cur;
a018 = a006 + a010;
a004 = a011 - a015;
a001 += a000;
a005 -= a006;
a019 = 3 - cur;
a010 -= a010;
a017 = a002 + -1;
a005 = cur - -2;
cur -= a006;
a017 = a012 + -3;
a000 -= a007;
a001 += a000;
a013 += a019;
a004 = a003 + 0;
a009 = a011 + 1;
a015 = cur - a012;
a000 = a017 - a007;
a012 += a002;
}
a007 -= a018;
a016 = a013 - -1;
a010 += a007;
a002 -= a002;
a000 = a012 + a001;
a005 += a017;
a019 += a019;
a008 = a002 - a005;
a010 -= a011;
a001 = a018 + a013;
cur = a015 - a019;
a006 -= a008;
a013 = a017 + a011;
a012 -= a006;
a018 = a011 + a015;
a000 = a008 + a012;
} else {
a009 -= a001;
a005 += a018;
}
a005 = a000 - a005;
a004 -= a005;
a009 = a008 + a002;
}
output.collect(prefix, new IntWritable(a005));
}
