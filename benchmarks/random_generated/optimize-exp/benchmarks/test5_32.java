// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a020 = a012 - a015;
a012 = a024 - a024;
a005 = a006 + a011;
a022 += a023;
cur += a017;
a002 += a005;
a005 = a009 - a012;
a017 = a009 - a016;
a005 -= a019;
a012 = a001 + a005;
a003 += a022;
a019 -= a008;
a011 += a001;
a001 = a022 - cur;
a022 = a002 + a009;
a024 = a002 - a003;
a012 = a011 - a008;
a010 += a002;
a005 = a020 - a019;
a019 += a007;
a013 = a003 - a020;
cur = a004 - a003;
a018 -= a010;
a018 -= a013;
if (a021 > a005) {
a000 += a019;
a007 += a001;
if (a020 < a000) {
a009 = a021 - a024;
a001 = a002 + a017;
a008 -= a002;
a004 = a008 - a006;
a023 -= a004;
a011 += a010;
a018 = a014 + a004;
a013 += a019;
a011 = a008 + a018;
a004 += a021;
a008 = a006 + a023;
a018 = a001 + a004;
a016 = a010 - a015;
cur = a018 - a004;
a017 -= cur;
a001 -= a023;
a013 += 0;
a010 += a024;
a022 += a009;
a002 = a021 - -4;
a018 += a000;
cur = a019 - a005;
a018 = a018 + a020;
a008 += a013;
} else {
a014 -= a001;
a015 += a013;
a001 = a012 - a021;
a023 = a003 - a019;
a018 -= a022;
a007 -= a016;
a017 += a001;
}
a001 += a001;
a018 = a007 + 1;
a002 = a003 - -5;
a001 = a004 + a021;
a011 = a016 + a001;
a010 = a003 - a023;
a002 += a004;
a002 -= a014;
a013 += a018;
cur = a000 + a019;
a004 += a018;
a001 += a016;
a018 -= a018;
a003 = a019 - a002;
} else {
cur -= a021;
a001 = -4 + a008;
a015 += a024;
a002 = a018 + a021;
a014 += a016;
if (a013 >= a023) {
a016 += a014;
a016 -= a007;
a019 = a006 + a005;
a023 -= 2;
a020 += a005;
a023 = a011 - a017;
a011 -= a022;
a018 -= a022;
a022 = a000 - a003;
a020 += a010;
a009 -= a013;
a012 = a016 + a005;
a006 -= a018;
a004 += a002;
a023 += a000;
a011 -= a017;
a005 -= cur;
if (a013 != a024) {
a016 = a018 - a013;
a019 = a007 + a007;
cur = -4 + a000;
a006 = a024 + a021;
a012 += a018;
a016 += a022;
a014 += a002;
a002 += a014;
a012 -= a019;
a016 = a007 + a015;
cur = a009 - a002;
a018 -= a002;
a000 -= a017;
a012 -= a013;
a021 -= a008;
a006 = a009 - a023;
a019 -= a009;
a022 = a017 + a018;
a003 += a016;
a006 = a022 + a002;
a014 -= a005;
a008 = a013 - a007;
a021 = a023 - a009;
a018 -= a010;
a018 -= -4;
a023 = a001 - a012;
a018 = a001 + a009;
a005 -= a023;
a002 -= a020;
a022 += a022;
a014 -= a023;
cur -= a001;
if (a022 > a001) {
a013 = a007 + a022;
a004 += a021;
a023 += a003;
a015 = a002 + a013;
a008 = a012 + a005;
a012 = a008 + a016;
} else {
a010 += a020;
a001 += a023;
a014 = cur - a009;
a006 += a003;
a016 = a012 + a021;
a020 -= a013;
a012 = a021 - 4;
a001 = a012 - a003;
a011 += a010;
a017 = a002 + a016;
a011 = a011 - a016;
a005 = a012 - a017;
a017 -= a010;
a008 += a008;
cur += a013;
a021 = -4 + a004;
a017 = a005 - a021;
a017 = a015 + a000;
a004 += a007;
a021 = a021 - a005;
a017 = a022 + a011;
a024 = a021 + a010;
a020 += -4;
a018 += a006;
}
a018 += a000;
a010 = a018 - a002;
a012 += a004;
a004 = a003 - a022;
a006 = a011 + a008;
a009 -= a006;
a010 = a013 + a021;
a022 -= a012;
a009 = a022 - a021;
a005 += a024;
} else {
a007 += a023;
a024 = a004 + a024;
a005 -= a016;
a005 = a019 - a009;
a022 = a020 + a004;
a006 -= a021;
a002 -= a020;
a003 = a020 + a005;
a013 = a000 + a005;
a010 = a015 - a009;
a022 += a003;
a020 = a001 + a001;
a021 = a009 + a012;
a009 = a020 - a006;
a004 -= cur;
a020 -= a021;
a018 += a002;
a018 -= a005;
a001 = a009 - a012;
a008 = a017 + a016;
a023 -= a009;
a003 = a024 - a000;
a020 -= a019;
a013 = a002 - a012;
}
a005 += a008;
a009 += -5;
a011 = a000 - a000;
a007 = a007 + a012;
a015 = a021 + a000;
a012 = a019 - a009;
a007 -= a015;
cur = a006 + a003;
a020 = a023 + a005;
a002 = a013 + a012;
a015 = a014 - a015;
cur += a021;
a000 -= a016;
a024 += a019;
a010 = a004 + a008;
a005 = a019 - a021;
a002 += a018;
a021 += a003;
a002 += a022;
a004 += a010;
} else {
a011 -= a019;
a000 += a004;
a007 -= a003;
a023 = a012 - a020;
a014 += a019;
a021 = a020 + a018;
a006 = a001 - a010;
a007 = a007 - a000;
a017 -= a007;
a023 = a003 + a014;
a016 = a012 + cur;
cur += a019;
a023 -= a001;
a011 = 4 - a002;
cur = a013 - a012;
a002 = a001 - a020;
a018 += a002;
a019 += a008;
a001 = a017 + a017;
a005 = a005 - a000;
a008 += a012;
a021 = a011 + a001;
a023 -= a017;
a005 -= a010;
a012 = a007 + a017;
a016 = a006 - a012;
a000 -= a015;
}
a015 -= a013;
a004 = cur - a023;
a024 += a004;
a017 -= cur;
a003 += a006;
a003 = a009 - -3;
cur -= a002;
a005 += a004;
a018 = a011 + a022;
a007 = a012 - a018;
}
a002 += cur;
a000 += a005;
a022 = a016 + a000;
a004 -= a019;
}
output.collect(prefix, new IntWritable(a000));
}
