// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
if (a000 > a000) {
a000 += a013;
a011 = a009 + a012;
a001 -= a005;
a024 = a011 - a012;
a004 -= a002;
a010 += a019;
a015 -= a008;
a000 = a001 + a000;
if (a008 < a015) {
a015 -= a020;
a017 = a008 - a018;
a006 -= a015;
a008 -= a009;
a006 = a021 + a024;
a001 -= -4;
a003 -= a000;
a023 = 3 - a019;
a021 = a021 - a020;
a000 = a005 + a014;
a019 = a018 - a022;
a002 = a020 + a000;
a005 += a001;
a013 = a013 + a001;
a020 = a009 + a006;
a010 -= a012;
a009 = a014 + a008;
a015 = cur - a023;
} else {
a009 = a003 + a024;
a018 = a010 - a015;
a016 += a011;
a005 -= a022;
a014 += a011;
a022 -= a024;
a024 += a020;
a006 = a017 - a010;
a019 = a006 + a014;
a001 = a011 - a012;
a016 = a018 - a019;
a019 = a016 + a009;
a002 = a003 + a019;
a014 = 4 + a021;
a006 = a019 + a020;
a005 -= a017;
cur = a012 + a000;
a022 = a002 - a001;
a021 = a017 - a000;
a018 = a023 + a004;
a024 = a017 - a020;
a009 += a008;
a018 = a016 + a008;
a019 = a000 + a008;
a024 = a006 - a022;
}
a015 = a018 * 4;
a008 = a008 + cur;
a013 = a005 + cur;
a011 = a024 - a005;
a015 = a005 + a012;
a017 = a017 - a008;
if (a023 > a008) {
a015 -= cur;
cur = -3 - a021;
a019 -= cur;
a003 = a022 - a014;
a022 += a017;
a003 = cur + a019;
a017 = a000 - a024;
a017 -= a017;
a019 -= a016;
a002 = a007 + a007;
a001 = a007 * -4;
a003 = a013 - a004;
a020 = a016 + a002;
a001 = a004 + a010;
a004 += a018;
cur -= a019;
cur = a007 + a011;
a020 -= a019;
} else {
a007 = a024 + a009;
if (a018 >= a014) {
a004 = a019 + a000;
a002 -= a010;
a000 -= a018;
a019 += a002;
a002 = a002 - a002;
a024 -= a012;
a003 = a014 - a015;
a021 = a002 - 4;
a023 -= a012;
a016 = a014 + a019;
a013 = a024 + a003;
a021 -= a011;
a011 += a008;
a010 = a015 + a023;
a007 += a019;
a023 += a008;
a024 -= a023;
a021 -= a014;
a018 += a012;
a013 -= a015;
if (a010 < a021) {
cur -= a021;
a001 = a010 - a023;
a012 = a022 + a002;
a014 -= a011;
a002 -= a018;
a018 = a022 + a019;
a018 += a010;
a021 = a003 - a022;
a004 += a021;
a012 = a022 + a006;
a012 += a015;
a002 += a023;
cur += 0;
a005 = a018 - a014;
a010 = a002 + a024;
a000 = a016 - a011;
} else {
a023 -= a015;
a013 -= a024;
a014 -= -2;
a004 = cur + a020;
a003 -= a001;
a020 += a018;
a010 += a023;
a015 -= a019;
a001 -= a021;
a019 = a022 + a024;
a002 = a006 - a000;
a003 = a001 + a018;
a022 = a023 - a012;
a007 += a003;
cur = -5 + a008;
cur += a021;
a007 = a004 - a016;
a000 -= a010;
a007 = a004 - a005;
a019 -= a019;
}
a005 = a023 + a014;
a011 -= a004;
a007 += a004;
a005 += a020;
a007 = a018 - a009;
a020 = a006 - a024;
a016 -= -5;
cur = cur - a017;
a019 -= a024;
a000 = a020 + a018;
a008 -= a018;
cur = a017 + a004;
a022 -= a008;
} else {
a020 -= 0;
a001 += cur;
a005 = a008 - a024;
a014 = a015 + a007;
a016 -= a013;
a009 = a010 - a016;
a008 = cur - a021;
a004 = a001 + a005;
a013 = a023 - a024;
a007 += a024;
a005 = a002 + a001;
a006 -= a018;
}
a000 -= a002;
cur -= a000;
}
a007 = a005 - a020;
a015 += a014;
a007 = a000 - a010;
a010 = a020 + 0;
a022 += a021;
a016 += a008;
a003 += a012;
a000 += a011;
a013 += a013;
a015 = a024 - a006;
a004 = cur - a010;
a005 += a010;
a010 = a019 - a004;
a007 += a006;
a000 = a008 + a020;
a002 += a015;
a007 = a022 - a009;
a022 = a017 - a013;
a006 = a003 - a009;
a003 = a000 + a001;
a004 = cur - a008;
a004 += a014;
a023 = a023 + a016;
a000 = a018 - a018;
cur -= a004;
a012 = a012 - a013;
a001 = a009 - a024;
a022 = a012 + a020;
a005 -= a003;
a021 = a001 - a018;
} else {
cur += a012;
a003 = a004 + a004;
a017 = a006 * -5;
}
a009 += a020;
a015 = a000 - -4;
a001 = a019 - a007;
a001 = a009 - a018;
a005 -= cur;
a012 -= a017;
a015 = a000 + a011;
a000 -= a022;
a010 = a006 + a005;
a015 += a016;
a014 -= a011;
a006 = a023 + a002;
a012 = a010 - a014;
a003 = a017 - a016;
a017 = a001 + a021;
a016 -= a020;
a001 = a012 + a013;
a009 += a006;
a011 = 2 - a007;
a015 -= a014;
a003 -= a007;
a005 = cur - a004;
a014 += a014;
a004 -= a017;
a006 -= a009;
a008 += a010;
a006 = a020 + a006;
a003 -= a021;
a008 -= a017;
a023 = a009 + a020;
a016 = a013 + a018;
a014 = a005 - cur;
a007 -= a009;
a015 = a016 + a023;
a012 = a024 + a003;
a024 = a017 - a014;
a005 -= a021;
a014 += a012;
a001 -= a016;
a014 = a024 - a002;
cur = a011 + a004;
a017 = a006 + a000;
a022 = a024 - a014;
a002 += a012;
a004 = a014 * -2;
a021 = a023 - a024;
a001 = a010 + a009;
a024 = a021 - a000;
a010 -= a020;
a024 -= a019;
a011 -= a016;
a024 -= a017;
a021 = a008 - a004;
a004 -= a020;
a002 -= a003;
a016 = a021 - a020;
a017 -= a013;
a021 = a013 - a015;
}
output.collect(prefix, new IntWritable(a019));
}
