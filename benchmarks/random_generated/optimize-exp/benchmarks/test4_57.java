// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a004 += a018;
a010 = a001 + a016;
a001 -= cur;
a009 -= -5;
a011 = a004 - a012;
a013 = cur + a004;
a003 = a018 + a003;
a010 -= a012;
a010 -= a017;
a002 = a003 - a000;
a008 += cur;
a001 -= a000;
a004 = a006 - cur;
a019 -= a005;
a004 = cur - a012;
a016 = a002 - a009;
a002 -= a000;
if (a017 <= a016) {
a013 -= a016;
a003 += a001;
a014 += a000;
a006 = a016 - a010;
a009 += a015;
a018 -= a000;
a011 = a009 + a006;
a001 += a017;
a017 += a008;
a012 -= a016;
a001 += a007;
cur = a005 - a012;
if (a012 >= a007) {
a003 = -4 - a003;
a017 += a013;
a004 = a013 + a007;
a012 += cur;
a008 = a010 + a010;
a000 = a011 + a010;
a007 -= a019;
a002 += a013;
a009 -= a010;
a000 += a012;
a013 = a002 - a008;
a006 = a015 - a000;
a011 += a003;
a019 = a018 + a003;
a003 = 0 - a011;
if (a008 >= a010) {
a003 -= a008;
a008 = cur - a003;
a005 = 0 + a010;
a018 = a018 - a000;
a009 += cur;
a000 -= a008;
if (a015 < a018) {
a016 -= a012;
a006 = a010 - 1;
cur += cur;
} else {
a019 += a014;
a011 -= a005;
a011 -= a007;
a001 += a000;
a019 = a001 + a019;
cur += a002;
a019 = a009 - 4;
a015 += a003;
a001 -= a000;
a014 = 2 - a011;
a002 = a006 - cur;
a007 += a014;
a007 += a017;
a014 = a008 + a007;
a011 = a016 + a011;
a018 = a008 - a015;
a008 = -2 + a019;
a017 = a005 + a011;
a011 += a014;
a009 = a008 + a001;
}
a004 = a002 - a003;
a005 -= a013;
a001 = a001 + a011;
a018 += a015;
a016 = a010 + a002;
a014 = a015 * 0;
a017 = a007 - a015;
a004 = a007 - a018;
a007 = a004 - a010;
a011 = a005 - a005;
a018 = a002 + a014;
a004 = a003 - a018;
a000 -= -5;
a009 += a005;
cur += a010;
} else {
a005 = cur - a015;
a015 += a000;
a000 = a012 - a012;
a002 = a000 + a000;
a012 = a018 + a006;
a002 = a010 - a013;
a018 -= a009;
a019 += a012;
a004 += a008;
cur = a009 - a015;
a018 = a017 - a004;
a002 = a013 + a013;
a005 = a006 - a018;
a019 = a013 - a006;
a006 = a000 + a013;
cur = a000 - a004;
a009 = a006 - a012;
a010 = a006 + a002;
a018 = a014 + a005;
}
cur = a018 + a000;
a014 = a000 - cur;
a013 = a016 - a001;
a003 = cur + a016;
a005 -= a009;
a007 = a011 + a006;
a011 = a001 + a016;
a016 += a016;
a002 -= a016;
a002 = 3 + a019;
a018 = a001 - a002;
a011 = a005 * -1;
a003 = a000 + a015;
a009 = a001 - -2;
a003 += a005;
a001 -= a006;
a005 -= a015;
a019 = a002 + a007;
a007 += a008;
a008 = a004 + a019;
a011 -= a003;
cur += a017;
a006 -= a003;
a013 = a003 - a008;
a009 += a007;
a003 += a005;
a014 -= a014;
a000 = a000 + a010;
} else {
a017 = a002 - a008;
a011 = a018 - a000;
a012 -= a006;
a010 += a018;
a008 += a018;
a004 = a001 + a012;
}
a009 = a015 - a014;
a008 = a011 + a009;
a009 = a012 - a010;
a005 = a015 + a008;
a011 = a002 - a002;
a003 -= a010;
a000 = a005 - -3;
a015 = a012 + a010;
a009 = a010 - a013;
a017 = a002 - a009;
a013 = a014 + a001;
} else {
a014 -= a016;
a011 += a011;
a010 -= -3;
a005 = a000 - a010;
a012 = a019 + a002;
a002 -= cur;
a018 = cur + cur;
a010 = a015 + a006;
a012 = -3 - a006;
a005 = a013 + a018;
a010 -= a004;
a012 = a018 - a017;
a010 -= a016;
a001 = -1 - a006;
a016 = a011 - a004;
a004 = a006 + a012;
a008 = a014 + a008;
a009 += a004;
a000 = a001 + a007;
a013 = a017 - a011;
a007 = a003 * -5;
a015 -= a019;
a000 = a011 - a017;
a008 -= a009;
a011 -= 0;
}
a001 -= a014;
cur -= a006;
a006 -= cur;
a006 = a018 - a007;
a015 = a011 + a010;
a012 += a001;
a015 = a002 - a016;
a010 = a002 - a000;
a016 += a016;
a013 += a018;
a016 = a003 + a013;
a005 += a018;
cur = a001 + a014;
a012 += 1;
a001 += a003;
a012 -= cur;
a007 -= a019;
a018 += a008;
a013 += a016;
a008 = a001 - 2;
a013 -= a001;
a008 -= a001;
a019 += a018;
}
output.collect(prefix, new IntWritable(a016));
}
