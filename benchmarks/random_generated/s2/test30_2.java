// Note: only +, - operations
// Parameters:
//   Variables:   30
//   Baselines:   300
//   If-Branches: 30

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a024 -= a029;
if (a018 == a005) {
a016 += a025;
a018 = a003 - a017;
cur = a020 + cur;
a010 = a014 + a018;
if (a002 != a007) {
a003 -= a003;
a016 = a023 - a026;
a011 = a000 + a025;
a011 = a025 + a019;
} else {
a005 -= a023;
a029 -= a015;
a006 = a009 - a014;
a029 = a023 - a021;
a001 -= a029;
a025 = 4 - a015;
a004 += a020;
if (a008 < a011) {
a004 += cur;
a003 -= a004;
a025 = a029 + a019;
a007 = a008 - a017;
} else {
a024 -= a006;
a028 = a002 - a000;
a007 += a000;
a027 += a028;
a027 -= a003;
a001 -= a007;
if (a010 < a027) {
a009 = a026 + a013;
a005 -= a025;
} else {
a027 += a023;
}
if (a021 <= a023) {
a017 += -4;
a000 += a028;
a001 -= a018;
a017 = a028 - a011;
if (a019 != a006) {
a015 = a001 + a019;
a010 = cur + a015;
a008 = a027 - a014;
a012 = a021 - -2;
a012 += a023;
if (a016 < a002) {
a003 = a022 + a001;
} else {
if (a004 >= a020) {
a014 = a001 + cur;
} else {
a026 = a004 + a022;
a019 -= a017;
}
a003 += a018;
a024 = a019 - a003;
}
a019 -= a022;
a026 = a012 - a022;
a000 -= a026;
a000 += a005;
a000 -= a005;
a012 = a022 + a026;
} else {
a006 = a011 + a026;
a017 += a026;
if (a001 == a007) {
a021 -= -3;
a008 -= a028;
a023 -= a012;
a001 = a003 + a026;
a022 = a018 - a007;
a012 = a018 - a016;
} else {
a003 -= a010;
a008 = a004 - a024;
a015 = a014 + a009;
a024 = a014 + a014;
a002 = a011 - a026;
a024 += a006;
if (a020 <= a022) {
a021 += a010;
a004 -= a005;
a007 = a020 - a011;
if (a011 >= a006) {
a001 = a022 + a022;
a006 = a001 + a019;
} else {
a013 -= a014;
a023 += a011;
a027 = a012 + a024;
a006 = a009 - a020;
}
a019 += a010;
a014 = a013 - a000;
a010 = a022 - a020;
a017 += a006;
a027 = a012 - a008;
a007 = a026 + a001;
a023 = a012 - a011;
if (a028 == a002) {
a014 -= -5;
a026 = a000 + a009;
} else {
a024 -= a009;
a014 = a000 - a006;
a023 = a014 + a009;
a002 = a015 - a019;
}
a027 += a004;
if (a029 >= -5) {
a028 = a028 - a005;
a006 += a008;
if (a014 < a008) {
} else {
a009 = a020 + cur;
a018 = a006 - a006;
a018 -= a007;
a024 = a022 - a004;
a021 = a009 - a011;
a022 = a009 - a002;
a028 = a012 - a025;
if (a022 != a010) {
a004 = a007 + a000;
a024 = a027 + a022;
a020 += a014;
a001 -= a002;
} else {
a020 -= a021;
a020 += a003;
a008 = a013 - a009;
a021 += a021;
a004 = a001 + a024;
if (a027 < a010) {
} else {
a011 = a017 - a008;
a004 = 2 + a002;
a009 = a026 - a025;
a022 += a000;
if (a016 < a022) {
a019 += a028;
if (a014 >= -5) {
if (a001 != cur) {
a008 += a009;
a017 = a014 + a024;
a022 -= a015;
a023 = a006 - a028;
a023 += a008;
a002 += a028;
} else {
a024 -= a001;
if (a005 != a025) {
a029 = a024 - a009;
a001 -= a007;
a024 = -5 - a019;
a011 = a017 + a022;
a005 = a019 + a021;
a001 -= a028;
if (a021 >= a019) {
a025 = a005 + a009;
a028 = a001 + a019;
a003 -= a017;
a024 = a012 - a023;
a004 -= a011;
a029 += a029;
a008 = -5 - a003;
if (a029 <= a013) {
a027 = a009 - a029;
a015 = a012 + a004;
a014 = a008 + a005;
a028 = a007 + cur;
} else {
a001 += a012;
a023 = a021 + a020;
a014 = a028 + 0;
a029 += a009;
a018 += a019;
a001 = a003 + a017;
a016 = a016 + a014;
}
a003 = a003 + a008;
} else {
a003 += a023;
a012 += a024;
a015 += a024;
a005 += a011;
a003 -= cur;
a026 = a022 + a028;
a021 = a023 + a019;
}
a013 += a027;
a027 += a025;
a029 += a027;
a004 -= a012;
if (a028 <= a001) {
cur -= a029;
a014 = a011 - a013;
a020 = a019 + a014;
if (cur == a017) {
} else {
a024 += a028;
a029 -= a028;
if (a010 < a008) {
if (a005 >= a009) {
a003 = a017 + a023;
a024 += a026;
a027 += a016;
a025 += a003;
a011 = a007 - a001;
a005 = a025 - a008;
a024 = a015 + a018;
} else {
}
a013 -= a026;
a001 = a007 + a011;
a013 -= a018;
a006 = a018 - a025;
a006 += a005;
} else {
a021 += a000;
a029 = a011 + a014;
}
a009 = a029 - a024;
}
a013 -= a011;
a004 -= a011;
a004 = a026 + a026;
a029 = a008 + a011;
a015 = a007 + a002;
a009 = a016 + cur;
cur += a002;
if (a025 <= a013) {
cur = a012 + 0;
} else {
cur -= a015;
a027 -= a024;
a013 = a022 + a000;
a003 = a000 - a007;
}
a029 = a021 - a021;
} else {
cur = a009 - a023;
a020 = a014 + a001;
if (a022 >= a014) {
a020 += a014;
a012 = a019 + a026;
a023 -= a020;
a010 = a012 - cur;
a004 -= a013;
a006 = a018 - a003;
a020 = a005 + a014;
} else {
a000 = a008 + a021;
a006 -= a013;
a004 = a024 - a019;
a016 = a021 - a019;
a008 = a026 - a024;
a011 -= a026;
a017 = a019 + 1;
if (a025 != a004) {
a015 = a024 - a014;
a026 = a004 - a020;
a011 = a024 + a028;
a006 = a013 + a015;
a019 = a023 + a016;
a009 = a027 - a010;
a005 += a011;
} else {
a004 = a026 - a029;
a020 = a028 + a023;
a009 = a026 + a013;
if (a028 > a016) {
a018 = cur + a021;
a006 = a009 + a013;
a019 = a013 + a019;
a022 = a023 + a023;
a002 += a009;
a004 = a025 + a012;
a029 += a003;
} else {
}
a006 = a016 - a012;
a025 = a012 - a016;
a007 -= a007;
a027 += a025;
a027 -= cur;
}
a002 += a023;
a024 = a020 + a019;
a020 = a002 + a026;
a011 -= a002;
a013 = a014 + a012;
a017 += a023;
}
}
a014 += a020;
a008 += a017;
} else {
a023 += a026;
}
a017 -= a004;
a018 += a001;
}
a029 = a026 + a024;
a023 += a027;
a010 = a013 - a011;
a012 = a022 * 0;
a008 = a011 - a022;
} else {
a011 = cur - a021;
a020 += a020;
a023 += a012;
a012 += a023;
}
a029 = a017 - a026;
a027 = a010 + a018;
a007 = a002 - a004;
} else {
a009 += a001;
a007 -= a019;
a029 = a026 - a021;
a001 = a025 + a011;
a015 = a004 - a004;
a019 += a002;
}
a001 = a029 - -2;
a017 = a026 + a023;
a012 = a024 + a003;
a020 = a017 + a006;
a015 = a017 - a011;
}
a016 = a011 - a009;
a021 += a015;
a022 -= a029;
a001 = a014 + a019;
a010 += a009;
}
a026 -= a026;
a013 -= a019;
a003 += a006;
a007 = a011 + a018;
}
a004 = a023 - a006;
cur += a011;
a026 += a010;
a006 = a003 - -2;
a012 += a018;
a017 = a024 + a019;
a017 = a024 - a012;
} else {
a023 += a008;
a006 -= a004;
a013 += a020;
a015 -= a010;
}
a023 = a008 - a015;
a006 = a026 + a012;
} else {
}
a020 = a016 - a009;
a001 -= a004;
a011 = a019 + a019;
a029 -= a008;
a022 -= a004;
}
a027 = a011 + a010;
}
a006 = a017 + a012;
a014 = a011 + -5;
} else {
}
a028 -= a014;
a011 += a025;
a029 = a018 - a008;
a006 = a029 + a003;
a014 = a003 + a011;
}
a027 = a027 + a012;
a018 = cur + cur;
}
a024 = a018 - a014;
a005 = a020 + a006;
a024 = a005 + a005;
} else {
}
a025 = a007 + a024;
a005 = a004 + a028;
}
output.collect(prefix, new IntWritable(a020));
}
