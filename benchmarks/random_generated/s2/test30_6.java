// Note: only +, - operations
// Parameters:
//   Variables:   30
//   Baselines:   300
//   If-Branches: 30

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
if (cur != a017) {
a015 = a017 - a005;
a022 -= a017;
a003 += a014;
a001 = a029 - a018;
a012 += 3;
a013 = a001 + a028;
if (a005 >= a013) {
a018 = a020 * -2;
a009 += a025;
a009 = a026 - a016;
a002 = cur - a015;
a018 += a000;
} else {
a004 = a006 - a005;
a015 -= a006;
a000 = a008 + a027;
}
a029 = a026 + a020;
a022 = a019 + a017;
a029 = a023 + a011;
a009 = cur + a020;
a024 = a018 - a006;
a018 += a015;
a024 += a019;
} else {
a021 = a019 + a016;
a017 = a002 - a024;
}
a009 -= a028;
a015 += a005;
a000 += a012;
a018 = a021 + a021;
if (a027 < a023) {
a018 -= a000;
a001 = -1 - a015;
a015 = a026 + a002;
a026 = a029 + a015;
} else {
a008 = a028 + a022;
a019 -= a005;
a023 += a025;
a007 += a026;
a010 += a026;
}
a025 += a002;
a006 -= a002;
a018 -= a008;
a010 += a003;
a020 = a029 - a013;
a011 -= a005;
if (cur < a017) {
a010 -= a002;
a021 = a007 + a009;
a016 = a002 - a005;
a027 = a008 + a009;
} else {
a009 += a003;
a004 += a003;
cur = a015 + a029;
}
a007 -= a029;
a000 = a018 + cur;
a011 = a018 - a029;
a009 += a015;
a007 = a023 - a024;
a002 -= a025;
a005 = a017 + a024;
if (a009 < a021) {
a007 = cur - a018;
a007 -= a025;
a002 = a021 + a009;
a015 += a020;
a010 = a001 - cur;
a009 += a011;
a001 = a009 + a022;
if (a028 != a021) {
} else {
a029 -= a020;
}
a015 += a010;
a007 += a026;
a016 = a006 + a000;
} else {
a002 += a029;
}
cur += a021;
a018 -= a017;
a024 += a007;
a010 = cur - a021;
a003 = a025 + a004;
a023 = a020 + a020;
if (a017 != a014) {
a007 -= a020;
a026 = a004 + a006;
if (a015 >= a024) {
a011 -= cur;
a002 = a020 - a000;
a029 += cur;
if (a015 == a018) {
a001 = a003 + cur;
a010 += a009;
a029 -= a022;
a000 -= a011;
a018 = a027 - a026;
a009 = a001 + a010;
a016 = a021 + cur;
} else {
a021 = a004 - a010;
if (a007 < a019) {
a003 += a023;
a003 += -5;
if (a023 <= a012) {
a029 = a010 + cur;
a014 -= cur;
a012 = a024 + a027;
a021 = a004 + a021;
a000 -= a013;
a001 = a013 + a017;
a018 = a001 - -2;
} else {
}
a015 -= a024;
a006 += a019;
a014 += a003;
a014 -= a011;
a011 += a006;
a028 += a028;
} else {
a013 += a018;
a021 = a029 + a027;
a017 = a005 - a016;
a025 -= a022;
a013 = a009 + a003;
a003 += a023;
}
a006 = a020 - cur;
a027 = a017 - a015;
if (cur < a011) {
a015 = a029 + a020;
if (a018 == a023) {
a028 -= a022;
a016 -= a017;
a009 = a002 - a011;
a011 += a015;
a015 += a027;
if (a004 < a019) {
a027 = a001 - a017;
a029 -= a012;
a028 -= a027;
} else {
a021 = a012 + a013;
a027 += a023;
}
a010 = a028 - a024;
a025 = a024 - a019;
if (a007 <= a021) {
a025 = a012 - a002;
if (a023 != a022) {
a010 += a004;
a003 -= a003;
a029 = a012 + a028;
a019 = a007 + a005;
a027 = a001 + a015;
a013 = a025 - a026;
} else {
if (a019 >= a016) {
a027 -= a007;
a027 += a025;
a010 = a017 - a017;
a019 = a005 - a027;
} else {
a018 -= a011;
a015 -= a012;
}
a000 -= a028;
a019 -= a025;
a029 = a012 + a022;
a009 -= a003;
a015 = a003 - a023;
a014 -= 2;
a019 = a019 + a009;
}
} else {
a025 += a009;
a026 += cur;
a023 += a000;
a003 -= a004;
cur = a000 - a029;
if (a017 < a020) {
cur -= a009;
a015 += cur;
a029 -= a022;
} else {
a009 = a015 + a024;
a000 = a009 - a003;
a012 = a027 + a006;
}
a000 = a026 + cur;
if (a001 < a007) {
a014 = a029 - a006;
a002 = a023 + a013;
a017 += a014;
a023 -= a025;
a022 += a025;
a003 += a024;
a016 -= a023;
} else {
a014 -= a004;
a016 += a019;
a001 = a013 - a021;
a014 -= a006;
a001 = a015 + a007;
a017 += a003;
a001 -= cur;
}
}
if (a027 < a017) {
a010 = a004 + a013;
} else {
a018 -= a021;
a021 = a010 + a027;
a007 = a006 + a012;
a017 -= a022;
a017 += a013;
a003 -= a026;
if (a027 < a026) {
a002 += a021;
a005 = a014 + -3;
a019 -= a010;
a027 = a012 - a023;
a005 += a013;
a013 += -4;
if (a007 == -2) {
a003 += a022;
a011 = a017 + a005;
a012 = a024 + a027;
cur -= a000;
a020 += cur;
a006 = a025 - a018;
} else {
a001 = a000 - a007;
a022 += a017;
a024 += a014;
a006 -= a008;
a023 += a024;
a000 += a009;
a028 += a026;
if (a015 != a029) {
a005 += a028;
a002 += a010;
if (a008 == a012) {
a020 = a008 - a021;
if (a014 >= a007) {
a019 += a028;
a004 = a023 + a006;
a004 = a002 + a025;
a016 -= a019;
a001 = a020 - a010;
if (a026 > a011) {
if (a018 == a029) {
a011 -= a005;
a024 = a021 - a011;
} else {
a024 = a028 - 2;
a002 = a008 - a020;
a007 += a005;
a026 -= a027;
a013 = a005 - a028;
}
cur = a004 - a015;
cur = a022 + a008;
a020 -= a029;
a029 += a011;
a001 = a019 - a028;
a023 -= a029;
a001 += a020;
} else {
a022 += a021;
a029 = a007 + a010;
if (cur < a000) {
if (a019 == a023) {
a013 += a026;
a015 = a027 - a022;
a012 -= 4;
a010 = a001 + a014;
a027 += a013;
a026 += a019;
a019 = a004 + a024;
if (a021 < a018) {
a003 = a013 + a012;
a006 -= a007;
a021 -= a023;
a010 = a012 * -5;
} else {
a025 += a024;
}
a007 = a019 - a010;
} else {
}
a017 = a016 - a029;
a016 = a029 - a019;
a025 += a012;
} else {
a027 -= a023;
a002 -= a014;
a023 = a020 + a013;
a025 = a024 + a003;
a026 -= a008;
a015 += a003;
a004 = -2 + a001;
}
a010 = a002 + a014;
a021 = a021 - a021;
a024 -= a023;
a004 += a013;
a013 = a022 - a006;
}
a029 -= a006;
a003 = a027 - a024;
a020 += a009;
a016 -= a024;
a023 = a005 * 1;
a021 = a001 + a009;
a016 -= a007;
} else {
a015 = a008 - a001;
a028 += a022;
a012 = a012 - a003;
a029 += a005;
a023 = a029 + a014;
a018 = a006 + a014;
a004 += a019;
}
a005 -= a000;
a000 -= a008;
a029 = a020 - a028;
} else {
a028 -= a004;
cur = a002 + a008;
}
a009 = a006 + a014;
a025 = a010 + a011;
a028 -= a013;
a025 = a003 - a003;
} else {
a010 = a005 + a003;
a024 = a013 + a013;
a015 += a010;
a016 = a005 - a000;
a012 -= a025;
a029 += a017;
}
}
a027 = a004 + a003;
} else {
a014 = a014 + a023;
a007 = -5 + a026;
a023 = a002 + a004;
a007 = a028 - a013;
a020 -= a001;
a017 = a023 - a009;
}
}
} else {
a024 = a008 - a016;
a029 += a009;
a004 -= a007;
cur = a028 * 0;
a002 -= a021;
a007 -= a028;
a024 = a015 + a001;
}
} else {
}
a008 -= a023;
a004 = a018 + a025;
a012 -= a009;
a026 = a029 + a006;
a008 = a002 - a001;
a025 = a001 - a019;
a024 = a007 + a000;
}
} else {
a008 = a010 + a026;
a026 = a023 + a002;
}
} else {
}
a016 -= a029;
}
output.collect(prefix, new IntWritable(a020));
}
