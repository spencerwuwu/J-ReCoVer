// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a010 += a003;
a016 += a002;
cur = a023 - a002;
a023 = 2 + a018;
cur = a023 + a011;
a008 -= a013;
a004 += a016;
a005 = a004 - a005;
a018 = a021 + a003;
a023 = 4 - a011;
cur = a017 - a012;
if (a015 > a019) {
a016 = a010 + a017;
a023 += cur;
a023 += a005;
a012 -= a012;
a014 = a011 + a013;
a022 = a002 + a012;
a022 -= a000;
a005 = a000 + a014;
a003 = a013 - a001;
a012 = a024 - a010;
a021 = a010 - a022;
a001 = a018 - a003;
a023 += a009;
a024 -= a018;
a016 += a003;
a005 += a006;
a013 = a015 + a021;
a014 -= a006;
a022 -= a007;
a023 += a011;
a008 = a017 + a004;
cur += a006;
a007 = a009 - a019;
a003 -= a002;
a000 -= a024;
a001 -= a020;
a006 = a011 - a008;
if (a003 >= a018) {
a000 = a016 - a003;
a002 = a012 + a018;
cur -= a003;
a014 = a023 - a005;
a001 -= a009;
a000 = 0 - a013;
a004 -= a015;
a005 = a003 + a006;
a005 = a002 - a015;
a014 += a005;
a010 -= a004;
a010 = a022 + a010;
a001 -= a019;
a016 = a020 - a001;
a008 = a020 - a010;
a012 += a013;
a010 = a015 - a001;
if (a018 > a021) {
a002 = a016 + a008;
a003 += a023;
a016 = a024 - 3;
a001 -= a008;
a013 += a004;
a004 -= a002;
a011 = a007 + a020;
a013 = a012 - a013;
a014 -= a003;
a004 -= a014;
} else {
a014 = a008 + a024;
a011 = a017 + a011;
a008 -= a015;
a009 += a001;
a007 = cur + a017;
a013 = a019 - a009;
a021 -= a014;
a011 -= a021;
a022 -= -3;
a016 -= a024;
a009 -= a001;
a006 += a022;
a016 -= a012;
a001 = a023 + a010;
a011 = cur - a015;
a020 += a010;
a020 -= a015;
a023 = a009 - a004;
a002 = a017 - a018;
a006 = a005 + a020;
a017 = a024 - a011;
a006 = a020 - a007;
a016 = a015 + a011;
a008 -= a003;
a010 -= a024;
a014 = a019 + -3;
a003 = a015 + a000;
a010 += a016;
a005 += a004;
a008 -= a007;
a007 -= a008;
if (a007 != a022) {
a014 -= cur;
a023 = a003 + a022;
cur += a008;
a017 = a016 + a008;
a006 = 0 - a000;
a017 = a002 - a022;
a008 = a015 + a013;
a022 -= cur;
a016 = a016 - a018;
a005 = a023 - a001;
a004 = a024 + a009;
a020 += a014;
a011 -= a020;
a008 = a004 + a016;
cur = a022 - a016;
if (a003 == a008) {
a010 -= a012;
a013 = a003 + a000;
a021 = a006 - a009;
a004 -= a011;
a015 += a011;
a015 -= a020;
a001 -= a006;
a023 += a000;
a020 = a016 - a017;
a015 = a018 + a004;
a007 = a018 - a009;
cur -= a006;
a002 = a004 - a002;
a009 -= a017;
a023 -= a022;
a003 += a009;
a005 = a000 + a014;
a021 += a001;
a012 = cur + cur;
a024 += a008;
a010 -= a021;
a014 -= a005;
} else {
a005 += cur;
a022 = a016 - a008;
a017 = a018 + a001;
a013 -= a017;
a009 = a023 - a021;
a009 += a013;
a000 -= a013;
a022 += a013;
a006 = a003 - a017;
a006 += a016;
a015 += a014;
a024 = a018 + a008;
a013 -= a005;
a008 = cur + a001;
a008 = a018 + a021;
a016 += a001;
a007 -= a004;
a002 -= cur;
a007 = a002 - a002;
a015 = a014 + a009;
a011 = cur - a015;
a008 = a014 + a011;
}
} else {
a018 += a001;
cur = a001 - cur;
a015 = a022 - a015;
}
a000 += a023;
cur += a003;
a009 += -3;
a015 = a012 + a008;
a003 = a001 - a008;
a000 = a005 + a007;
a002 = a016 - a014;
a006 -= a010;
a001 = a010 - a015;
a019 += a021;
a007 = a011 - a005;
a002 += a020;
a022 = a000 + a019;
a021 -= a019;
a002 -= a019;
a019 -= a001;
a014 -= a009;
a021 += a013;
a012 += cur;
a020 = a022 - a012;
a017 = a002 * 2;
a000 = a022 + a017;
a011 -= a022;
a010 = a010 + a013;
a003 += a010;
a016 = a007 + a005;
a005 -= a000;
a014 += a000;
a009 = a024 + a000;
a002 += a005;
a022 += a001;
}
a004 -= a020;
a005 += a000;
a015 -= a007;
a024 = a002 + a006;
a007 -= a023;
a018 -= a005;
a002 -= a015;
a014 = a022 + a011;
a011 -= a017;
a006 = a008 - a024;
a024 = a014 + a003;
a017 += a020;
a016 -= a007;
a004 = a014 + a023;
cur = a001 - cur;
a013 = a008 + -2;
a017 = a024 - cur;
a014 = a018 + a010;
a001 = a005 + a016;
a000 += a006;
a000 = a014 + a009;
a005 = a012 - a011;
a013 += a002;
a003 -= a011;
a019 = a014 - a002;
a008 -= a016;
a007 += a009;
cur -= a016;
a014 = a007 - a022;
a023 = a020 + a021;
a007 = a005 + a017;
a001 += a015;
a014 += a013;
} else {
a015 -= a003;
a000 = a014 - a016;
a016 = a001 + 3;
cur -= cur;
a021 = a012 + a006;
a017 = a013 + a012;
a022 = a019 + 1;
a023 -= a005;
a023 -= a002;
}
a017 -= a020;
a020 -= a007;
a024 = a003 + a000;
a008 = a015 + a009;
a013 += a017;
a002 = a016 - a013;
a018 += a004;
a018 -= a011;
a014 = a011 - a012;
} else {
a023 -= a007;
a015 -= a012;
a014 += a008;
a023 += a012;
a001 += 2;
a005 -= a001;
a004 -= a014;
a003 += a004;
a012 += a015;
}
a003 += a016;
}
output.collect(prefix, new IntWritable(a003));
}
