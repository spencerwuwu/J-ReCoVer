// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a006 = -2 + a010;
a023 -= a024;
a003 += a013;
a015 += a017;
a011 -= a009;
a012 = a003 + a024;
a022 += a010;
a015 += a009;
a007 += a001;
a010 -= cur;
a019 = a023 - a007;
a015 = a010 + a006;
a003 -= a006;
a012 -= a016;
a012 += a007;
a005 = a015 - a001;
if (a022 != cur) {
a016 = a013 - a005;
a008 += 2;
a016 += a011;
a021 = a003 * 0;
a005 = a006 - a004;
a022 = a023 + a023;
a019 = a008 + a005;
a019 = a000 + a015;
a002 = cur + a018;
a010 += a000;
a023 = a021 - a021;
} else {
a017 -= a012;
a002 = a018 - 0;
a008 -= a021;
a010 -= a009;
a017 -= a000;
a022 -= a010;
a018 = a004 * 3;
a020 = a009 - a014;
a001 = a020 + a011;
a015 = a008 + a019;
a013 = a010 - a010;
a000 = a012 * 3;
a007 -= a020;
a017 = a006 - a013;
a016 = a010 + a001;
a004 = a005 + a000;
a019 -= a008;
a015 = a003 - a022;
a001 = a015 + a009;
cur = a003 + a021;
a004 = a005 * -4;
a013 = a002 + a020;
a003 = a013 - a009;
a012 = a017 + a006;
cur = a007 - a014;
if (a009 >= a021) {
a021 = a007 + a023;
a007 = a004 - a000;
a021 = a016 + a002;
a019 = a011 + a001;
a013 = a006 - a003;
a003 -= a010;
a010 = a012 + a003;
a012 = a017 + a008;
a006 -= a012;
a020 = a008 - a004;
a012 = a017 - 1;
a015 = a000 + a013;
a000 += 2;
a010 -= a023;
a015 += 3;
a001 += a019;
a012 = a021 - a020;
a014 -= a011;
cur = a013 - a003;
a024 = a024 + a016;
a020 = a003 + a006;
a003 -= a008;
a012 += a004;
a011 = a009 - -2;
a014 -= a010;
a016 = a013 + a005;
a007 -= a000;
if (a022 <= a003) {
a023 += cur;
cur -= a024;
a013 += a022;
a020 += a002;
a009 -= a013;
a008 += a013;
cur -= a009;
a015 = a006 - a008;
a020 -= a000;
a008 += a010;
a006 -= a015;
a008 -= a019;
a021 -= a010;
a023 += a013;
a015 = a018 + a020;
a022 += a008;
} else {
a010 = a012 + a020;
a007 = a020 - a017;
a016 += a001;
a021 += a020;
a005 = a012 - a012;
a021 = a014 - a018;
a011 = a013 + a018;
a022 += a015;
a011 = a018 - a011;
a018 += a022;
a016 -= a015;
a023 += a017;
a001 += a004;
a006 = a017 - a015;
a021 += a022;
a006 = -2 - a014;
a019 += a022;
a018 -= a005;
a020 -= a006;
a021 = a001 - a005;
a004 = a022 - a011;
a002 -= a011;
a004 -= a017;
if (a001 >= a012) {
a014 += a012;
a005 -= a007;
a024 = a021 - a024;
a002 = a022 - a010;
a021 = a003 - a019;
cur += a018;
a014 = a001 - a015;
a010 = a014 + a014;
a005 = a024 - 4;
a011 = a015 - a006;
a008 = a020 + a023;
a006 += a017;
a011 += a022;
a024 = a003 + a003;
a008 = a012 - -1;
a014 = a011 + a009;
a017 = a009 - a008;
a012 -= a004;
cur = 2 + a018;
a005 = a002 + a013;
} else {
a005 += a024;
a015 -= cur;
a010 -= a019;
a012 -= cur;
a023 += a002;
a018 = a014 - a015;
a019 -= a012;
a020 = cur + a024;
a002 = a009 + a009;
a012 = a021 + a013;
a010 += -2;
a022 += cur;
a008 += a007;
a019 = a022 + a019;
a017 = a016 - a020;
a023 -= a001;
a003 -= a024;
a013 = a013 - a017;
a008 += a007;
a000 -= a017;
a019 = a010 + a008;
a014 = a014 + a001;
a006 -= a013;
a013 += 4;
a003 -= a020;
a005 -= a002;
a004 = a014 - a015;
a006 = a008 + a011;
a007 = a008 + a006;
a021 = a018 - a022;
a002 = a019 - a019;
a007 = a010 * -3;
a002 = a017 - a016;
if (a024 <= a006) {
a007 = a011 - a000;
a007 -= a020;
a010 -= a023;
a018 = a001 + a011;
a003 = a013 + a022;
cur = a007 + a023;
a023 = a010 + a006;
a000 += a009;
a001 += a010;
cur = a010 - a023;
a022 -= a023;
a009 = a020 - a015;
a005 = a013 - a010;
a019 = a019 - 2;
a016 -= a001;
a000 = a004 + a021;
a004 = a013 - a012;
a014 -= a002;
a024 += a019;
cur = a014 * 3;
cur = a014 + a021;
a022 = cur + a011;
} else {
a019 = a017 + a001;
a008 += a007;
a009 -= a009;
a023 -= a019;
a006 = a020 - a015;
a021 -= a005;
a005 += a009;
a022 += a024;
a015 -= -3;
a017 -= a015;
a023 = a022 - a004;
a022 = -4 + a014;
a006 -= a024;
a013 += a017;
a020 += a023;
a015 = a017 + a009;
a019 -= a005;
a009 -= a005;
a012 = a022 + a011;
a007 = a021 + a011;
a016 -= a022;
a021 = a012 - a014;
a001 -= a017;
a024 -= a024;
a018 -= a006;
a017 = a017 + -3;
a001 -= a016;
a003 = a001 * -5;
a022 = a023 - a000;
a011 = a024 - a000;
a012 = a005 - a016;
a003 = a014 - a005;
a001 += a006;
}
a007 = a019 - a000;
a015 = a008 + a012;
a024 += a022;
a003 += a011;
a016 -= a011;
a022 += a012;
a011 -= a005;
a019 = a018 - a005;
a015 += a017;
a005 = a004 + a013;
a016 = a021 + a011;
a002 = a013 - a006;
a014 = a005 + a009;
a017 = a008 + a000;
}
a004 = a023 + 0;
a009 = a012 - a022;
a000 += cur;
a003 -= a014;
a000 = a014 + a003;
a021 = a014 + a019;
}
a002 = a014 + 0;
} else {
a007 += a023;
}
}
a024 -= a006;
a024 -= a005;
}
output.collect(prefix, new IntWritable(a003));
}
