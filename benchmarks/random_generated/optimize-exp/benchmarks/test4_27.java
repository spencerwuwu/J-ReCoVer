// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a004 += a019;
a019 -= a005;
a002 += a016;
a019 = a005 - a015;
a000 -= a008;
a016 = a003 + a009;
a015 = a016 - cur;
a016 = a019 + a001;
a000 = a000 + a012;
a004 = a008 - a001;
a000 += a006;
a007 -= a010;
a019 = a019 - a007;
a019 -= a014;
a018 = a003 - a019;
a010 -= a013;
a016 = a018 + a011;
a005 -= a007;
a015 += a017;
a009 = a011 + a018;
a015 -= a017;
a019 = a006 + a001;
a010 -= a016;
if (a016 != a008) {
a010 = a010 + a016;
a015 = a004 - a011;
a018 = a003 + a009;
a011 = a018 + a003;
a019 = a010 - a001;
a004 -= a018;
a019 = a014 + a011;
a007 -= a017;
a001 += a019;
a009 += a007;
a007 -= a001;
a004 = a012 - a009;
a000 = a013 + a003;
a013 += a001;
a013 = a009 - a008;
} else {
a003 += a007;
a000 = a003 - cur;
a019 += a007;
a012 -= a019;
a004 = a009 + a005;
a015 = 2 - a010;
a005 += a016;
a018 = a003 - cur;
a016 = a007 + a019;
a005 -= a014;
a000 += a007;
a007 -= a015;
a015 = 2 - a018;
a013 += a018;
a015 += a012;
a019 = a018 - a000;
a006 += a015;
a003 -= a000;
a016 = -4 - a015;
a000 = a004 + a001;
cur += a010;
a008 = a012 - 3;
a012 = a017 - a005;
a014 = a004 + a008;
a017 -= cur;
a012 = a002 + a019;
a000 -= a002;
}
a009 -= a016;
a015 = a008 - -3;
a008 += a019;
a015 = a007 - a005;
a019 -= a009;
a013 = a003 + a018;
a008 = a012 + a016;
a016 = a012 + a017;
a019 -= a017;
a015 += a002;
a012 = a009 - a008;
a009 += a015;
a017 -= a012;
cur += a008;
a016 = a000 + a016;
a016 = a008 + a016;
a007 = a007 + a008;
a014 = a004 - -2;
if (a004 >= a014) {
a016 += a002;
a014 += a001;
a007 -= a011;
a007 += a009;
cur = cur - a003;
a015 -= a010;
} else {
a016 -= a015;
cur = a012 - a006;
a005 -= a005;
a014 -= a005;
a005 -= a012;
a001 = a001 - a011;
a007 -= a006;
a012 = a019 - a010;
a015 = a013 - a003;
a015 = a004 - a005;
a016 = a003 + a006;
a006 += a003;
a012 -= a011;
a006 -= cur;
a013 -= a018;
a011 += a004;
a000 -= a009;
a019 = a011 + a016;
a005 += a005;
a002 = a000 + a019;
a011 -= a007;
a008 += 3;
a015 += a014;
a017 = a007 - a002;
a008 += a013;
a015 = a015 + a010;
a000 = a017 - a011;
a007 -= a004;
a019 += a017;
a012 -= a012;
a019 -= a019;
a008 = a017 + a014;
a008 = a015 + a009;
}
a019 = a001 + cur;
a005 = a019 - a006;
a018 += a004;
a006 = -1 - a018;
a007 -= a009;
a009 -= a013;
a011 = -1 + a019;
a000 = a003 + 2;
a018 = a005 - a006;
a018 = cur - a005;
a006 = a010 + 3;
a001 -= a010;
a018 -= a017;
a014 = a012 - a008;
a005 = a000 + a005;
a011 = a008 - a001;
a015 = a012 - a015;
a017 = a019 - a014;
a010 += a018;
a007 = cur + a013;
a011 = a003 + a017;
a016 += a017;
cur = a007 + a012;
if (a016 != a004) {
a010 -= a004;
a008 -= a013;
a017 += a012;
a002 = a002 - a005;
a014 = a004 + a009;
a009 += a001;
a007 -= a014;
a008 += a008;
if (a008 >= a008) {
a019 += a008;
cur -= a018;
a014 -= a007;
cur -= a009;
a014 = a002 + cur;
a018 += a010;
a001 += a001;
a014 += a014;
a001 = a000 + a019;
a003 += a010;
a017 = a003 - a012;
a009 += a002;
a003 = a010 - a003;
a016 = a013 - a005;
a008 = a010 - a012;
a010 -= cur;
a002 += a009;
a013 -= a000;
a006 += a009;
a018 += a001;
a010 = cur + -4;
a000 += a006;
a000 -= a016;
a011 += a000;
a013 = a009 - a011;
a017 = a002 + a012;
a016 = a012 + a005;
a010 = a000 - a006;
a018 -= a009;
a012 = cur - a014;
a014 = a017 + a004;
a009 -= a016;
} else {
a016 = a010 - a016;
a003 = a001 + a006;
a013 += a001;
a013 += a014;
a010 = a018 - a013;
a017 = a009 + cur;
a003 += a011;
a003 = a018 - a014;
a002 += a001;
a017 = a014 + a001;
}
} else {
a010 += a015;
}
a002 = a001 - a008;
a014 += a009;
a004 = a010 + a002;
cur -= a008;
}
output.collect(prefix, new IntWritable(a005));
}
