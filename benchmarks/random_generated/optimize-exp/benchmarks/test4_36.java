// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a019 += a002;
a008 = a003 - a009;
a003 += a012;
a015 += a014;
a003 = a002 + a003;
a015 = a002 - a004;
a005 = a015 + a013;
a001 -= cur;
a017 = a018 - a011;
a018 += a006;
a010 = a006 + a013;
a005 += a010;
a001 += a016;
a008 -= a001;
a010 = a007 + a004;
a007 += cur;
a013 += a018;
a015 = a002 + a001;
a009 += cur;
a010 += a003;
a009 = a010 + a014;
a006 -= a003;
a002 = a018 + a000;
a017 -= a018;
a008 += a001;
a012 += a018;
a014 = a015 + a001;
cur = a015 - a019;
cur += a005;
a019 = a016 - a001;
a012 = a005 + a014;
if (a019 == a015) {
a009 = a010 - a015;
a002 += -3;
a000 = a007 + a004;
a018 = a003 - a008;
a001 = a005 - a008;
a015 = a006 * 4;
a009 += a004;
a000 -= a009;
a007 = cur - a011;
a016 = a014 - a001;
a003 -= a008;
a011 = cur - a009;
a002 += a002;
a013 = a008 + a009;
a013 -= a018;
a001 = a012 + a014;
a018 = a011 + a005;
a017 = a017 + a015;
a003 = a004 - a019;
} else {
if (a015 < a002) {
cur += a016;
a004 = a006 - a008;
a014 = a005 + a008;
a015 = a007 + a010;
a009 -= a006;
a006 = a006 - a016;
a004 += a001;
a016 = a003 - a010;
a014 -= a018;
a004 += a014;
a009 += a000;
a008 = a000 - a007;
a008 += a008;
a002 = a004 + a007;
a017 += a010;
a007 = a012 - a000;
a012 = a014 + -3;
a012 = a003 + a016;
a008 -= a015;
a016 -= a006;
a000 -= a003;
a004 = a004 - a015;
a016 = a004 - -2;
a005 = a018 - a015;
a004 = a010 - a006;
a007 = a004 - a005;
a016 -= a001;
a001 = a008 - a004;
a015 = cur - a016;
a003 = a012 + a001;
if (a004 != a013) {
a010 = a007 - a013;
a004 = a008 - a000;
a010 -= a010;
a019 = a017 + a018;
a015 += a001;
a007 -= cur;
a011 -= a012;
a000 -= a001;
a017 -= a014;
a002 -= a017;
if (a015 >= a008) {
a005 = -4 + a017;
a015 += a013;
} else {
a005 += a014;
a014 = a006 + a016;
a007 = cur + a017;
cur = a002 + a018;
a010 -= a014;
a000 -= a006;
a008 = -1 + a005;
a019 = a014 - cur;
a012 -= a008;
a005 -= -3;
a018 = a004 + a011;
a005 += a001;
a018 = a017 - a012;
a011 = a017 - a004;
a010 = a019 + a013;
a016 = a008 + a006;
a005 = a005 - a004;
cur += 3;
a006 = a016 + a014;
a008 += a000;
a004 = a003 - a010;
a005 += a016;
a013 = a000 + cur;
a016 = a007 - a018;
a003 = a016 - a004;
a012 += a012;
a008 = a003 - a010;
}
a000 = a014 - a000;
a014 = a012 - a005;
a006 = a001 - a007;
a007 += a017;
a018 -= a010;
a006 -= a005;
a010 = a003 - a010;
a010 += a012;
a019 -= a019;
a002 = a017 + a006;
a001 += a006;
a017 -= cur;
a002 = a012 + a014;
a011 -= a006;
a010 += a007;
a002 += a008;
a017 -= a013;
a013 = a000 + a019;
a001 += a019;
a000 = a008 + a008;
a016 = a016 + a015;
a003 = a018 - a005;
a001 = a012 + a006;
a010 -= cur;
a018 -= a008;
a009 -= a015;
a002 -= cur;
a011 = a003 - a002;
cur = a006 + a013;
a011 = a018 * 2;
} else {
a019 += a015;
a019 += a019;
a009 = a009 + a000;
a018 = a001 + a006;
a010 -= a011;
cur = a016 - a006;
a009 = a003 - cur;
a016 -= a013;
a015 += a016;
a015 -= a009;
a016 -= a001;
a010 = a010 - a008;
a016 = a005 - a007;
}
a015 += a007;
a013 = a016 - a012;
a005 += a008;
a013 += a012;
a004 += a018;
a003 -= a019;
a001 = a016 + a016;
a008 += a017;
a005 = a004 + cur;
a013 = a002 + a007;
a005 -= a005;
a014 -= a008;
a000 += a007;
a005 = a012 - a009;
a017 -= a005;
a014 = a014 - a013;
a000 = a007 - a018;
a016 -= a001;
a004 = cur - a019;
a002 = a019 + a019;
a012 = a016 - a018;
a018 = a007 + a019;
a001 = a008 - a019;
a001 -= a008;
a011 = 3 + a018;
a010 -= a019;
a019 -= a002;
} else {
a011 = a014 - a015;
a006 = a010 * -3;
a010 += a011;
a018 -= a002;
a017 = a015 + a010;
a012 = a012 - a004;
a010 -= cur;
a017 -= a016;
a016 -= a001;
}
}
a001 -= a015;
a002 = a014 + a006;
}
output.collect(prefix, new IntWritable(a012));
}
