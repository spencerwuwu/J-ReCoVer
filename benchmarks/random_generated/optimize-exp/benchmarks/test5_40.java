// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a012 -= a022;
a021 -= a009;
if (a006 == a007) {
a004 = a024 + a018;
a007 += a016;
a006 -= a009;
a014 += cur;
a016 -= a014;
a020 += a007;
a017 -= a016;
a000 = a021 - a010;
a019 += a007;
a011 -= a005;
a019 = a009 + a008;
a016 -= a007;
cur = cur + a008;
a021 -= a018;
a002 = cur + a009;
a021 -= a010;
a014 = a003 - a023;
a013 = a007 + a005;
a008 -= a011;
a023 += a023;
cur -= a007;
if (a011 <= a000) {
a014 -= a019;
a002 += a019;
if (a016 < a015) {
a003 += a008;
} else {
a012 = a000 + a005;
a020 = -5 + a020;
a006 = a011 - a014;
a003 = a004 - a004;
a023 += a016;
a004 += a003;
a023 += a021;
a005 -= a001;
cur -= a000;
cur += a015;
a014 = a004 + a023;
a018 += a003;
a009 += a000;
a021 = a009 - a022;
a008 = -5 - a011;
a015 -= a009;
a021 = a015 + a015;
}
a002 += a007;
a012 = a005 - a008;
a006 += a017;
a001 = a010 + a007;
a005 = a015 - a006;
a019 -= a004;
} else {
a015 = a017 + a017;
a009 = a024 + 0;
a021 = a013 - a009;
a012 += a006;
a000 += a021;
a016 += cur;
a001 += a004;
a024 += 1;
a007 += a000;
a020 = a000 + a006;
a005 -= 1;
if (a008 == a000) {
a012 -= -1;
a007 += a021;
a018 -= a002;
a022 -= a001;
a022 -= a018;
a002 += a016;
a014 = a022 - a002;
a024 -= a020;
a023 = a004 + a020;
a013 += -3;
a004 -= a003;
a001 = a006 - a009;
a008 = a008 - a004;
a013 -= a021;
a006 += a001;
a004 = a004 - a024;
a010 -= a017;
a018 = a015 + a005;
a005 += a020;
a018 += -3;
a021 = a006 + a022;
a021 = a001 + a014;
a000 -= a009;
a019 -= a012;
a010 = a024 + a008;
a005 = cur - a016;
a002 = a020 - a006;
a000 = a022 + a015;
a006 = a022 - a018;
if (a016 != a007) {
a008 += a024;
a014 += a009;
a021 = a019 - a023;
a016 -= a017;
a019 = a002 - a008;
a009 = a018 - a001;
a013 -= a002;
a023 = a012 - a015;
a000 -= a004;
a024 += a014;
a014 += a015;
a023 -= a006;
a013 = 0 + a013;
a004 += a013;
a004 = a015 + a010;
a009 = a015 - a001;
cur = a007 - a019;
a008 = a013 + a005;
a022 = a003 - a018;
a018 += a015;
a009 = a012 + a016;
a004 = a017 - a009;
a006 += a022;
a023 += a017;
a022 -= a010;
a011 += 4;
a000 -= a006;
a003 += a007;
} else {
a008 = a019 - a022;
a021 = a013 - a009;
a003 -= a022;
a021 -= a016;
a004 += a013;
a012 = a013 + a017;
a012 += a008;
a010 = a005 - 4;
a007 -= a017;
a023 = a008 + a005;
a004 = a015 + a008;
a002 += a012;
a009 = a020 + a013;
a020 -= a010;
a017 += a023;
a011 = a007 - a015;
a021 = a024 - a016;
a014 += a018;
a007 += a000;
a001 = a023 - a008;
a018 -= a019;
a017 += a004;
a007 += a000;
a005 -= 2;
a001 += 2;
a001 = a020 - a008;
a023 -= a015;
a017 = a002 + a014;
a000 -= a013;
a012 = a022 - a017;
a004 += a014;
a024 -= a007;
}
a002 += a008;
a023 -= a010;
a000 = a010 - a006;
a000 += a012;
a011 = a009 - a008;
a012 -= a022;
a005 -= a024;
a010 += a009;
a002 -= a001;
a023 = a006 + a014;
a006 -= a015;
a002 += a006;
a011 += a001;
a017 = a006 - a015;
a024 += a019;
a014 += a004;
a014 = a022 - a003;
a013 += a002;
a019 = a001 + a004;
cur = a001 + a007;
a014 += a019;
a004 -= a018;
a016 += a007;
cur += a024;
} else {
a009 = a024 - a007;
a012 = a008 + -4;
a022 = a005 + 1;
a005 = a011 + cur;
a005 -= a019;
a001 += a014;
a022 -= a002;
a023 -= a014;
a008 -= a010;
cur -= a024;
cur = a014 - 0;
a016 = a011 + 1;
a001 += a017;
a013 = a002 - a016;
a020 = a001 - a018;
a001 += a009;
a014 = a017 + a024;
a018 -= a018;
a000 += a020;
a000 = a012 + a021;
a007 -= a015;
a015 = a006 + a008;
a011 = -5 + a005;
a013 -= a021;
a010 -= a001;
a005 -= cur;
a003 -= a007;
a012 = a017 + a013;
a002 = a001 * 4;
a014 = cur + a011;
a003 = 4 + a019;
a022 += a008;
}
a005 = a009 + a008;
a022 += a013;
a007 = a018 + 2;
a018 -= a022;
a014 = a006 + a006;
a007 += a022;
a000 += a009;
}
a006 += a009;
a022 = a005 - a005;
a000 = cur + a024;
a024 -= a017;
a001 = a017 + a007;
} else {
a021 = -2 - a001;
a016 -= a005;
a008 = a019 - a020;
a012 = a018 + a000;
a017 = a002 + a003;
a018 -= a009;
}
a016 = a023 - a010;
a006 = a003 - a019;
a009 += a015;
a003 -= a002;
a005 += a000;
a023 -= a023;
a023 = a021 + a005;
a004 = a014 - a010;
a018 += a024;
a021 = a014 - a008;
a014 = a023 - a000;
a020 = a014 + a002;
a015 -= a007;
a013 += a011;
a019 += a013;
a004 = a011 - a014;
a015 = -4 - a018;
a005 = a013 - a001;
a020 = a018 * 0;
a016 -= a021;
a007 += a018;
a012 += a005;
a013 = a000 - a014;
a003 = a011 - -5;
a012 = a013 + a020;
a014 += a022;
a002 -= a022;
}
output.collect(prefix, new IntWritable(a009));
}
