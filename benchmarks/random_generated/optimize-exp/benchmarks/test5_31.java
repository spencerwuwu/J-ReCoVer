// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a019 = a010 + a012;
a003 -= a009;
a023 = a002 - a004;
a019 -= a005;
if (a000 != a019) {
a015 = a013 - a002;
cur = a016 - a000;
a000 = a012 - a023;
a021 = a008 + -4;
a003 = a012 + a012;
a001 += a004;
a009 += a024;
a021 -= a019;
a006 = a015 + a009;
a005 -= a018;
a005 = a023 + a004;
a002 = a011 + a015;
a020 = a008 - a017;
a013 -= a000;
a014 -= a018;
a023 -= a008;
if (cur >= a002) {
cur += a014;
a018 = a007 - cur;
a006 += a021;
a009 += a014;
a021 -= a024;
a008 += a003;
a007 = a020 - a022;
a015 += a005;
a008 = a020 * 1;
a011 = -1 + a011;
a005 += a019;
cur = a000 - a012;
a000 -= a013;
a002 -= a010;
a005 = a016 + a016;
a021 = a005 + a017;
a012 = a005 + a009;
} else {
}
a006 = a005 + cur;
a003 += a015;
a009 -= cur;
a007 += a020;
a006 = a011 - a013;
a022 += a023;
a024 -= a003;
a003 = a002 - a022;
a023 += a023;
a004 = a020 + 3;
cur = a017 + a010;
a009 = a023 * 2;
a009 = a018 + a006;
a014 += a004;
a007 -= a005;
a008 = a000 + a023;
a009 = a006 - a021;
a019 += a019;
a000 = a009 + a012;
a016 -= a015;
a010 -= -2;
a002 -= a001;
a006 -= a021;
a017 = a005 + a010;
a002 = a007 + a004;
a006 = a013 + a020;
a002 = a005 + a004;
a006 = cur - a024;
a004 = a002 - a017;
a017 = a012 - a005;
a005 += a004;
a023 = a018 + a010;
if (a008 >= a010) {
a006 -= a018;
a004 += a017;
a013 += a017;
a010 = a020 + a018;
a018 = a008 + a002;
a022 = a011 - a023;
a004 += a009;
a014 += a015;
a020 -= a022;
} else {
a004 -= a008;
a021 = 1 + a002;
a006 = a017 + a021;
a007 -= a000;
a009 -= a024;
a013 = a015 + a024;
a005 = a002 - a012;
a016 -= a006;
a017 -= a010;
}
a017 += a000;
a013 += 1;
a023 -= a008;
a020 += a008;
a002 = a015 + a021;
a006 += a016;
a015 = a019 + a001;
a013 += a023;
a021 = a021 - a022;
a005 = 4 + cur;
a010 = a015 - a005;
a023 = a011 - a008;
a021 = a016 + a024;
a016 = a001 + a024;
a015 = a020 - a016;
a017 -= a017;
a005 = a020 - a014;
a006 -= a016;
a007 += a020;
a012 = a003 + cur;
a003 -= a024;
a008 = a010 - a010;
a012 = a010 - a012;
a012 += a008;
if (a018 != -3) {
a024 = a018 + a018;
a015 = a002 + a005;
a007 = a020 - a012;
a008 -= a024;
if (a019 <= a007) {
a002 = a015 - a003;
a020 += cur;
a016 = a001 - a022;
a002 = a009 - a002;
a012 -= a001;
a022 += a013;
a003 = a019 + a013;
a019 -= a012;
a019 = a004 + a007;
a022 = a002 - a000;
a020 = a023 - a017;
a021 = a005 + a003;
a002 += a020;
a018 += a019;
a003 = cur + a009;
a015 += a021;
a016 += a000;
a008 -= a020;
a001 = a019 - a013;
a014 = a001 - a003;
a005 = a012 + a004;
a024 += a020;
a000 = a015 - a021;
a017 = a015 + a022;
a023 = a005 - a006;
a004 = a013 - a000;
a007 -= a006;
a022 = -1 + a002;
a009 += a018;
} else {
a000 = a021 + a005;
a008 = a010 + a001;
cur += a020;
a000 = a008 + a024;
a016 = a014 - a003;
a004 = a009 - a009;
a019 -= a003;
a012 = a001 + a002;
}
a012 = a002 + a018;
a008 -= a006;
a008 = a013 + a017;
a015 -= 4;
a001 -= a023;
a016 = a013 + a023;
a018 = a018 + a004;
a014 = a004 - a005;
a002 += a014;
cur = a002 + a017;
a010 -= a013;
a020 = a024 + a023;
a008 += -3;
a018 = a023 - 3;
a009 -= a000;
a013 -= a009;
a012 += a014;
a000 = a011 + a000;
a022 = a002 - a023;
a004 += a021;
} else {
a015 = a011 + a007;
a018 = a008 - a002;
a010 = a006 + a000;
a013 -= a004;
a008 = a015 - cur;
a009 += a006;
a017 -= a008;
a007 = a004 - a015;
}
a000 += a016;
a012 -= a009;
a011 = a005 + a000;
a012 -= a006;
a001 = a015 + a017;
a020 -= a016;
a016 = a020 + a019;
a023 += a000;
a004 = a020 - a000;
a014 = a002 + a004;
a008 -= a022;
a012 -= a009;
a024 = a010 + a002;
a008 = a000 + a019;
a004 = a003 + a018;
a014 = a006 - a009;
a001 = a003 - a004;
} else {
a002 -= a019;
a014 = a016 + a015;
a005 += a004;
a023 = a010 - a023;
a021 += a010;
a015 -= a008;
a007 = a002 + a007;
a017 = 4 - a018;
a003 = a008 - a010;
}
a021 = a010 + a008;
a012 += a004;
cur = a011 - a002;
a004 = a005 - a001;
a004 += a021;
a008 -= a011;
a022 = a024 - a021;
a020 = a018 - a005;
a005 = a015 + a023;
a022 = a001 + 3;
a021 += a023;
a023 -= a011;
a018 = a021 - a004;
cur = -4 + a005;
a015 = a008 + a007;
a018 = cur - a011;
a008 -= a011;
a023 += a024;
a011 += a010;
a001 += a022;
a000 = a022 + a022;
a009 -= a017;
a013 += a007;
a020 -= a021;
a008 -= a002;
a005 += a007;
cur = a018 + a003;
a018 += a019;
a024 -= a024;
cur = a004 - a006;
a023 = a006 + a001;
a021 += a008;
a007 = 4 + a013;
a012 = a005 - a023;
a004 = a020 + a003;
a003 += -3;
a010 = a011 - a009;
a007 += a013;
cur = a002 - a014;
a024 = cur + 3;
a010 = a005 + a007;
a021 -= a004;
a012 = a010 + a008;
a020 += a000;
}
output.collect(prefix, new IntWritable(a016));
}
