// Note: only +, - operations
// Parameters:
//   Variables:   30
//   Baselines:   300
//   If-Branches: 30

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a019 = a020 + a009;
a008 += a013;
a004 = a016 - a017;
a026 -= a025;
if (a001 > a014) {
a013 += a019;
a016 = a025 + a021;
a024 += a027;
} else {
a023 = a020 + a006;
a018 = a026 - a008;
a019 += a013;
a026 += a003;
a028 += a013;
a022 += cur;
}
if (a017 != a024) {
a028 += a014;
a021 = a026 + a018;
a029 += -2;
a028 += a025;
a003 = a002 + 2;
cur -= a005;
a028 = a019 - a014;
} else {
a014 -= a029;
a023 -= a007;
a009 -= a007;
}
a000 = a015 - a002;
a011 = a022 + a004;
a015 = a016 + a005;
a017 = a027 + a016;
a019 = a016 - a003;
a028 += a005;
if (a007 >= a027) {
a013 += a020;
a012 = a028 - a017;
if (a019 == a021) {
} else {
a014 += a002;
a009 -= cur;
a009 += a003;
}
a019 = a002 - a004;
a000 += a013;
if (a028 < a019) {
} else {
a028 = a006 + a008;
a015 = a001 - cur;
a021 -= a018;
a018 -= a017;
a023 -= a027;
a002 = a016 - a017;
}
a027 -= a026;
a012 += a018;
if (a018 < a013) {
a000 -= a003;
a029 += a011;
a015 = a000 + a025;
a001 -= a014;
a027 -= a027;
a012 += 3;
} else {
if (a006 >= a001) {
a026 = a003 - a010;
a028 = cur - a021;
cur += a019;
a021 += a012;
a023 -= a019;
a020 += a020;
a000 = a010 + a009;
} else {
a017 += a024;
a017 -= a004;
a025 -= a029;
a006 = a016 - a024;
a024 += a017;
}
a004 -= a006;
a003 += a001;
a013 += a024;
cur -= a029;
if (a003 > a019) {
a024 = a021 + a016;
a026 = a023 + a009;
} else {
a010 = a027 + a019;
if (a008 >= a024) {
a001 = a013 + -5;
a021 = a017 + a000;
a009 -= a002;
a016 += a001;
a002 = a014 + cur;
a029 = a020 - a021;
cur += a010;
if (a014 >= a010) {
a006 = a001 + a027;
a027 -= a004;
a026 = a017 + a021;
a024 = a023 - a010;
a021 -= a002;
} else {
}
a021 += a004;
a009 -= a025;
a016 += a025;
a003 = a001 - a015;
} else {
a027 -= a005;
cur = a023 - a019;
a014 = cur + a007;
a008 = a023 - a019;
a002 = a016 + a025;
a025 += a009;
if (a005 <= a024) {
a002 -= a024;
a017 = a016 - a026;
a017 -= a002;
a012 += a018;
} else {
a021 += a016;
a004 = a004 - a004;
a007 -= -5;
cur = a014 - a009;
a015 = a019 - a027;
if (a027 <= cur) {
if (a008 <= a004) {
a011 = a008 - a026;
a010 = a006 + a007;
} else {
a012 -= a007;
a022 -= a011;
a004 = a007 + a025;
a021 = cur + a001;
a003 = a017 - a021;
a002 -= a004;
a028 -= a004;
if (a012 <= a015) {
a019 = a026 + a004;
if (a014 == a009) {
a000 = a011 - a028;
a001 = a010 + a017;
a017 -= a027;
a000 -= a002;
a010 += a001;
} else {
a020 += a027;
a009 -= a021;
a007 = a009 + a014;
a017 += a020;
}
a011 += a018;
a004 = a022 - a008;
a017 = a002 + a026;
a012 = a009 + cur;
a015 -= a027;
if (a029 >= a004) {
a024 = a017 - a020;
a012 += a018;
a021 = a017 + a004;
cur = a026 + a004;
if (a018 > a024) {
a027 = a005 + a014;
a016 = a012 - a004;
a003 += cur;
a004 = a011 + a014;
} else {
a009 = a008 + a023;
a021 = a014 - a006;
a029 += a009;
a006 -= a026;
a008 += a029;
a024 -= a008;
if (a012 > a017) {
a012 = a003 - a021;
a019 -= a013;
a005 -= a026;
a013 = a006 + a005;
a002 += a028;
if (a024 > a007) {
cur -= a029;
a007 = a011 + a021;
a013 += cur;
a000 += a012;
a007 -= a013;
a013 += a004;
a006 = a011 + a013;
} else {
a025 = a023 + a013;
a018 += a029;
if (a010 < a029) {
if (a025 <= a028) {
a027 = a018 + cur;
a015 += a013;
a019 -= a002;
a023 -= a018;
a009 = a028 - cur;
} else {
}
a007 = a014 + a028;
a012 -= a022;
a007 += cur;
a005 = a009 - a020;
a019 -= a017;
if (a016 <= a001) {
cur = a027 - a017;
a008 -= a007;
a017 = a023 - a003;
a011 = a021 + a002;
} else {
a029 = a020 + a016;
a029 -= a000;
a013 = a025 - a017;
a015 += a026;
if (a006 > a001) {
a024 += a017;
a021 = a000 - a015;
a001 -= a024;
} else {
a016 -= a008;
cur -= a014;
cur -= a023;
a013 = a012 - 4;
a011 = a024 - a012;
}
a013 = cur + a005;
a023 = a022 - a004;
if (a005 > a022) {
a027 = a021 + a022;
a022 -= a005;
a014 = a017 + a006;
a017 += a004;
a007 = a019 + a017;
a019 += cur;
if (a014 > a028) {
if (a001 >= a010) {
a005 = -3 - a020;
a003 -= a009;
} else {
a004 = a022 - a023;
a009 -= a022;
a004 += a027;
a000 = a021 + a024;
}
a010 -= a013;
a029 = a009 + a024;
a009 -= a026;
a017 -= a013;
a023 = 3 + a023;
if (a015 != a019) {
} else {
a015 -= a011;
a000 = a013 + a015;
if (a017 > a027) {
a016 = a025 + a021;
a024 += a002;
a028 -= a021;
a024 = a009 - a017;
a026 -= a015;
} else {
a009 = a011 + a027;
a016 = a027 - a005;
a005 += a011;
a004 = a016 - a011;
a027 = a018 + a015;
a025 = a013 + a027;
}
a028 += a018;
a009 = a012 - a004;
cur = a017 - a015;
cur = a021 - a002;
}
a026 += a000;
a024 -= a014;
a007 = a006 + a020;
a020 += a005;
a014 += a002;
a008 -= -3;
a023 = a008 - a029;
} else {
}
a015 -= a019;
a023 += a024;
a015 = a029 + a006;
a005 = a018 + a007;
a018 = a014 - cur;
a026 += a008;
a021 = a006 + cur;
if (a009 != a017) {
a000 = a028 + a004;
a026 = a013 - a029;
a000 = a019 + a025;
a019 -= a018;
if (a005 <= a025) {
a020 = a010 - a003;
a006 = a021 + a007;
a007 -= a021;
} else {
a012 -= a028;
a005 += a001;
a016 = a018 - a023;
a017 -= a001;
a021 += a007;
cur += a016;
}
a000 = a007 - a020;
a005 = a014 + a019;
a026 = a026 - a006;
a011 = a016 + a023;
a026 = a024 + a004;
} else {
a019 -= a008;
a025 += a027;
a024 = a024 + a005;
a028 = a017 + a022;
}
a025 = a027 + a026;
a009 += a016;
a006 = a010 + a009;
a016 = a018 - a025;
a017 += a005;
} else {
a006 += a021;
a004 += a015;
a008 -= a000;
a020 -= cur;
a012 = a024 + a028;
a027 += a002;
}
a019 += a000;
a011 = a028 - a010;
a029 = a025 - a004;
a020 -= a018;
}
a026 = a021 - -3;
a021 += a015;
} else {
a003 = a011 - a016;
a001 += a011;
a005 = a027 - a011;
a010 -= a020;
a000 += a023;
a019 = a014 + a017;
a001 = a007 * -3;
}
a008 += a009;
a025 = a006 + a000;
a015 = a024 - a008;
a003 = a011 + a013;
a015 = a005 + a020;
}
a014 += a026;
a019 += a024;
a001 = a011 - a018;
a006 += a019;
a009 -= a023;
} else {
}
a020 -= a011;
a023 = a011 + a011;
a025 -= a023;
}
} else {
a019 = a008 - a016;
a022 += a002;
a005 = a009 + a027;
a015 += a025;
a000 = a027 + a006;
}
a016 = a026 - a009;
a007 = a002 + a017;
a000 += a016;
a018 -= a005;
a028 += a023;
a029 = a003 - a015;
} else {
a018 -= a003;
}
}
} else {
}
}
}
}
}
} else {
}
a017 = a020 + a012;
}
output.collect(prefix, new IntWritable(a008));
}
