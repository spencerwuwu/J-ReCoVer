// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a007 -= a007;
a000 = a008 - a016;
a000 += a004;
a007 = -4 - a008;
a014 = a012 - a016;
a018 += a006;
a018 -= a008;
a001 = a001 - a012;
a009 += a000;
a019 -= a001;
if (a017 <= a000) {
a010 -= a010;
a002 += -1;
a011 = a009 + a007;
a009 -= 1;
a008 = a014 + cur;
a006 = a005 - a008;
a003 = a010 - a008;
a007 = 0 + a012;
a013 = a009 + a010;
a002 -= a017;
a007 -= cur;
a014 = a000 + a014;
a009 -= a009;
a009 = a006 + a015;
a012 = a010 - a006;
cur -= a007;
a014 = a015 + a011;
a019 = a016 - a019;
a009 -= a018;
a007 -= a008;
a014 = a001 - a019;
a004 = a003 + a011;
a007 = a000 + a016;
a009 -= a016;
if (a002 < a008) {
a007 = a005 - a019;
a015 += a002;
if (a004 > a017) {
a010 = a000 + a019;
a007 += a008;
a009 = a009 + a014;
a000 += a018;
a014 -= a007;
a006 -= a012;
a018 = a013 + 4;
a002 = a002 - a007;
a017 = a011 - a003;
a003 = a016 + cur;
a016 = a016 + a008;
a013 -= a014;
if (a006 == a018) {
a004 = a014 - a011;
a005 = a011 - a000;
a016 = a017 - a015;
a018 = a005 + 4;
a012 = a001 - cur;
} else {
a004 = cur - a011;
a010 += a017;
a006 = a004 - a000;
a006 = a014 - a014;
a005 = a002 - a000;
a011 = a019 - a003;
}
a010 -= a004;
a013 = a014 - a009;
a010 += a009;
a014 -= a019;
a018 = a011 + a005;
a001 = a007 - cur;
a002 -= a008;
a011 = a009 - a017;
a009 = a005 - a018;
a002 -= a007;
a017 = a004 + a019;
a014 = a017 + a008;
a010 = a011 + a017;
a012 = a006 + a008;
a008 += a003;
a006 += a000;
a007 = a013 - a012;
a014 = cur + a008;
a016 -= a016;
a008 -= a009;
a006 = a003 - a005;
a007 = a012 - a010;
a012 += a018;
a013 -= a004;
a010 += cur;
a005 += a006;
} else {
a010 = a016 - a012;
a019 = a005 + a016;
a002 -= a016;
a006 = a006 + a005;
a012 = cur - cur;
a018 = a002 + a008;
a018 = a012 - a012;
a010 = a005 + a018;
a007 = a005 - a018;
a011 = cur - a005;
a001 = a019 - a012;
}
a017 += a017;
a002 = a018 + a002;
a010 += a011;
a004 = a018 - a016;
a016 = cur + a003;
a001 += a017;
a015 -= a018;
a019 = a001 + a011;
a011 = a018 - a012;
a009 = a014 - a009;
a005 = a013 - a010;
a012 = a002 * 3;
a016 += a011;
cur -= a010;
a012 += cur;
a014 = a010 + a002;
cur = a009 + a008;
a016 += cur;
cur += a016;
a007 -= a014;
a017 = a006 - a000;
} else {
a016 += a004;
a014 = a006 + a001;
a005 = a009 - a014;
a008 = a008 + a008;
a000 = a015 + a006;
a016 -= a019;
a009 = a010 + a011;
a010 -= a005;
a005 += 0;
a019 -= a017;
a006 -= a018;
a001 += a014;
a016 += a005;
a013 += a019;
a004 = a002 + a007;
a013 = a011 - -4;
a013 += a009;
a003 = a013 + a015;
a016 = a008 - a011;
a008 = a004 - a004;
}
a007 += a008;
a016 -= a016;
a017 = a014 - a014;
a013 = a014 - cur;
a019 = a018 - a012;
a001 += a000;
a002 += a016;
cur = a000 + a012;
a019 = a015 - a012;
a003 += a016;
a012 += a010;
a017 = a012 - a001;
a014 -= a019;
a011 = a000 - a004;
a006 = a007 + a009;
a004 += a003;
cur = a003 + a018;
a002 += a000;
cur = 1 + a002;
a000 += a009;
cur -= a010;
} else {
a000 = a014 - a007;
a011 = a013 + 3;
a003 = a001 + a018;
a005 += a007;
a008 -= a019;
a005 -= a003;
a014 = a009 - a008;
a002 = a013 - a016;
a014 -= a012;
a004 += a017;
a017 = a000 + a012;
a018 -= a012;
a017 = a009 - a017;
a005 += a019;
a007 += a019;
a004 = a009 - cur;
a002 = a010 + a019;
a018 = a001 - a018;
a017 += a019;
a005 = a010 + a013;
a014 = a013 + a016;
a000 = a005 + a007;
a000 = a013 + a007;
a008 -= a010;
a017 = a014 - a019;
a009 = a015 - a016;
a011 = a010 - a014;
a004 = a019 - a011;
a014 = a015 - a001;
a002 = a004 + a018;
a004 += 3;
}
a011 = a019 - a004;
a018 += a001;
a002 = a003 + a010;
a003 += a010;
a008 += a017;
a019 = a007 - a008;
a013 = cur + a007;
a012 = a001 + a005;
a014 = a017 + a009;
cur = a000 - a010;
a004 = a010 - a016;
}
output.collect(prefix, new IntWritable(a002));
}
