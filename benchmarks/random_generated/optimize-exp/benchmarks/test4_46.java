// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a019 = a009 + a004;
a009 = a009 - a019;
a004 += a005;
a019 = a000 + a018;
a002 = a014 + a004;
a015 += a006;
a001 = a007 * 0;
a005 += a011;
a018 -= cur;
a018 = a008 - a001;
a019 += a007;
a003 = a007 - a017;
a007 = a003 + a014;
a007 = a012 + a017;
a000 = a015 + a017;
a015 = a012 - a018;
a009 += a016;
if (a010 != -5) {
a009 -= a007;
a017 += a006;
a012 += a005;
a016 = a016 + cur;
a004 = a009 - 1;
cur += a006;
a003 = a009 - a006;
a008 = a019 - cur;
a016 = a012 + a005;
a014 = a007 + a018;
a010 -= a015;
a002 = a016 - a016;
a002 = a015 + a002;
if (a007 <= a008) {
a011 -= a006;
a000 += a015;
a015 -= a018;
a001 = a010 + a014;
a013 = a013 - a009;
a010 = a010 + a008;
a019 -= a016;
a005 = a009 + a012;
a014 -= a011;
a016 = a003 + a005;
a009 -= cur;
a000 += a011;
a014 = a008 - a009;
a018 += a018;
a000 = a013 + a011;
a018 += a007;
a005 -= a002;
a005 += a011;
a017 += a002;
a017 = a002 - a007;
a006 = a002 - a000;
a006 = a001 - a013;
cur -= a015;
a004 += a016;
a018 = a012 + a010;
a007 = a008 + a011;
a011 = a016 * -4;
a006 -= a012;
cur = a013 - a019;
a008 = a005 - a017;
if (a019 != a011) {
a014 -= a003;
a009 = a004 - a003;
a006 = a018 - a002;
a004 -= a013;
a004 = a010 * 3;
a006 = a012 - a012;
a014 += a005;
} else {
cur = a014 - a018;
a003 = a019 + a006;
a011 -= a017;
a007 += a000;
a014 = a005 - a007;
a000 = a013 - -3;
a003 = a014 - a002;
a009 += a000;
a007 += a002;
a013 = a012 * 3;
a000 = a013 + a016;
a005 = cur - a000;
a007 = a012 - a019;
a012 = a002 - a012;
a012 = a000 + a011;
a018 = a006 + a019;
cur -= -4;
a006 = a011 + a017;
a005 -= a016;
a012 += a010;
a014 = a002 + a015;
a000 = a009 - a002;
a004 -= a008;
a015 -= a004;
}
cur -= a014;
a002 += cur;
a006 = a004 + a001;
a000 -= a004;
a009 = a019 - a019;
a012 = a012 * -1;
a013 += cur;
a004 += a012;
a000 += a011;
a006 -= a006;
a004 += a018;
a000 -= a010;
a018 = cur - a015;
a018 += cur;
a012 -= 3;
if (a007 >= a018) {
a000 += a019;
a006 -= a001;
a001 -= a010;
a007 = a005 - a012;
a000 = a001 - a005;
a005 -= a005;
} else {
a010 -= a012;
}
a013 -= a016;
cur = a015 + a014;
a017 -= a015;
a010 -= a004;
a007 = a009 - a018;
a012 += a013;
cur = a012 - a003;
cur -= a001;
a014 = a005 + a019;
a017 = a004 - a008;
cur = a011 + a018;
a007 = a017 + a001;
} else {
a009 = a019 + a008;
a014 = a014 + a014;
a018 = a005 - a010;
a014 += a002;
cur += cur;
a012 = a002 + a012;
a008 -= a012;
a005 = a009 + cur;
a011 -= 4;
a007 = a001 + a011;
a017 = cur - a018;
a015 = a007 - a009;
a000 = a004 - a008;
cur -= a010;
a018 = cur - a017;
}
a012 = a012 + a005;
a011 = a006 + a009;
a005 -= a017;
a013 += a018;
a007 = a011 + a015;
a006 -= a019;
a014 = a017 - a014;
a002 -= cur;
a016 = cur + a010;
a012 -= a016;
a018 = a004 + cur;
} else {
a001 -= a001;
cur += a003;
a015 = a000 + a017;
a011 = a007 + cur;
a003 = a008 + a006;
a008 = a003 + a011;
a012 -= a000;
a005 -= a011;
a000 += a001;
a010 -= cur;
cur += a019;
a003 += a019;
a004 += a015;
a014 += a018;
a006 += a000;
a003 = a002 + a018;
a013 -= a005;
a017 = a008 - a015;
a005 -= a019;
a019 += a019;
a008 = a001 + a003;
a010 -= a005;
a015 = cur - a009;
}
a000 += -2;
cur = cur - a011;
a008 += a003;
a006 = a006 + a018;
cur = a012 - -4;
a006 = a009 - a014;
a018 += cur;
a015 = a015 - a003;
a019 += a006;
a003 = cur - cur;
a008 = a004 - a009;
a003 = a008 + a017;
a001 = cur + a016;
a001 -= a012;
a015 -= a002;
a000 = a019 + a009;
a016 = a014 - a005;
a005 = a003 + a017;
a011 = a003 - a003;
a006 -= a013;
a005 -= a019;
a014 -= a000;
a002 -= a009;
a004 += a012;
a015 = a006 + a005;
a016 = a012 + a000;
}
output.collect(prefix, new IntWritable(a011));
}
