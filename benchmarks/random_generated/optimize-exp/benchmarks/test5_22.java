// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a003 += a021;
a011 += a023;
a017 -= -2;
a003 += a009;
a018 += a016;
a015 -= a004;
a020 -= a018;
a007 = a015 - a024;
a006 = a017 - a023;
a006 -= a024;
a019 += a014;
a008 = a015 - a023;
a015 += a024;
a004 += a004;
a021 -= a018;
a008 = a024 - a010;
a011 = a020 + a019;
a023 = a004 - a018;
cur = a024 - a015;
a007 += a014;
a002 = a014 + a000;
a010 = a010 - a013;
a022 = a010 - a023;
a016 -= a014;
a004 -= a024;
a004 -= a005;
a014 = a005 + a012;
a001 = a018 + a018;
if (a014 != a017) {
a019 = a023 + a007;
a000 -= cur;
a011 = a016 + a024;
a003 = a000 + a008;
a001 -= a012;
a011 = a016 + a022;
a009 += a011;
a012 -= a002;
a007 += a012;
} else {
a003 -= a002;
a011 = a022 + a012;
a022 = a004 - a018;
a001 += a022;
a018 -= a005;
a001 = a004 - a017;
a021 = a011 + a021;
a005 -= a010;
a011 += a002;
a016 = a016 - a018;
a006 = a000 - a006;
a019 -= a002;
a009 -= a003;
a016 -= a019;
a013 = a000 + a005;
a008 += a002;
a013 = a002 + a007;
a010 += a018;
a005 -= a022;
a015 = a021 + a018;
a000 = a019 - a001;
if (a005 == a018) {
if (a011 >= a018) {
a018 += a005;
a012 -= a005;
a007 = a007 - a004;
} else {
a015 = a017 + a022;
a022 += a015;
a019 += a010;
a014 -= cur;
a023 += a008;
a015 = a013 - a014;
if (a011 != -2) {
a013 = a021 - a019;
a016 -= a010;
a000 = a021 + a024;
a009 = a009 + a015;
a005 = a018 + a002;
a004 = a021 * 4;
a008 = a018 + a007;
a021 = a011 + a013;
a015 = a002 + a023;
a022 = a007 - a012;
a005 -= a021;
a022 = a015 - a015;
a007 = a007 + a020;
a001 = a013 - a002;
a015 += a011;
a011 -= a002;
a010 = a015 * -2;
a020 -= a011;
a023 -= a013;
a013 = a004 - a023;
a023 = a023 - a017;
a016 = a008 + a014;
a015 -= cur;
a023 -= a022;
a005 -= a011;
a002 = a009 + a008;
a023 = a015 * 4;
a014 = 0 - a010;
a012 = a016 - a024;
a004 += a000;
a022 = a010 - a022;
a013 += a015;
a016 = a020 - a023;
if (a012 < -4) {
a019 -= a019;
a015 -= a005;
a023 = a007 - a018;
a013 = a015 - a017;
a021 -= a013;
a005 = a004 - a020;
a004 = 0 - a022;
a021 -= a013;
a004 += a004;
a012 = a022 + a022;
} else {
a018 = a013 + a014;
a004 += a017;
a007 = a021 + a009;
a009 -= a019;
a024 -= a000;
a001 = a001 - a021;
a001 = a011 + a001;
a005 = a003 + a006;
a012 -= a000;
a016 = a004 - a019;
a010 = a007 - a013;
a011 += cur;
a020 -= a021;
a024 = a015 - cur;
a000 = a012 - a015;
a011 -= a015;
a022 = a007 - a019;
a004 -= a013;
a016 = a015 - a016;
a022 = a023 + a006;
}
a019 -= a000;
a000 = a012 - a019;
a005 = a014 + a004;
a022 -= a021;
a006 = a009 + a011;
a001 = a007 + a006;
a013 = a009 - a021;
a006 = a004 - a000;
a011 += a020;
a012 -= cur;
a010 -= a011;
a000 = a009 + cur;
a013 += a002;
a019 -= a013;
a021 -= a011;
a005 = 2 + a009;
a023 = a007 - a016;
a009 -= a024;
a024 -= a019;
} else {
a010 -= cur;
a018 -= a001;
a007 -= a022;
a022 += a005;
a022 = a006 + a020;
a013 = cur - a001;
}
a003 = a013 + a010;
a023 -= a010;
a011 = a002 - a015;
a017 = a010 + a008;
cur = a020 - a018;
a011 += a009;
a018 = a012 + a017;
a000 += a023;
a012 = a001 - a007;
a009 += a005;
a018 += a006;
a020 = a016 - a016;
a007 = a007 + a002;
a005 = a021 - a018;
a023 = a006 - a002;
a006 = cur - a016;
a007 = a007 + a013;
cur += a021;
a014 += -3;
a013 -= a007;
a016 += a012;
cur += a005;
a007 += a018;
a013 = a006 - a022;
a008 -= a008;
a000 = a006 - a011;
cur += a023;
a002 = a005 - a024;
a022 -= a019;
a016 = a007 - a002;
a002 = a012 + a020;
}
a003 += a004;
a005 = a022 - a000;
a004 = a003 - a021;
a011 -= a009;
a000 -= a024;
a019 += a012;
a024 = a021 + a020;
a016 -= a005;
a024 += a006;
a006 = a005 - a008;
a003 = a021 + a000;
a012 -= a012;
a012 += a003;
a002 += a013;
a020 = 0 + a007;
a013 -= a006;
a022 = a020 - a010;
} else {
a002 -= a002;
a017 = a000 + a018;
a012 += cur;
a014 -= a006;
a024 += a000;
a008 = a023 - a009;
a009 += a012;
a013 += a007;
a001 += a011;
a020 += 1;
a011 = a006 + a023;
a017 += a024;
a002 = a014 + a014;
a016 = a012 - a009;
}
a018 -= a010;
a023 += a020;
a012 = a013 - a012;
a015 -= a021;
a004 = a001 - a016;
a001 += a004;
a023 -= a021;
a014 += a002;
a001 = a007 - a006;
a007 = a022 - -5;
a012 -= a006;
a022 += a010;
a007 = a001 + -2;
a016 = a015 + a005;
a021 += a004;
a006 -= a023;
a017 += a013;
a012 -= a010;
a018 -= 0;
a023 = -3 - a006;
a012 -= a014;
}
a005 += a020;
a016 = a012 - a008;
a016 = a012 + a002;
a019 = a007 + a017;
a009 = a009 + a009;
a001 += 1;
a020 = a021 + a024;
a001 = a020 - a011;
a015 = a011 - a013;
a003 += a021;
a004 -= a009;
a014 -= a022;
}
output.collect(prefix, new IntWritable(a015));
}
