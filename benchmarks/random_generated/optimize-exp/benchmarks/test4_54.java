// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a004 -= 0;
cur -= -2;
a009 = a002 - a011;
a002 -= a001;
a010 = a016 - a019;
a005 += -1;
if (a000 == a006) {
a003 -= a004;
a003 = a014 - a014;
a018 += a011;
a000 = a009 - cur;
a014 = cur - a015;
a008 = -2 - a000;
a004 = a005 + a002;
a015 -= a018;
a008 = a003 + -4;
a018 += a014;
a017 = a012 * 2;
a015 -= a010;
a009 -= a001;
a010 += a015;
a000 = a001 - a010;
a010 = a006 - a012;
a005 = a005 - 1;
a015 = a011 - a013;
a019 = -1 - a014;
a012 = -5 + a011;
a009 = a013 - a012;
} else {
a000 += a017;
a002 += a003;
a013 = a001 - a019;
a009 -= a013;
a002 += a017;
a017 = a012 + a011;
a007 = a007 * 4;
a004 = a018 + a016;
if (a008 <= a014) {
a013 += a003;
a013 += a019;
a014 = a008 - -3;
cur -= a011;
a014 -= a000;
a010 += a018;
a003 = a012 - a005;
a014 -= a003;
a001 = a005 - a014;
cur = a002 - a009;
a017 += a008;
a014 = a012 - a000;
a006 += a003;
a001 -= a005;
a005 = a003 - a018;
a006 -= a003;
a006 = a013 + a016;
a017 = a010 + a004;
a016 = a003 + a006;
a006 = a003 - a018;
a005 = a007 + a017;
} else {
a011 += a008;
a005 = a009 - a007;
a013 = a003 + a016;
a005 = a004 - a000;
a014 -= a015;
cur -= a012;
cur -= a008;
a014 += a012;
a004 = a006 + a000;
a005 = a000 + a000;
}
a008 += a001;
a006 = a009 - a012;
a016 = a015 - a006;
a006 = a007 + a005;
}
a015 = a017 - a006;
if (a013 <= a004) {
a000 += a014;
a001 += a019;
a005 += a002;
a006 = a014 + a000;
a003 += a012;
a013 += a019;
a006 -= a016;
a017 += a019;
a002 += a016;
a011 = a010 - a016;
a018 -= a006;
a010 = a012 + a007;
a015 -= a008;
a016 = a011 - a000;
a016 = a008 + 3;
a014 += a010;
a018 += a011;
a004 = a017 - a006;
a005 = a019 - a019;
a006 = a010 - a016;
a001 = a008 - a015;
a011 += a012;
a016 = 2 + a004;
a003 -= a005;
a001 += a012;
cur = a005 - a004;
if (a000 >= a018) {
cur -= a015;
cur = a010 + a001;
a005 -= cur;
} else {
a005 -= a013;
cur += a019;
a000 -= a014;
a008 = a009 - a014;
a019 = a015 + a010;
a002 -= a018;
a016 -= a004;
a002 = a011 - a016;
a012 += a010;
a017 = a007 - a019;
a008 = a018 - a016;
a017 = a010 - a017;
a005 -= a014;
a018 = a010 + a017;
a010 = a010 + 3;
a018 -= a001;
a004 = cur - a005;
a002 = a006 - a019;
a015 += a011;
a018 -= a005;
a011 = a015 + a002;
a013 = a015 + -1;
a007 += a016;
a002 = cur + -2;
a004 -= a005;
a013 -= a004;
a005 = a003 + 3;
a005 = a003 - a002;
a012 += a010;
a004 += a009;
a003 -= a012;
a014 = a015 + a005;
}
a007 = a013 - a007;
a014 += a014;
a019 -= 1;
a011 -= a002;
a015 -= a001;
a012 = a001 + a008;
cur -= a011;
a008 = a009 - a014;
a006 = a009 + a017;
a018 = a005 + a005;
a010 -= a018;
} else {
a018 = a005 - a014;
a007 += a005;
a005 = a010 - a006;
a015 = a005 + a019;
a006 = a005 + a004;
a003 = a011 - a004;
a017 = a009 + 0;
a006 -= a019;
a019 -= a017;
a017 = a002 - a017;
a011 = cur - a014;
a015 = cur + a008;
a014 = a012 - a018;
a007 = a004 - a006;
}
a014 -= a018;
a009 = a014 + a006;
a013 += a002;
a015 += a005;
cur -= a016;
a009 = a004 + cur;
cur += a003;
a005 -= a005;
a016 += a014;
a004 = a017 + a002;
a010 -= a006;
a008 -= a014;
a005 += a004;
a016 = a004 - a005;
a002 = a006 + a004;
a006 += a001;
a015 = a004 + a002;
a017 = a015 + a003;
a001 += a019;
a014 = a005 - a019;
a012 = a003 + a008;
a009 += a010;
a004 = a016 - a002;
a013 = a012 + a009;
a015 -= a000;
a019 -= a004;
a002 = a013 + a017;
a007 = a001 + a010;
a017 = a009 + a013;
a008 = a009 - cur;
cur += a008;
a015 = a015 + a004;
a004 -= 4;
a008 -= a018;
a010 = a012 + a014;
a006 = a007 - 2;
a013 = a015 - a003;
cur = a000 + a010;
a002 += cur;
a008 += a015;
a014 += a013;
a004 = a004 - a012;
a008 = a001 - a006;
}
output.collect(prefix, new IntWritable(a012));
}
