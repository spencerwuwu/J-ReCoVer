// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a006 = a000 - cur;
a000 = a010 + a005;
a010 = a019 - a011;
a000 += a016;
a009 += a015;
a010 = a006 * 3;
a014 = a008 - a012;
a001 = a014 - a018;
if (a018 <= a004) {
a019 = cur + a007;
a005 -= a015;
a019 = a008 - a013;
a012 = a010 - a008;
cur -= a009;
a008 += a011;
cur += a002;
a006 += a006;
a015 += a010;
a011 = a011 + a011;
a019 = a016 + a005;
a016 -= a010;
a000 -= a016;
cur -= a000;
a003 += a006;
a005 = a007 - a013;
a005 -= a014;
a006 -= a007;
a005 = a006 + cur;
a008 = -5 + a014;
a007 += a016;
a009 = a012 + a015;
a012 -= a011;
a013 = a003 + a007;
a008 += a002;
a018 = a016 + a006;
a018 += a013;
a016 = a014 + a017;
a013 = a010 - 1;
a000 += -3;
a012 = a015 + a004;
} else {
a014 += a019;
}
a001 += a006;
a012 -= a016;
a016 = a006 - a008;
a004 -= a016;
a009 = a004 + a000;
a011 = a019 + a013;
a014 += a014;
a012 = a015 + a001;
a000 = a005 - a013;
a001 += a014;
a010 += a008;
a011 += cur;
a016 += a004;
a003 = a005 - a001;
a010 = a000 - a012;
a013 = a008 - a010;
a000 += a017;
a017 = a002 - a011;
a015 -= a010;
a004 = a017 + a011;
a015 += a019;
a003 -= a002;
a004 -= a007;
a013 = a010 + a004;
a012 = a000 + a010;
a012 -= a014;
a007 = a015 - a004;
if (a009 == a012) {
a012 = a007 + a005;
a002 = a014 + a001;
a013 = a000 - a012;
a004 += -5;
a003 += a019;
a012 = cur * 4;
a008 = a005 + a003;
a016 += a016;
a001 = a008 + a012;
a012 = a013 + a006;
a016 -= a018;
a008 -= a016;
a014 -= a010;
} else {
a005 = a014 + a009;
a012 += a009;
a005 -= a018;
a015 += a012;
a010 += a008;
a003 = a018 - a012;
a019 = a005 + a006;
a006 = a013 * 2;
a009 = a012 - a016;
a015 = a014 + a001;
a009 -= a012;
a019 = a003 + a006;
a011 += a005;
a003 = 1 + a017;
a016 = a017 - a012;
a010 = a003 + a019;
cur += a006;
a005 += 4;
a016 = a006 + a002;
if (a006 != a005) {
a009 = cur - a008;
a007 = a014 - a014;
a002 -= a010;
a016 += a004;
a001 += a004;
a002 += a008;
a005 = a003 - a015;
a015 += a003;
a001 = a011 - a008;
if (a007 < a007) {
a004 -= a015;
a007 += a006;
a014 -= a016;
a013 = 0 + a019;
a013 -= a004;
a014 += a009;
a002 = a014 + a011;
a019 -= a002;
} else {
a011 -= a007;
a005 += a013;
a009 -= a010;
a018 += a011;
a011 = a006 + cur;
a019 = a004 + a010;
a006 += a005;
a009 += a011;
a017 = cur - a017;
a012 += a006;
a013 = a012 + a012;
a011 = a004 + a006;
a019 += a001;
a003 = a017 - a012;
cur -= a016;
a011 = cur + a004;
a017 += a000;
a016 -= a018;
a000 = a000 + a012;
a013 -= a001;
a010 = a012 + a007;
a015 = a002 + a017;
a012 -= a014;
a004 += a010;
a012 = a017 - a008;
a017 += a016;
a010 -= a009;
a014 = a016 + a015;
a001 -= a009;
a012 = a012 + a001;
a018 = cur - 4;
a014 -= a001;
a012 = a006 - a009;
}
cur -= a016;
a000 = cur - a007;
a006 = a013 + a005;
} else {
a010 -= a017;
a001 = a000 + a009;
a008 -= a007;
a014 = a004 - a011;
a011 -= a018;
a014 += a001;
a003 = a007 - a000;
a012 -= a016;
a014 -= a009;
a011 -= 4;
}
a019 += a003;
a009 += a018;
}
a008 = a000 - a011;
cur = a005 + a015;
a017 += a010;
a001 = a017 - a019;
a019 = a012 + cur;
a004 = a012 - a018;
a011 = a006 - a013;
a005 -= a001;
a010 = a002 + cur;
a000 = a006 + a005;
a012 += a000;
a016 += a014;
a009 = a000 + a013;
a019 += a001;
a002 = a012 - cur;
a012 = a008 + a003;
a014 = a013 - a013;
a019 = a003 - a011;
a001 -= a003;
a018 += a009;
a003 += a010;
a009 = a017 + a011;
a002 = a004 - a000;
a009 = 1 - a019;
a002 = a014 + a014;
a014 = cur + a009;
cur += a010;
a002 -= a008;
a007 = -3 - a012;
a009 = a012 + a019;
a002 -= a016;
a002 = cur + a012;
a013 = a018 + a015;
cur -= a006;
a015 += a011;
a005 = a005 - a010;
}
output.collect(prefix, new IntWritable(a005));
}
