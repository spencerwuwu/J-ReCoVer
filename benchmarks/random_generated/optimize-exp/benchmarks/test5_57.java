// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a017 = a015 + 3;
a009 = a024 - a014;
a019 = a017 - a005;
a005 -= a009;
a022 = a023 - a021;
a008 -= a014;
a011 = a006 - a018;
a024 += a007;
a019 = a019 * 2;
if (a015 != a017) {
cur = cur + a010;
a000 += a005;
a017 += a022;
a006 -= -4;
a012 -= a021;
a004 -= a022;
a014 = a004 - a011;
a015 -= a022;
a011 -= a022;
a008 -= a016;
a014 = a024 + a005;
if (a014 == a011) {
a002 = a007 + a015;
a013 = cur + cur;
a012 = a003 - a006;
a015 = a019 + a007;
a006 += a009;
a020 = a014 + a018;
a013 += a018;
a005 -= a014;
a001 = a000 - a014;
a015 = a003 + a017;
a000 = a011 + a012;
a023 = a007 + a008;
a002 += a015;
a022 += a005;
a013 = a004 + a011;
a018 -= a018;
a008 = a014 + a013;
a004 += a002;
a011 -= a008;
a002 -= a024;
a016 = a008 - a006;
a005 += a003;
a016 = a013 + a000;
a018 -= a024;
a024 = a007 + a003;
a015 -= a019;
a023 = a000 - a015;
if (a012 != a012) {
a021 = a021 + a016;
a005 += a016;
a007 = a004 - a008;
a021 += a017;
a019 = a014 + a011;
a004 = a017 + a020;
} else {
a010 = a024 + a000;
a013 = a024 - a011;
a017 -= a003;
a016 += a024;
a018 -= a010;
a007 = a012 - a006;
a004 = a023 - a018;
a006 = a000 - a017;
a004 = a011 - a003;
a016 += a008;
a018 = a019 + a006;
a020 = a004 - a005;
a014 = a009 - a023;
a000 = a001 - a004;
a000 = a008 - a010;
a015 = a009 - a024;
a012 = a017 - a019;
a019 = a023 - a009;
a011 = a014 - a013;
a013 += a018;
a011 = a021 - 2;
a015 += a008;
a021 = a014 - 4;
cur = a023 + a000;
a017 += a013;
a010 += a003;
a020 -= a014;
a010 -= a000;
}
a015 -= a019;
a014 -= a024;
a022 -= a005;
a017 += a010;
a024 -= a012;
a023 = a012 - a019;
a017 -= a000;
a022 = a024 + a014;
a015 = a004 - a020;
a010 += a011;
a003 = a011 + a002;
a001 += a012;
cur = cur + a022;
a013 += a019;
a000 = a014 - a015;
a007 = a006 - a010;
a005 = a000 - a004;
a022 -= a014;
a005 = a002 + a010;
if (a020 <= a021) {
a008 = a011 - a005;
a020 -= a006;
a002 = a009 - a012;
a012 += a013;
a009 -= a011;
cur = cur - a018;
a001 += a018;
a006 += a009;
a015 += a004;
a007 += a011;
a023 = a024 * 2;
cur += a009;
a020 += a019;
a010 = a023 + a006;
a003 += a009;
a018 = a018 + a016;
a011 -= a010;
a011 = a001 - a019;
a021 = a013 - a009;
a016 += a022;
a020 -= a017;
a014 += a017;
a022 += a021;
a000 = a013 - a015;
a021 = a007 - a024;
a024 = a011 - a022;
a004 -= a013;
a009 -= a019;
a011 = a022 + a008;
a004 -= a014;
a004 = a016 + -4;
a012 = a003 - a008;
a021 -= a017;
if (a022 < a003) {
a008 = a003 - a021;
a004 = a016 * -5;
a022 -= a006;
a015 += a023;
a003 = a000 - a009;
a002 -= a013;
a006 += a006;
a008 = a003 + a009;
a017 = a023 + a016;
a015 += a012;
} else {
}
a010 -= a006;
a022 = a017 + a018;
a004 -= a013;
a015 -= a007;
cur += a000;
a012 = a017 + a021;
a023 -= a007;
a015 = a005 + a002;
a022 -= a011;
a013 += 0;
a004 = a023 + a024;
a006 = a002 - a003;
a016 += a004;
a019 = a002 + a022;
a022 += a013;
a021 += a023;
cur = cur + a002;
} else {
a012 = a010 + a007;
a022 = a022 + a011;
a020 = a001 + a008;
a023 = a013 + a016;
a018 -= a014;
a009 += a004;
a024 -= a023;
a005 -= a008;
a001 -= a015;
a002 = a001 - a008;
a010 -= a003;
a024 = a002 + a024;
a020 -= a019;
}
a014 = a021 + a022;
a017 += a024;
a000 = a013 - a012;
a007 = a009 - a009;
a008 = a011 + a005;
a006 += -1;
a020 = a001 - a007;
a000 = a022 - a019;
a014 -= a014;
a004 = a021 - a000;
cur += a023;
a011 = a018 + a002;
a012 -= a000;
a002 = a022 + a011;
a004 += a011;
a024 += a012;
a019 = a007 * -3;
} else {
a007 = cur - cur;
a014 = a018 - a015;
a016 = a003 + a023;
a011 = cur - a002;
a015 -= a013;
cur += a021;
a007 = a020 - a005;
a010 = a004 - a004;
a001 -= a010;
a009 = a005 + a024;
a021 = a014 + a001;
a007 = a015 + a006;
a009 -= a020;
a010 -= cur;
a000 = a019 + a014;
a001 += a006;
a020 = a003 - a011;
}
a018 -= a015;
cur = a013 - a011;
} else {
a012 -= a002;
a024 -= a019;
a001 += a021;
a021 += a007;
a005 += a013;
a019 = a006 - a010;
a001 = a011 + a006;
a013 = a014 - a023;
a003 += a004;
a023 = a018 + a004;
a009 = a007 + a006;
a006 = a007 - a009;
a003 = a014 - a005;
cur = a007 - a017;
a021 = a019 + a005;
a016 -= a009;
a011 = a003 - a019;
a005 += a008;
a001 = a007 - a002;
}
a018 += a012;
a003 = -5 + a001;
a009 = a012 - a001;
a009 = a014 - a002;
a006 -= a015;
a023 = a001 + a022;
a022 = a019 + a016;
a016 += -3;
a019 -= a022;
a005 -= a018;
a006 -= a022;
a004 = a010 + a006;
a022 -= a022;
a009 = a001 + a005;
a018 = a010 + a009;
a019 -= a012;
a000 -= a014;
a019 = a018 + a004;
a022 = -1 + a015;
a003 = a021 - a020;
a005 -= a023;
a003 = a006 + a014;
}
output.collect(prefix, new IntWritable(a024));
}
