// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a006 += a021;
a010 += a020;
a009 -= a011;
a021 = a003 - a013;
a020 = a019 + a005;
a005 -= a022;
a000 += a014;
a015 -= a001;
a015 -= a005;
a005 += a011;
if (a001 != a012) {
a022 = a015 - a004;
a002 += a003;
cur -= a004;
a002 -= a019;
a016 = a003 - a002;
a013 -= a019;
a000 = cur - a005;
a017 = a000 - a000;
if (a017 <= 4) {
a009 = a023 + a014;
a014 += a015;
a019 += a020;
a012 = a022 + a021;
a016 -= a022;
a015 -= a019;
a017 += a003;
a006 = a000 + a021;
a015 -= a017;
a011 = a022 - a010;
a003 = a020 + a005;
if (a004 > a014) {
a003 = a011 + a018;
a022 -= a014;
a003 = a020 + a015;
a020 = a023 - a013;
a021 += a007;
a010 = a014 - cur;
a000 += a013;
a004 += a022;
a011 = a017 - a007;
a007 += a002;
a008 += a019;
a009 -= a009;
a000 = a016 + a022;
a018 = a007 - a023;
a018 += a014;
a003 = a009 - a005;
a005 = a000 - a007;
a007 = a010 + a011;
a013 -= a023;
a023 += a004;
a019 = a010 + a016;
a013 += a003;
a013 = a017 + a008;
a007 = a020 + a011;
a010 += a018;
a017 += a009;
a011 = a021 + a005;
a003 += a009;
a017 -= cur;
a008 -= a015;
a007 = a023 - a021;
} else {
a014 -= a011;
a008 -= a015;
a013 -= a021;
a018 = a024 + a004;
a020 -= a024;
}
a022 -= a006;
a003 += a015;
a021 -= a008;
a011 -= a009;
a017 += a004;
cur += a002;
a013 += 2;
a014 -= a001;
a024 += a009;
a009 = a017 - a024;
a021 = a013 - a019;
a014 = a018 - a010;
a022 = 4 - a014;
a021 = a016 + a006;
a005 += a021;
a002 -= a018;
a003 = a009 + a001;
} else {
}
cur = a023 - a005;
a021 = a020 - a013;
a015 -= a003;
if (a004 > a019) {
a008 -= a023;
a004 += a014;
a011 += a012;
a008 = a019 * -1;
a021 = 0 - cur;
a007 = a019 - 1;
a019 -= a014;
a016 = a001 + a017;
a007 = a004 + a008;
a018 -= a006;
if (cur >= a006) {
a015 += a002;
} else {
a012 -= a021;
a007 -= 1;
cur -= a018;
a022 += a022;
a009 = a020 + a019;
a019 -= a010;
a017 = a002 + a008;
a021 = a017 + a024;
a003 = a017 + a014;
a004 = a001 - a021;
a006 = a008 - a004;
a004 += a021;
a001 = a024 - a023;
cur -= cur;
a017 = a020 - a003;
a014 = a008 + a024;
a000 -= a024;
a008 = a015 - a016;
a023 = a017 - a005;
a001 = a005 - a014;
a008 += a017;
}
a000 -= a016;
a003 = a023 + a006;
a006 -= a012;
a022 = a003 - a012;
a007 += a019;
a009 -= a021;
a000 = 3 - a007;
a017 += a002;
a013 -= a004;
a013 = a023 + a021;
a003 -= a001;
a006 = a008 + a016;
cur = a020 + a010;
a016 -= a020;
a003 -= a020;
a008 += a003;
a013 += a001;
a015 -= a007;
a002 = cur * -2;
a023 += a006;
a006 = a009 + a011;
} else {
a007 += a003;
a013 = a002 + a015;
a002 += a011;
a021 = a000 + a005;
a008 -= a021;
a014 = a012 + a008;
a023 += a006;
a002 += a012;
a009 = a009 - a020;
a021 = a010 + a014;
a024 = a015 + a022;
a001 += a000;
a017 = 1 - a007;
a013 += a015;
a017 -= a008;
a022 = a018 + a009;
a001 = a013 + a006;
a023 += a020;
}
a008 += a013;
a023 = a014 - a001;
a005 = a022 - a001;
a011 = a015 - a009;
a007 -= a008;
a023 = a019 - a002;
a021 -= a011;
} else {
a013 = a004 - cur;
a022 -= a022;
a009 -= a007;
a004 -= a004;
a016 -= a003;
a010 += a019;
a016 -= a018;
a015 += a014;
a007 -= a022;
cur -= a002;
a002 -= a011;
a018 += a022;
a011 -= a018;
a013 += a009;
a007 += a006;
a024 = cur + a002;
a023 += a000;
a019 += a018;
a002 = a023 + a015;
}
a021 = a016 + a024;
a004 += a006;
a001 = a001 - cur;
a015 = a011 - a009;
a015 -= a000;
a015 -= a003;
a015 -= 0;
a014 += a003;
a005 = a022 - a015;
a015 = a021 + a017;
a020 = a013 - a017;
a024 = a016 - a012;
a024 = a001 + a018;
a022 = a008 + a017;
a023 = a000 - a007;
a013 -= a008;
a022 = a024 - a022;
a022 += a016;
a015 = a024 - a020;
a007 = a003 + a010;
a005 = a013 + a012;
a006 += a009;
a005 += a006;
a014 = a024 - a023;
a010 += a016;
a022 = a003 + a010;
a021 -= a016;
a004 -= a020;
a009 = a008 - a005;
a012 = a017 - a007;
a005 -= a004;
a018 -= a010;
a001 -= a001;
a007 -= a000;
a008 += a015;
a015 = a021 - a014;
a019 = a021 + a012;
a011 -= a020;
a012 = a002 - -1;
a003 = a003 + a004;
a000 = a005 - a005;
a017 += a017;
a022 += a020;
a003 = a023 + a008;
a011 += a021;
a024 += a006;
a005 -= a005;
a007 += a007;
a000 = a002 + a014;
a006 = a003 - a009;
a003 += a012;
a007 = a016 + a020;
a024 = cur - a014;
a007 += a024;
a004 -= a019;
a011 = a022 - a009;
a002 = a009 - a003;
a009 -= a010;
a011 -= a005;
a005 -= a003;
a007 += a023;
a022 = a007 - a019;
a013 += a005;
a000 = a009 + a012;
a015 = a017 - a007;
a018 -= a020;
a010 = a021 - a010;
a015 = -2 - a009;
}
output.collect(prefix, new IntWritable(a006));
}
