// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a007 -= a012;
a009 = a003 + a010;
a003 += a019;
a007 += a019;
a015 = a002 - a016;
a018 += a012;
a006 = -1 + a000;
if (a007 == a010) {
a017 = a001 - a015;
a002 -= a003;
a017 -= cur;
a018 = -2 - a003;
a009 += a006;
a005 = a005 - a016;
a002 = a017 - a011;
a013 += a019;
a005 += a015;
a019 = a006 - a000;
a009 += a014;
a014 = a000 + a014;
a013 -= 0;
a004 += a013;
a014 = a013 + a003;
a007 = a007 * -1;
a016 = a012 + a015;
a004 -= a019;
a004 = a006 - a016;
a001 = cur - a002;
a003 -= a007;
a006 -= a003;
cur += a011;
a002 = a008 + a013;
if (a005 == a018) {
a002 = a007 + a009;
a007 -= a016;
a004 += a014;
a017 = a006 + a008;
a004 = a014 - a008;
a018 = a018 + a005;
a016 = a018 - a011;
a000 = a011 + a005;
a010 = a012 - a009;
a002 = a012 - a015;
cur += -3;
a002 += a017;
cur = a014 - a012;
a001 += a018;
a005 = a004 - a013;
a001 = a000 + a001;
cur += a007;
a011 += a014;
a008 = a002 + cur;
a014 -= a005;
a002 += a017;
a017 -= a015;
a003 = a003 + a019;
a014 = cur - a009;
} else {
a009 = a013 - a009;
cur = a003 - a004;
a000 += a012;
a014 = a016 - a001;
a011 = a016 + a014;
a004 = a009 - a019;
a003 = cur + a008;
a009 = a019 - a017;
a013 = a006 + a010;
a014 = 4 + a001;
a019 = a012 - -3;
a001 = cur + a010;
a019 = a001 + 3;
a010 = a004 - a018;
a006 += a005;
a002 += a019;
a014 = a009 + a010;
a016 += a019;
a001 -= a009;
a001 = a018 + a002;
a019 -= a005;
a008 = a014 + 2;
a010 += a002;
a011 += a006;
if (a008 < a016) {
} else {
a003 = a009 - a009;
a014 -= a017;
a006 += a002;
a001 = a010 + a007;
cur = a015 + a018;
a004 = a014 - a015;
a009 = a014 + cur;
a016 -= a007;
a002 += a016;
a006 = a015 - a000;
a012 = a007 - a019;
a004 = a012 - a009;
a014 += a002;
if (a008 != a014) {
a010 = a001 - a003;
a019 -= a003;
a017 += a011;
a006 += a013;
a000 = a016 - a000;
a014 = a009 + a004;
a005 = a008 + a004;
a003 = a015 - a006;
a014 -= a002;
} else {
a005 -= a012;
a003 += a009;
a013 += a010;
cur += a017;
a012 = cur + a001;
a007 -= a007;
a006 += a017;
a009 += a013;
}
a004 = a004 + a012;
a005 = a015 - 2;
a016 = a000 - a019;
a017 += a019;
a013 += a007;
a015 = a007 - a004;
a011 = a007 + a002;
a002 = cur + a007;
a008 -= a000;
a007 -= a016;
}
a013 = a004 - a006;
a010 -= a007;
a017 = cur + a007;
a008 -= a015;
a011 = a012 * 4;
a009 -= a019;
a009 -= a012;
a006 = a006 + a000;
a019 += a005;
a011 = a014 + a017;
a000 += a012;
a012 -= a000;
a011 = a012 - a011;
a004 -= a013;
a001 -= a007;
a003 += a000;
a006 -= a015;
a012 += a014;
a016 -= a015;
cur += a018;
a008 = a000 + a001;
a003 += a000;
a017 += a011;
a000 += a005;
a007 = a006 + a017;
a000 = a014 + a007;
a011 += a019;
a000 = a018 - a019;
a010 += a005;
a016 = a012 - a012;
}
a019 = a006 - a005;
a018 = a014 - a002;
a003 = a002 + a004;
a003 = a012 - -2;
a008 = a006 - a007;
a010 += a017;
} else {
cur = a016 + a005;
a010 += a000;
a001 = a019 + a002;
a018 = a018 + 4;
a007 = a018 - a018;
a004 = a011 - a007;
a009 += a016;
a013 += a005;
a011 += a016;
a011 = a011 - a013;
a014 = cur + -4;
a017 -= a012;
a013 -= a002;
a004 += a011;
a019 -= a015;
a011 += a005;
a011 = a019 + a015;
a001 += a006;
a009 -= a017;
a007 = a002 + a005;
a002 += a016;
a017 -= a010;
a017 = a002 + cur;
a002 += a009;
cur -= a000;
a007 -= a007;
a001 -= a015;
a010 -= a001;
a018 = a010 - a006;
a018 = a001 + a003;
}
a017 = a017 + a000;
a019 = a004 + a011;
a015 = a002 + a012;
a010 -= a007;
a002 = a000 + a001;
cur = a004 - a004;
a009 -= a010;
a017 = a017 + a019;
a017 = a018 + a006;
a011 = a014 + a016;
a011 = a004 + a014;
a015 = a017 - a000;
a017 = a002 - a002;
a001 = a013 + a009;
a006 = -3 - a013;
}
output.collect(prefix, new IntWritable(a017));
}
