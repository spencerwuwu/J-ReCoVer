// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a020 = a011 + a008;
if (a008 < a007) {
a012 -= a005;
a015 = a005 - a010;
a000 -= a006;
a021 = a013 - a022;
a001 += a018;
a020 = a016 + a019;
a013 = a013 - a001;
a001 -= a001;
a006 -= a009;
} else {
a009 -= a003;
a004 = a014 + a002;
a015 = a023 + a001;
a011 = a021 - a012;
a001 -= a000;
a021 = a008 - a015;
a008 = a017 - a000;
a019 = a009 - a005;
a011 = a024 - a021;
a000 = a001 - a020;
a001 -= a004;
a019 += a022;
a011 -= cur;
a016 -= a012;
a020 = a009 + a007;
a023 += a009;
a015 -= a015;
a006 = a011 - a024;
a000 += -3;
a017 -= a010;
a019 -= -1;
a022 += a013;
a013 += a023;
if (a003 <= a008) {
a004 = a018 + 4;
a008 = a021 + a000;
a019 = a022 - a017;
a014 -= a015;
a007 = a007 + 4;
a016 -= a012;
cur += a005;
if (a010 < a016) {
a019 = a020 + a015;
a006 = a014 - a012;
a007 = a000 + a023;
a009 = a019 + a009;
a019 += a000;
a013 = a006 - a014;
a004 = a010 - a001;
a000 -= a017;
a002 -= a001;
a017 += a010;
a004 = 4 + a006;
a017 -= a019;
a016 = a012 + a008;
a011 = a012 + a019;
a022 += a001;
a018 = a015 + -1;
if (a014 < a006) {
a020 = a012 - a024;
a009 -= a011;
a001 = a002 + a004;
a024 -= a019;
a015 -= a023;
a015 = -2 - a007;
a015 = a018 + a008;
a018 += a017;
a009 -= a005;
a022 -= a013;
a001 += a021;
a001 += a015;
a013 -= a000;
a015 = a018 - a001;
a016 = a013 - cur;
a005 = a019 - a008;
a005 -= a008;
a016 -= a003;
a024 = cur - a012;
a013 = a001 + a005;
a001 = a024 - a023;
a001 -= a020;
cur += a009;
a020 = a006 - a006;
a000 += a009;
a022 += a007;
a011 += a006;
a017 += a003;
a019 = a008 + a011;
} else {
a024 += a020;
a005 -= a023;
a002 = a006 + a000;
a016 = a018 - a013;
a022 -= a003;
a003 = a004 + a006;
a019 = a019 - a022;
a023 -= a022;
a019 -= a011;
a021 = a018 + a003;
if (a005 >= a010) {
a011 = a005 - a000;
a022 = a008 + a008;
a013 = a007 + a022;
a006 -= a011;
a014 = a014 * 3;
a010 += a005;
a006 = a024 - a018;
a002 = a001 + a021;
a001 = a012 + a024;
a018 -= a014;
a018 = a013 + a013;
a007 = a002 - a015;
a020 = a004 - a011;
a012 = a021 + a008;
a005 = a011 - a022;
a009 = a021 - a001;
a012 += a005;
a019 += a018;
a006 += a024;
a019 += a024;
a015 += a002;
a007 += a021;
a007 -= a009;
a019 += a012;
a010 = a000 - a001;
a002 = a006 + a003;
a003 = a018 + a006;
a003 -= a017;
a010 -= a014;
a006 = a006 + a007;
a002 = a024 - cur;
} else {
a018 -= a020;
a005 += a024;
a011 = a016 - a003;
a011 = cur - a002;
a005 += a006;
a018 = a020 - a010;
a022 = a011 - a016;
a002 += a002;
a024 = a015 + a007;
a009 = a016 + a018;
a024 -= a022;
a009 += a021;
a022 += a012;
a016 -= a016;
a004 -= a004;
}
a006 = a024 + cur;
a010 = -1 + a015;
a001 += a008;
a020 = a006 - a019;
a023 += a001;
a007 = a008 + a009;
a010 += a004;
a012 -= a014;
a019 = a011 - a014;
}
a002 = a013 - a022;
a021 += a010;
a009 += a014;
a018 -= a022;
a022 -= a012;
a003 += a005;
cur = a006 * -5;
a017 += a015;
a008 = a016 + a022;
a001 = a013 + a009;
a013 = a021 + a023;
a020 += a011;
a016 = a021 + a014;
a023 -= a010;
a023 = a009 - a016;
a017 = 4 - cur;
a007 += a018;
a017 -= a021;
a019 = a017 - 0;
a010 = a004 - a007;
a002 += a014;
a000 = a001 + cur;
cur -= a007;
a021 -= a005;
a002 = a011 + a001;
a022 = a015 - a002;
a006 = a011 + a019;
a009 += cur;
} else {
a010 += a000;
a014 = a009 + a024;
a011 += a023;
a010 -= a014;
a013 -= a016;
a015 -= a023;
cur -= a011;
a003 -= cur;
a002 -= a013;
a017 += a000;
a000 -= a023;
a007 = a000 + a007;
a010 = a001 + a014;
a024 = a006 + -5;
a019 -= a016;
a012 = a017 + a009;
a000 += a009;
a002 += a017;
a007 -= cur;
a013 += a005;
a024 = a001 + a013;
a021 -= 0;
a016 = a013 - a007;
a004 -= a007;
a007 = a016 * -3;
a023 -= a013;
a006 = a013 + a006;
a007 = a008 + a017;
}
a021 += a015;
a018 = a004 - a000;
a011 += a008;
a003 -= a001;
cur = a005 + a011;
a017 += a002;
a021 = a011 - a005;
a024 = a005 - a015;
a001 -= a018;
a017 = a010 + 2;
a009 = a003 - a012;
a017 -= a017;
a009 -= a017;
a004 -= a016;
a020 -= a021;
a009 += a004;
a005 += a019;
a012 = a023 + a015;
} else {
a001 = a016 - a006;
a010 = a023 + a024;
a010 = a004 - a012;
a023 += cur;
a010 += a004;
a011 = a023 - a020;
a018 += a016;
a002 = a012 + cur;
a016 = a014 + a007;
a007 = a018 + a024;
a009 -= a010;
a007 = a004 + a022;
a013 -= a020;
a008 += a005;
cur = a000 - a010;
}
a002 += a005;
cur = a013 - a023;
a022 = a021 - a009;
a004 = a023 - a013;
a002 -= a002;
}
a007 += cur;
a017 -= a013;
a019 = a019 + a011;
a014 -= a010;
a002 += a007;
a001 = a013 - a004;
}
output.collect(prefix, new IntWritable(a001));
}
