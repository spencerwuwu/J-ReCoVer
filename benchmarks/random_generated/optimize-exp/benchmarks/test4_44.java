// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a005 = a005 + a005;
a014 += 4;
a001 = a010 + a005;
a012 -= a004;
a013 = a014 - a004;
a007 = a007 - a013;
a001 = a007 - a016;
a013 = a018 - a003;
a011 = a013 - a019;
a011 = a015 - a007;
a012 -= a002;
a003 = a010 - a018;
a012 = cur - a005;
a009 = a010 - a005;
a015 += a003;
a016 = a000 + a004;
a007 = a018 - a000;
a019 += -3;
a014 = a011 + a007;
a010 -= a018;
a005 -= a012;
a002 -= a015;
a007 -= a005;
a011 = a003 * 3;
a015 -= a005;
a004 += a018;
a010 = a019 - a019;
a019 = cur + a016;
a005 = a004 + a014;
a000 += a016;
a006 += a002;
if (a012 == a001) {
a017 = a012 + a006;
a014 += a018;
a017 -= a011;
a009 += a007;
a017 = a019 * -1;
a016 += a019;
a012 = a009 - a008;
a012 = a004 + a018;
} else {
a018 = a007 + -4;
a006 += a006;
a010 -= -3;
a016 -= a015;
a004 = a013 + a004;
a000 -= a002;
a018 = a017 + a009;
a004 += a007;
a012 = a002 + -2;
a019 = a001 - a016;
a011 -= a011;
a016 = a018 + a018;
a016 -= cur;
a017 = a001 * 0;
a007 -= a003;
a014 -= a000;
a019 += 4;
a001 += cur;
a007 = a007 + a007;
a001 = a004 + cur;
a006 = a002 + a015;
a015 += a017;
}
a004 = a016 - a014;
a017 = a000 - a017;
a019 += a006;
a015 += a008;
if (a019 < a012) {
a000 = a013 + a011;
a019 -= a008;
a013 = a013 + a006;
a016 = a005 - a001;
cur = a018 + a003;
cur = a019 - a018;
a003 += a014;
a017 = a015 + a019;
a007 -= a014;
a011 += a002;
a007 -= a005;
a006 = -1 - a014;
a009 -= 2;
a018 -= cur;
a008 = a015 - cur;
a005 = a017 - a014;
a011 += a019;
a006 = a005 + a005;
a012 -= -4;
cur += -2;
a017 = a009 * -2;
a014 = a011 * -1;
a002 += a008;
} else {
a010 += a001;
a012 -= a018;
a008 -= a010;
a018 = a012 - a016;
a015 = a010 + a006;
a011 -= a016;
a010 = a008 - a016;
a018 -= a018;
a017 = a006 + cur;
a009 += a000;
cur = a014 - a013;
a000 = a005 - a011;
a006 = a011 + a004;
a019 -= a014;
a019 += a002;
a002 += 4;
a018 -= a016;
a003 = a012 + a017;
a018 = a000 + a007;
a007 = a017 + -2;
a018 = a008 - cur;
a007 += a012;
a007 = a012 + a015;
a017 -= a005;
a008 += a014;
a018 = a016 - a019;
if (a010 <= a016) {
a008 = a005 + a011;
cur += a000;
a013 += a008;
a003 -= a006;
a011 = a017 + a004;
a018 = a015 + a013;
a002 = a008 - a006;
a016 += a015;
a011 -= a014;
a015 += a010;
a015 -= a018;
a010 = a005 + a007;
a009 = a012 - a012;
a005 = a001 - a001;
a014 = a010 - a005;
a014 -= a016;
a001 = a010 + a015;
a006 = a000 - a004;
a018 -= a005;
a014 -= a002;
a009 -= a006;
if (a015 > cur) {
a002 -= a011;
a010 -= a006;
cur += a005;
} else {
a007 = a002 + a004;
a019 += a016;
}
a018 = a016 + a008;
a015 = a011 - a019;
a011 = a009 + a019;
a019 = a019 - a012;
a014 -= a017;
a009 = a012 - a011;
a002 = a009 + a001;
a002 = a016 - a004;
a000 += a013;
a009 = a008 + a002;
a007 = a005 + a005;
a006 = a009 + a019;
a019 = a005 - a016;
a013 = a007 - a002;
a009 = a016 + a010;
a018 = a005 + a000;
a003 += a010;
a002 -= a014;
a012 -= a017;
a000 = a005 - a006;
} else {
a018 = a004 + a018;
a008 += a012;
cur += a011;
cur = a006 + a016;
a002 += a006;
a009 = a003 + a005;
}
a011 = a015 + a004;
cur = cur + a009;
a004 -= a001;
a003 = a015 + a012;
a018 -= a003;
a016 = cur + a001;
a002 += a010;
a015 -= a006;
a001 -= a015;
a002 += a015;
a017 = a017 - a004;
a013 = a014 - a008;
a006 += a009;
a014 -= a007;
a009 = a008 + a015;
a007 += a010;
cur = a001 - a015;
a014 = a007 - a007;
a014 += a019;
}
a001 -= a005;
a013 = a004 + a008;
a014 += a017;
a003 -= a009;
a013 += a017;
a000 = a008 - a006;
a017 = a017 + a017;
a010 -= a016;
a003 += a013;
a006 -= a008;
a002 = a004 - a019;
a008 += a003;
a008 += a016;
a014 = a013 + a006;
a015 -= a011;
}
output.collect(prefix, new IntWritable(a006));
}
