// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a018 -= a012;
a024 = a021 - a001;
a001 -= a021;
a016 = a014 + a023;
a008 = a001 * -4;
a014 = a008 - a017;
a007 += a001;
a011 = a018 - a012;
cur = a017 - a010;
a013 = a011 + a005;
a015 -= a012;
if (a013 < a003) {
a001 -= a008;
a024 = a019 - a024;
a004 += a021;
a003 += a020;
a014 += cur;
a012 -= a005;
a017 = a011 - a016;
a021 = a001 - a020;
a012 -= a017;
a007 -= a020;
a018 += a009;
a023 = a000 + a005;
a006 = a003 - a013;
a001 = a007 - a018;
a016 += a007;
a020 += a021;
a009 = a020 + a000;
cur = a008 - a012;
a024 = a011 + a016;
a015 += a006;
a000 -= a003;
a013 = a015 + a013;
a018 += a000;
a022 += a015;
a017 = 2 - a000;
a016 = a012 + a022;
a000 = a010 * -1;
a007 += a022;
} else {
a011 = a015 - a010;
a021 += a003;
a016 = a006 - a018;
a021 = a011 - a002;
a018 -= a005;
a013 -= a002;
a009 = a010 + a018;
a023 = a016 - a014;
a013 += a007;
a023 -= 0;
a012 += -4;
a004 += a023;
a022 += a003;
a013 += a019;
a003 = a020 - a004;
a001 -= a003;
a006 -= a021;
if (a024 > a002) {
a017 += a007;
a005 = a024 - a005;
cur = a006 + a019;
a023 -= a019;
a005 = a018 + a009;
a022 = a001 - a019;
a022 += a000;
a010 -= a003;
a006 = a021 - a024;
a002 += a009;
a013 = a012 - a013;
a023 -= a016;
a016 = a002 + -2;
a009 = a006 + a016;
a011 = a003 - a015;
a012 = a022 + a020;
a011 += a023;
a018 = a021 - a003;
a018 = a022 + a008;
a008 = a023 - a008;
a021 -= a013;
a021 -= a013;
a015 = a008 + -4;
a000 = a019 - a014;
if (a012 > a022) {
a018 = a014 + a008;
a013 -= a005;
a004 = a009 - a002;
a004 = a007 - a022;
a005 = a024 + a014;
} else {
a013 = a024 - cur;
a008 = a016 - a015;
a022 = a010 + a017;
a005 = a022 - a019;
a007 = a017 - a022;
a010 -= a024;
a018 = a018 - a024;
a004 = a001 + a004;
cur = a005 - a017;
a020 = a016 - a023;
a004 += a006;
a002 = a015 + a012;
a015 = a024 - a019;
a019 = a014 + cur;
a002 -= a019;
cur = cur - a012;
}
a001 -= a002;
} else {
if (a014 != a024) {
a018 -= a007;
a011 -= a019;
a019 += a016;
cur += a014;
a004 = a004 - a022;
a016 = a000 + a006;
a023 += a017;
a016 = a003 + a007;
cur -= a018;
a004 = a013 + a016;
a017 = a001 - 3;
a000 = a013 - a007;
a019 -= a012;
a023 += a006;
a024 = a012 - a022;
a015 = a007 + a016;
a016 = 4 + a024;
a016 = a014 + cur;
} else {
}
a022 -= a013;
a014 = a002 + a010;
a009 = a001 + a017;
a006 = a022 + a000;
a002 = a011 - a003;
a003 = a007 + a015;
a000 = a004 + a013;
a016 = a019 - a006;
a024 -= a009;
a015 += a001;
a019 = a000 - a012;
a005 -= a004;
a019 += a012;
a009 = cur - a019;
a015 = a002 + a008;
a014 = a007 + a022;
a014 += a021;
a003 += a012;
a019 -= a020;
a024 -= a009;
a016 = a010 + a019;
a000 -= a021;
a012 = a008 - a013;
a024 = -4 + a022;
a008 -= a006;
a016 = a003 - a015;
a002 = a008 - a020;
a002 = a002 + a012;
a021 = a004 - a009;
a007 -= a014;
a009 -= a014;
a024 -= a009;
if (a014 >= a001) {
a022 = -2 - a012;
a023 += a001;
a014 -= 1;
cur = a017 - a022;
cur = a010 + a022;
a021 -= a006;
a012 += a022;
a008 = 3 - a016;
a018 -= a006;
a003 -= a001;
a024 = 4 - a000;
a020 = a021 - a019;
a018 = a001 - a020;
a005 -= a001;
a005 = -1 - a015;
a000 += a019;
a023 -= a005;
a017 -= a007;
a005 -= a010;
a017 = a009 * -1;
a024 = a013 - a003;
a012 += a008;
a009 += a000;
a010 -= a008;
a016 = a014 - cur;
a015 = a010 + a021;
cur -= a017;
a004 += a007;
a000 = a016 - a023;
a003 = a017 * -1;
a001 = a020 - a011;
} else {
}
cur = a024 - a014;
a017 = a019 + a022;
a008 = a024 + a015;
a017 = a002 - a018;
a003 = cur + a003;
a018 = a021 - a004;
a021 = a006 + a017;
a017 -= cur;
a003 = a008 + a010;
a019 = a018 - a018;
a021 = a014 - a024;
a010 -= a017;
}
a006 = a016 + a016;
a003 = a005 - a016;
cur += a011;
a023 -= a023;
a022 = a015 - a017;
a014 = a016 + a003;
a000 += a003;
a008 = a009 - a022;
a011 = a009 - a023;
a007 += a007;
a003 -= a020;
a004 -= a015;
a013 -= a010;
}
a019 -= a001;
a013 = cur + a018;
a001 = a021 - a005;
a009 = a016 - a000;
a021 -= a023;
a009 = a008 + a000;
a015 += a008;
a007 = a000 + cur;
a004 = a024 + a010;
a000 = a010 - a011;
a012 = a024 + a011;
a009 -= a015;
a011 -= a002;
a017 += a016;
a011 += a001;
a017 += a019;
a021 = a008 + a020;
a000 += -1;
a007 = a023 - a023;
a004 = a003 + a004;
a007 -= a017;
a007 += a011;
a018 += a017;
a021 -= a013;
a003 += a018;
a001 -= a018;
a009 = a002 + a023;
a009 -= a013;
a010 -= a010;
a015 += a020;
a017 = a015 - a016;
a014 += a014;
a016 += a013;
a019 -= a015;
a008 = a008 + a010;
a010 += a005;
a010 = a009 - a019;
a010 = a013 + a001;
a013 = a002 + a022;
a017 -= a009;
a012 -= a016;
a024 += a021;
}
output.collect(prefix, new IntWritable(a019));
}
