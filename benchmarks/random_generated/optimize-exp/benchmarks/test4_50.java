// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
if (a017 == a009) {
a019 += a018;
a014 = a002 + a018;
a002 -= a002;
a007 += a002;
cur = a006 - a015;
a003 = a007 + a010;
a016 += a015;
a008 = a016 - a005;
a000 = a014 - a012;
a014 += cur;
a002 = a002 + a019;
a001 += a004;
a001 = a004 - a002;
a010 -= a004;
a013 = a018 + cur;
a000 = a008 + a016;
a015 += a019;
a001 = a018 + a007;
a015 = a018 - a005;
a018 = a001 + a007;
a002 = a002 + a019;
a003 = a017 - a006;
a007 -= cur;
a009 -= a011;
a010 = a007 - a003;
a000 += 3;
if (cur == a009) {
cur -= a012;
cur = a011 + a015;
a008 += a003;
a018 = a007 - a011;
a010 = a017 + a002;
a010 -= a006;
a012 += a007;
a013 = -2 - a010;
} else {
a010 = 3 - a004;
a000 += a008;
a011 = a013 + cur;
a019 = a011 - cur;
a006 += a015;
a009 += a005;
a013 += a006;
a009 = a015 + a019;
a017 = a012 - a011;
a003 += a011;
a000 += a007;
a002 += a002;
if (a016 == a003) {
if (a007 == a002) {
a012 -= cur;
a012 = a019 + a015;
a000 += cur;
a001 = a018 + a006;
a000 = cur - a019;
a018 = a012 - a001;
a016 = a010 + a008;
a008 = a018 - a019;
} else {
a004 += a003;
a006 += a000;
a015 += a013;
a007 = a015 - a019;
a011 = a007 - a016;
a010 += a019;
a009 = a012 - a006;
a012 -= a012;
a015 -= a011;
a011 = a011 - 4;
a019 = a006 - -5;
a018 += cur;
}
cur += a003;
a006 -= a010;
cur += a010;
a008 = a010 - a001;
} else {
a017 -= a016;
a019 = a001 - a012;
a015 -= a008;
a019 -= cur;
a010 = a003 + a012;
a011 += a008;
a012 = cur + a007;
a005 = a009 + a013;
a000 = a008 + a015;
a013 -= a009;
a009 = a003 + a002;
a001 = a002 + a004;
a003 = a007 - a015;
a017 += a005;
a011 += a015;
a018 -= a013;
a017 += a015;
a011 -= a015;
a010 += a002;
a001 = a017 - a013;
a008 = a018 - a014;
a002 = cur - a004;
a001 = -5 + a011;
a006 += 3;
a002 -= a013;
a013 = a011 + a004;
}
a015 = a004 + a012;
a007 = a010 - a006;
a000 -= a008;
a001 = a003 - a018;
a001 += a013;
a017 = a001 + a013;
a018 -= cur;
a007 = a018 + a006;
a012 += a015;
a006 = a012 + a004;
a009 = a014 * 4;
a014 = a016 - a019;
a007 = a000 + a013;
a014 -= a014;
a001 += a004;
a014 += a012;
a006 += cur;
a004 += a016;
a006 += a005;
}
a012 = a015 + a014;
a004 -= a009;
a000 = a001 * 2;
a015 = a008 - a007;
a003 = a002 + a017;
a001 = a016 - a003;
a009 += a001;
a004 = a002 - a014;
a004 += a013;
a019 += a015;
a007 -= 0;
a000 = a012 - a013;
a000 -= a014;
a013 -= a015;
a017 = a008 + a014;
cur += -3;
a018 -= a011;
a007 = a009 + a011;
a008 -= a012;
a013 = a016 - a001;
a005 = a019 + a014;
a001 += a009;
cur += a011;
a017 -= a002;
a017 -= a011;
a005 -= a007;
a019 += a017;
} else {
a000 = a008 + a007;
a013 = a005 + a003;
cur = 3 - a011;
a009 -= a000;
a009 = a012 - a014;
a018 -= a011;
a017 = a004 + a013;
a007 -= a011;
a005 = a012 + a011;
a011 -= cur;
a011 += a008;
a000 = a015 - a004;
a015 = a017 + a000;
a006 -= a011;
a006 = a001 + a009;
a014 -= a006;
a011 -= 0;
a011 -= a000;
a010 = a004 - -1;
a005 -= a018;
a003 = a006 + a017;
a011 += a003;
a015 -= a018;
a013 = a000 - a001;
a002 -= a004;
a009 += a012;
}
a001 = a014 - a018;
a019 += a005;
a006 = a016 + a012;
a011 += a000;
a014 += a001;
a006 = a003 + a000;
a012 += -3;
a006 = a001 + a005;
a010 += a008;
a007 += -3;
a005 = a019 - a019;
a001 = a011 - a018;
a012 -= a015;
a013 -= a019;
a003 += a015;
a016 -= a003;
a016 = a007 + a016;
a017 -= a018;
a007 += a019;
a005 = a002 + a018;
cur = a013 - a011;
a009 -= a004;
a012 = a011 - a011;
a017 += a014;
a007 = a006 - a013;
a007 += a002;
a001 = a006 + cur;
a013 = a006 - a018;
a012 = a010 + a016;
a010 -= a001;
a013 -= 2;
a010 = a007 - a003;
}
output.collect(prefix, new IntWritable(a012));
}
