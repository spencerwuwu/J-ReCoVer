// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a017 = a010 * -5;
a018 -= a016;
a002 = a001 - a022;
a011 -= cur;
a024 -= a020;
a009 += a011;
a015 -= a016;
a014 = a013 * 3;
a015 += a012;
a019 -= a012;
a016 = a022 + a005;
a020 -= cur;
a001 = a019 + a021;
if (a022 >= a013) {
a006 = a014 + a018;
a022 = a014 - a002;
a007 -= a014;
a001 += a024;
a012 += a002;
if (cur > a002) {
if (a017 != a012) {
a016 = cur - a008;
a019 = a018 * -2;
a003 = a020 + a017;
a021 += a000;
a009 -= a012;
a015 += a013;
a002 = a015 - a018;
a000 -= a024;
a004 -= a013;
a013 = a015 - cur;
a015 -= a018;
a018 = a005 - 0;
a008 = a024 - a008;
a016 = a004 - a012;
a018 = a017 - a015;
a007 = a015 - a005;
a009 += a011;
} else {
a015 -= a010;
a017 = a008 + a021;
a012 = -2 + a018;
a023 += a020;
a017 = -5 + a018;
if (a001 <= a000) {
a021 = a014 - a000;
a022 -= a022;
a007 += a008;
a005 = a019 + a015;
a024 += a003;
a001 = a002 - a000;
a003 += a024;
a000 += a014;
a005 -= a015;
a000 = a019 - a023;
a017 += a000;
cur = a018 - a023;
a001 = a002 - a003;
a005 -= a019;
a011 += a010;
a009 -= a000;
if (a011 == a022) {
a007 = a023 + a004;
a023 += a004;
a024 = a021 - a016;
a005 -= a007;
a019 = a012 + cur;
a003 += a001;
a010 -= a010;
a012 -= a008;
} else {
a000 = a016 - a020;
a002 -= a023;
a021 = a009 + a019;
a011 += a016;
a018 -= a004;
a012 -= a008;
a006 = a013 + a002;
a020 += a001;
a012 = a002 - cur;
a005 += a007;
a023 = a017 + a016;
a023 += a017;
a017 += a020;
}
a014 -= a002;
a009 -= a024;
a002 = a002 - a001;
a015 -= a022;
a012 += a015;
a000 = a019 + a020;
} else {
a000 -= a012;
a012 = a003 + a010;
a022 += a003;
a006 += a004;
a013 += a012;
a003 = a012 - a014;
a020 = a014 + a007;
a007 += a017;
a008 += a017;
a001 = a015 - a022;
a014 = a011 + a020;
a005 = a005 + a014;
a013 = a012 + a004;
a013 = a015 - a007;
a015 += a023;
a010 -= cur;
a009 += a009;
}
a008 = a000 - a000;
a003 += a011;
a004 += a008;
a014 = a021 - a005;
a008 -= cur;
a002 = a013 - a021;
a011 = a015 - a004;
a019 = a012 + a006;
a005 = a010 + a007;
a007 -= a002;
a022 -= a008;
a020 = -1 - a011;
}
a023 = -1 - a021;
a023 -= a008;
a023 = a015 - a020;
a007 = a014 + a013;
a002 -= a005;
a010 = a001 + a007;
a007 -= a002;
a004 -= a002;
a001 = a008 - cur;
a015 = a018 - -4;
a005 = a011 + a010;
a002 += a021;
a011 += a023;
a017 = cur + a017;
a018 = a008 - a011;
a014 = a018 + cur;
a015 += a002;
a000 -= a008;
a005 = cur - a017;
a012 -= a002;
a003 += a014;
a002 += a017;
a009 = a000 - cur;
a023 -= a013;
a004 = a022 + a011;
a006 += a022;
} else {
a010 = a012 + a010;
a002 += a011;
a022 = a007 - a010;
a022 -= a010;
cur = a024 - a008;
a006 += a002;
a010 += a020;
a020 = a002 + a001;
}
a001 = a011 - a000;
a014 = a003 - a016;
a015 += a018;
a007 += 2;
a019 -= a004;
a010 += a020;
a012 = a004 + a017;
a009 = a007 - a010;
a023 = a000 - a011;
a003 += a007;
a020 += a006;
a016 -= a022;
a023 = a022 - a021;
a002 = a022 - a002;
a005 -= a003;
a016 += a013;
a013 += a020;
a013 -= a012;
a014 += a001;
a024 = a010 + a001;
a016 = a005 + a021;
a000 = a009 - a002;
a017 += a021;
cur += a007;
a016 = a014 - a021;
a008 = a004 + a008;
a006 = a020 + a014;
a023 += a006;
a009 -= a015;
a012 = a021 + a018;
a009 = a024 - a010;
a019 = a003 + a003;
a018 += a003;
} else {
a019 = a015 - a016;
a022 = a008 - a004;
a007 += a004;
a000 = a008 - a011;
a013 = a011 + a006;
a003 = 0 + -3;
a016 = a016 - a014;
a015 -= a000;
a005 += a016;
a024 -= a014;
a001 += a012;
a015 = cur - a001;
a014 = a010 + a004;
a022 += a003;
a022 -= a011;
a024 += a013;
a021 = a014 + a020;
a007 -= a019;
a005 = a006 - a021;
a006 = a011 + a013;
a016 += a002;
a023 = a016 - a001;
a001 = a000 - a020;
a012 = a022 - a012;
}
a006 -= a013;
a012 = a021 + a008;
a024 -= a001;
a015 -= a019;
a002 = a011 - a010;
a009 = a021 - a008;
a001 = a003 - a017;
a008 = a004 + a012;
a022 = a006 - a009;
a023 -= a004;
a008 += a008;
a006 = a003 - a019;
a002 = cur + a022;
a017 -= a019;
cur += a015;
a006 = a003 + cur;
a007 -= a011;
cur = a018 - a023;
a011 -= 1;
a004 = a009 + a023;
a003 = a001 + a003;
a020 -= a018;
a012 = -2 + a017;
a011 += a013;
a016 += a012;
a018 = a021 + cur;
a006 = a007 + a002;
a015 -= a017;
a018 -= a022;
cur = a000 - a016;
a015 = a022 + a005;
a002 -= a015;
a005 = a024 + a011;
a014 = a020 + a007;
a010 -= a007;
a006 += a001;
a019 += 2;
a019 = a020 + a023;
a019 += a005;
a012 -= a002;
a018 += a021;
a004 += a008;
a004 -= a024;
a008 = a016 - a003;
a013 -= a005;
a007 -= a012;
a011 -= a024;
}
output.collect(prefix, new IntWritable(a014));
}
