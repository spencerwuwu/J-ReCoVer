// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a002 = a013 - a014;
a017 = a012 - a000;
a012 -= a006;
a001 = a016 + a007;
a015 = a017 + a007;
a019 += a019;
a019 = a000 - a011;
a019 -= a018;
a007 += a003;
a006 += a000;
a007 += a009;
a000 -= a004;
a009 -= a003;
a011 += a007;
if (a008 != a016) {
a006 -= cur;
a010 += a011;
a016 = a008 * 0;
a013 += a001;
a016 -= a008;
a002 -= a014;
a003 += a005;
a009 -= a015;
a018 -= a012;
a012 = a012 + a011;
a019 -= a004;
a007 -= a003;
a008 = a005 + a003;
a008 = a012 + a007;
a009 = a018 - a016;
a001 -= a015;
a003 -= a010;
a017 -= a013;
a017 += a017;
a002 = a006 - a015;
cur = a001 - a015;
a016 = a005 + a006;
a014 -= a009;
a009 -= a017;
a019 -= a016;
a007 = a009 - a016;
a014 += a016;
a013 = a004 - a001;
a004 = a014 + cur;
a016 -= a002;
a014 -= a006;
a013 = cur - a003;
a008 += a016;
if (a017 >= a016) {
a016 += a008;
a005 = a002 + cur;
a003 += a009;
a019 += a006;
a013 += a017;
a019 = a009 + a018;
a007 += a007;
a019 -= a017;
a003 -= a019;
a014 += 4;
a018 += a009;
a011 -= a014;
a003 += a015;
cur += a004;
if (a016 <= cur) {
a015 -= a001;
a017 = a018 + 1;
a006 = a017 + 0;
a013 -= a015;
a018 = a012 + -1;
a013 -= a017;
a003 += a013;
a002 = a019 + a004;
a017 = cur - a011;
a019 -= a014;
a009 += a017;
a004 = a013 - a000;
a009 = a012 + a012;
a008 = a008 + a012;
a000 = a017 + a002;
a016 += a000;
a010 -= a011;
a016 = a004 + a015;
a013 -= a006;
a001 = a018 - a003;
a016 -= a009;
a014 = a014 - a016;
a016 += a009;
a011 = a007 + a018;
a007 -= a008;
if (a017 < a000) {
a015 -= a002;
a015 = a011 + a009;
a007 = a009 - cur;
a005 += a000;
a007 = a000 + a004;
a010 = a001 + a002;
a002 += a000;
a001 -= a005;
a018 -= a003;
a011 -= a019;
a008 = 4 - a017;
a015 = a001 - a002;
a003 = a012 - a006;
a001 = a006 + a008;
a000 += a008;
a001 -= a007;
a003 = a001 + a008;
a004 = cur - a018;
a006 += a002;
} else {
a017 = a016 - a013;
a007 -= a009;
a017 = a012 - a013;
a015 -= a013;
a007 -= a006;
a010 -= 1;
a004 = a001 - a004;
a017 += a012;
a011 = a001 + cur;
a009 -= a006;
a002 -= a009;
a010 += a000;
a014 = a001 - a019;
a004 += a004;
a009 += a017;
a012 = -5 - a008;
a012 -= a019;
a004 += a000;
a000 -= a002;
a010 += a000;
a006 = a006 - a012;
a008 -= a005;
a019 -= a016;
a011 = a000 - a018;
a004 -= cur;
a014 = a011 + a010;
a000 = a018 + a005;
}
a015 -= a013;
a015 = a003 + a010;
a011 = a019 + a019;
a010 -= a009;
a007 = a019 + a004;
cur += -5;
a010 = a007 - a003;
a006 = a008 - a018;
a003 -= -3;
a012 = a000 + a008;
a010 -= -1;
a006 = a018 + a001;
a007 = a018 + a007;
a006 -= cur;
a007 = a013 - a005;
a002 -= a014;
a018 = a007 + a014;
a005 = a007 + a006;
a008 = a013 - a003;
a005 = a017 - a016;
a004 = a008 - a014;
a009 += a013;
a019 -= a008;
a001 = a003 + a016;
} else {
a019 = a015 + a013;
a012 = a003 + a011;
a008 -= a012;
a019 += a000;
a019 += a006;
a008 = a013 - a015;
a017 = a013 + a005;
a014 = a015 + a015;
}
a005 += a012;
a007 = a017 + a000;
a018 = a003 + cur;
a009 -= a000;
a005 = a017 - a005;
a014 += a007;
a011 = a012 + a005;
a001 = a008 + a017;
a017 -= a016;
a019 = a008 - a019;
a000 = a018 - a005;
a006 = a013 + a018;
a018 += cur;
a005 = cur + a007;
a000 = a006 + a004;
a015 += a002;
a011 -= a016;
} else {
a018 -= a018;
a002 = a013 + a016;
a012 = a018 - a002;
}
a011 = a014 + a018;
a001 += a004;
a009 = a001 - a013;
a019 -= a011;
} else {
a002 -= a015;
a009 += a007;
a002 = a001 + a014;
a000 = a014 + a016;
a017 -= a017;
a000 = a006 + a003;
a018 += a001;
a011 += a012;
a014 = a017 - cur;
}
a015 = a019 - a010;
a003 = a014 + 0;
a017 = a001 + a006;
}
output.collect(prefix, new IntWritable(a017));
}
