// Note: only +, - operations
// Parameters:
//   Variables:   30
//   Baselines:   300
//   If-Branches: 30

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a028 = a023 + a012;
a022 = a004 + a007;
a007 -= a014;
a010 = a015 + a008;
a014 -= a023;
if (a015 > a001) {
a021 = cur - a007;
a029 -= a021;
a006 -= a005;
a024 = a005 - a017;
a017 += a028;
} else {
}
a007 = a008 + a009;
a027 += a008;
a015 = a025 - a004;
a006 = a004 + a024;
a002 = a007 - a001;
if (a017 <= a018) {
a003 = a011 + a026;
a028 += a000;
a008 += a010;
a022 = a009 + a027;
a000 -= a016;
a007 -= a017;
a010 = a003 + a003;
if (a008 != a004) {
a023 += a022;
a020 = a016 - a020;
a028 -= 4;
a003 = a014 - a027;
} else {
a025 += a011;
a014 -= a023;
a025 = a003 - a022;
}
a014 = a009 + a024;
a002 = a009 + a025;
if (a025 == a002) {
a026 = a013 + a014;
a025 = a012 - -1;
a025 -= a019;
a000 = a025 - a020;
if (a029 != a012) {
a029 = a004 + a020;
a012 -= a015;
a021 = a014 - a000;
a006 = a007 - a028;
} else {
a010 -= a024;
if (a003 > a001) {
a016 += a004;
a027 = cur + a021;
a017 += a011;
a002 += a027;
a013 -= a024;
a010 = a029 + a007;
a006 = a009 + a022;
} else {
if (a018 >= a012) {
a018 += a022;
a028 -= a023;
a016 = a023 - a001;
a010 = a020 + a000;
} else {
a004 = a001 + a006;
a005 += a001;
a023 = a024 + -1;
a028 += a010;
if (a007 >= -2) {
a000 = a019 + -5;
a014 = a007 + a019;
a008 += 1;
a012 = a016 + a003;
a023 += a001;
} else {
a004 = a001 - a003;
a006 += a016;
a018 = -1 + a028;
a020 = a019 - a022;
a020 = a015 - a004;
a027 -= a015;
a018 -= a017;
}
a014 = a010 + a008;
a019 -= a008;
}
a001 = a012 - a004;
a013 -= a002;
if (cur > a004) {
a022 = a024 - a002;
a014 -= a008;
a019 = a011 - a015;
a022 += a020;
} else {
a005 += a003;
a025 = a023 + a013;
if (cur > a028) {
a008 -= a012;
a019 = a017 - a005;
a018 += a006;
a021 -= a012;
a014 -= cur;
a008 = a023 + a002;
if (a001 < a021) {
cur -= a028;
} else {
a017 -= a003;
a022 = a002 + a000;
a019 += a011;
a006 -= a019;
}
a005 = a000 - a017;
a010 = a017 - a024;
a029 -= a018;
} else {
if (a026 >= a025) {
a002 += a015;
a009 = a014 - a004;
a002 -= a028;
a003 = a026 - a018;
a023 = a008 - a024;
} else {
a028 -= a016;
a002 -= a009;
a010 -= a005;
a028 += a002;
a004 = a021 + a015;
a009 = a020 + a025;
a017 += a027;
}
a001 = -4 - a009;
a023 -= a005;
a005 -= a026;
a026 = a014 - a004;
a024 -= a011;
a020 = a003 + 4;
a029 -= a012;
if (a017 > a024) {
a012 -= a017;
a029 -= a014;
a026 = a012 + a009;
a006 = a024 - a009;
} else {
a026 = a027 - a003;
a021 += a020;
a011 -= a017;
a013 = a012 * 1;
if (a010 != a001) {
a022 = a019 - a017;
cur -= a019;
a009 -= a020;
a007 -= a007;
a024 -= a011;
} else {
a029 = a026 + a000;
a027 = a017 - a029;
a000 += a012;
a027 = a022 + a020;
a001 -= a008;
}
a016 = a023 + a024;
a023 -= 3;
a018 += a028;
}
a017 += a018;
a017 = a029 - a011;
cur = a002 - a022;
a001 -= a000;
a017 -= 2;
a016 = a028 + a003;
a020 -= a002;
}
a018 = a024 + a017;
if (a005 != a028) {
a002 = a018 - a014;
a019 = a013 - a027;
a018 -= a001;
a018 = a011 - a001;
a004 = a004 + a001;
a004 = -3 - a015;
a007 += a025;
} else {
if (a009 < a006) {
if (a002 != a019) {
a008 = a006 + a014;
a006 -= a018;
a005 = a005 - a009;
a021 += a008;
a011 -= a015;
a008 = a001 + a018;
if (a022 != a019) {
a008 = a026 - a001;
a026 = a019 - a020;
a010 = a016 - a002;
a027 = a023 + a022;
a005 = a005 - a012;
if (a015 == cur) {
} else {
a007 = -5 - a018;
a008 += a027;
a001 -= a004;
a025 = a015 + a000;
a022 -= a014;
a016 -= a025;
if (a029 == 1) {
} else {
a000 = cur - a009;
a005 = a022 - a019;
a018 -= a026;
a014 += a008;
}
a000 -= a011;
if (a013 == a017) {
a024 -= a009;
a017 -= cur;
a004 -= a008;
a023 += a017;
a022 = a021 + a002;
a015 += a027;
cur += a029;
if (a001 > a005) {
a020 += a004;
cur += a001;
a009 += a024;
a020 = a007 - a018;
if (a022 < a020) {
a007 += a000;
a021 += a007;
a016 = a020 + a023;
a021 = a015 + a026;
a010 = a005 * -4;
} else {
a004 = a012 + a024;
a000 = cur + a015;
a005 -= cur;
}
a029 = a023 - a018;
a024 = a011 - a004;
a015 -= a018;
a016 += a008;
a024 = a011 + a004;
a019 += a013;
if (a028 >= a028) {
a021 = a023 - a021;
a018 = a012 - a019;
a008 = a004 - a012;
a012 += a026;
a007 -= a005;
a024 = a014 + a027;
a005 -= a010;
} else {
a021 = cur - a012;
a010 = a028 - a005;
a017 = cur - a028;
cur -= a010;
}
a016 -= a000;
a005 += a014;
a002 += a023;
a000 = a002 + a027;
a010 = cur + a007;
if (a002 <= a016) {
a018 = a018 - a028;
a004 += a027;
a004 -= a021;
} else {
}
a026 = a010 + a018;
a023 -= a022;
} else {
a003 = a009 + a011;
a027 = a016 + a021;
a002 -= a021;
a028 -= a023;
if (a016 <= a006) {
a000 += a026;
if (a018 >= a014) {
a014 = a008 - a012;
a006 = a029 + a001;
a006 += a005;
a020 += a026;
a021 += a001;
} else {
a019 -= a014;
if (a023 == a008) {
a016 = a014 + a025;
a014 -= a021;
a011 += 4;
a028 -= a010;
a004 += a015;
if (a011 < a012) {
a029 += cur;
a028 = a029 - 3;
a009 -= a014;
cur += a014;
} else {
a029 += a013;
a025 -= a027;
a028 -= a019;
a027 += a001;
if (cur < a004) {
} else {
a005 -= a019;
a005 += a001;
a009 -= a012;
a018 += a010;
a014 = a004 - a007;
a022 += a021;
a005 += 2;
}
a029 -= a029;
a011 -= a019;
a006 -= a004;
a020 += a020;
}
cur -= a003;
a010 += a002;
a012 = a016 + cur;
} else {
a013 = a014 - a011;
a023 += a026;
a018 -= a018;
a012 -= a025;
a018 = a028 + a009;
}
cur -= a005;
a016 = a020 - a002;
a026 -= a002;
a006 += a008;
a007 -= a007;
}
a024 = a014 + a026;
a016 += a009;
a008 = a024 + a014;
a029 -= a004;
} else {
a003 -= a025;
}
a022 += a028;
a018 = a017 - a029;
a024 = a007 - a013;
a000 = a003 + a024;
a009 = a012 - a000;
a019 = a011 + a023;
}
cur += a017;
a013 = a004 + a024;
a004 = a020 - a014;
a018 = a020 + a022;
a000 -= a028;
a008 = a010 + a023;
} else {
a014 += a027;
a029 = a008 - -2;
}
a001 += a014;
a000 = a000 + a021;
a020 -= a017;
a008 = cur - cur;
}
a017 = a009 - cur;
a008 = a012 + a017;
} else {
a007 += a012;
cur += a010;
a016 += a021;
a001 = a013 + a000;
}
a008 += a028;
a011 = a012 - a006;
a022 += a001;
} else {
a016 = a016 + a010;
}
} else {
a010 = a024 - a029;
a023 += a024;
}
}
a011 = a001 - a017;
a004 = a002 - a007;
}
}
}
} else {
}
} else {
}
a004 = a020 - cur;
}
output.collect(prefix, new IntWritable(a018));
}
