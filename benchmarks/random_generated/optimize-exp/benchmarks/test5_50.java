// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
if (a016 > a021) {
a015 = a008 + a021;
a015 = cur - a004;
a019 = a018 + a012;
a007 = a012 - a005;
a010 = a013 * 0;
a013 = a002 - a014;
a021 += a012;
a007 -= a004;
a004 = a001 - a000;
a006 += a021;
a014 = 0 - a024;
a022 = a019 - a013;
a023 = a012 + a007;
a012 = a007 - a008;
a016 -= a007;
a013 = a010 - a012;
a001 -= a003;
a017 = a003 + a021;
a023 = a014 - a005;
a022 = a020 - a001;
a021 = a013 - a010;
a008 += a008;
a023 = a015 + a006;
a009 += a021;
a024 = a016 + a005;
a021 = a002 - a023;
a015 -= a009;
a014 = a000 - cur;
if (a002 <= a022) {
a001 = cur - a001;
a007 = a001 + a008;
a013 = a023 - a012;
a000 = a017 + a018;
a006 = a000 - a014;
a021 = a008 + a001;
cur = a001 * 1;
a005 = a017 + a009;
a021 = a009 - a000;
a020 += a019;
cur = a008 + a019;
if (a010 <= a006) {
a007 -= a010;
} else {
a020 = a004 + a019;
a014 += a014;
a011 += a015;
a006 = a008 + a000;
a006 = a001 * 4;
a006 -= a000;
a012 = a015 + a022;
a004 -= 1;
a021 -= a013;
a024 = a024 - a022;
a017 -= a009;
a005 = -3 + a000;
a011 -= a020;
a011 = a021 + a014;
a007 -= a005;
a008 = a006 + a005;
a011 = a003 - a017;
a003 = a014 + a015;
a016 = a021 - a023;
a013 += a003;
a008 = a013 + a003;
a013 = a005 - cur;
a002 = a003 + a011;
a014 += a012;
a008 = a019 + a023;
a018 += a016;
a010 += a023;
a018 += a005;
a007 = a016 - a003;
a002 = 4 + a011;
a011 = a015 - a007;
}
a000 += a010;
a000 -= a009;
a023 = a023 - 2;
a018 = a013 + a016;
a012 = a000 + a007;
a018 -= a021;
a017 += a013;
a016 += a020;
a019 = a017 + a012;
a015 = a020 - a020;
a014 += a015;
a001 = a006 - a000;
a016 -= a019;
a002 += a015;
a013 -= a018;
a000 += a006;
a005 = a001 - a003;
a000 -= a002;
a021 -= a003;
a024 += a005;
a022 += a016;
a005 -= a012;
a020 = a000 + a015;
a008 = a020 + a018;
a003 = a006 + a003;
if (a008 >= a014) {
a004 = a012 - a004;
if (a014 < a001) {
a009 = a020 - a014;
a024 -= a002;
a015 -= a008;
a016 += a010;
a003 = 3 + a017;
a018 -= a022;
a012 = a014 + a001;
a017 += a022;
a006 -= a020;
a018 += a016;
a023 = a021 - a011;
a020 = a009 + a013;
a006 += a021;
a004 = a008 + a016;
a002 += a003;
a000 -= a009;
a011 = a002 - a003;
a019 = 3 - a009;
a008 = cur + a018;
a020 = a018 - a018;
a022 = a018 - a012;
a024 = a021 - a020;
} else {
cur = a021 - a005;
a007 = a018 - a008;
a007 -= a013;
a000 = a012 - -2;
a022 += a019;
a022 += a022;
a002 -= a004;
a010 = a023 + a002;
a005 = a019 - a004;
}
a009 = a010 - a003;
a005 -= a010;
a011 += a007;
a014 += a007;
a002 -= a005;
a001 = a024 + a013;
a001 -= a012;
a010 = a000 - a001;
a004 -= a022;
a015 += a005;
a018 += a004;
a000 += a015;
a008 = cur + a023;
a019 = a014 + a020;
a010 = a018 - a006;
a001 += a015;
a017 = -5 - a002;
a016 += a003;
a005 = a002 - 4;
a007 += a001;
a012 = a021 + a008;
a000 += a020;
a023 += a006;
a016 += a018;
a004 = a015 + cur;
a014 -= a022;
a009 += a008;
} else {
a008 = a014 - a000;
a020 += a014;
a009 = 3 - a002;
a018 += a003;
a014 += a021;
a016 -= a003;
a014 -= a005;
a017 = a014 + a010;
a003 += a011;
a013 -= a011;
a007 = a020 * -3;
a012 -= a020;
a015 = a006 + a004;
a023 -= a019;
a023 = a014 + a013;
a003 = a018 + a001;
a009 = a000 - a006;
a022 = a012 + a024;
a016 = a021 - a022;
a020 += a004;
a015 -= a022;
a009 += a022;
a020 += a013;
a007 = a012 + a018;
a005 += a018;
a011 += a017;
a023 += a014;
}
a008 = a012 + a012;
a015 = cur + a005;
a017 -= a022;
a022 -= a023;
a013 = a011 + cur;
a001 = a008 + a007;
a017 = a002 + a003;
a015 += a011;
a019 -= a004;
a008 = a015 - a015;
a023 += a004;
a005 = a001 + a008;
a004 += a017;
a021 = a016 + a006;
a002 = a016 + a008;
a021 = a005 - a018;
a011 += a021;
a007 = a019 + a024;
a004 = a018 - a011;
a003 -= a002;
a024 += a020;
a022 -= a005;
} else {
a014 = a024 - a005;
}
a024 = a018 + a011;
a004 = a020 - a013;
a008 -= a024;
a010 = a004 + a005;
a001 = a022 + cur;
a003 = a010 + a011;
a014 = a009 + a015;
a019 = a020 + a013;
a013 += a020;
a009 = a006 - a007;
a023 += a006;
a021 = a010 + a023;
a024 = a024 - a024;
cur -= a003;
a013 += a008;
a001 -= a001;
a014 += a008;
a019 = a001 + a024;
} else {
a011 = a021 + a019;
a014 = a010 + a001;
a019 -= a013;
a008 = a014 - -5;
a011 = a010 + a002;
a015 += a003;
a024 = a002 + a009;
a005 += a013;
a016 += a004;
a012 = a021 - a002;
a006 -= a018;
a009 -= a008;
a019 += a003;
a019 = a003 - a022;
a005 -= a013;
a016 += a017;
a015 -= a017;
a018 += a020;
a013 += a002;
a018 -= a004;
}
a000 = a022 + a014;
a014 += a023;
a023 -= a018;
a011 = a021 - a003;
a007 = a003 + a009;
a015 -= a022;
a013 = a006 - a014;
}
output.collect(prefix, new IntWritable(a021));
}
