// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 20

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a015 = cur - a007;
a016 = a009 - a006;
a006 += a012;
a011 = a019 + 3;
a016 -= a005;
a006 = a015 + a013;
a003 = a011 + a007;
if (a018 == a002) {
a006 = a009 + a002;
a005 = a003 + a011;
a006 -= a008;
a000 -= cur;
if (a000 < a004) {
a017 = a010 + a009;
} else {
a003 -= a015;
a013 = a006 + a013;
a007 += a006;
a006 += a004;
if (a008 >= a019) {
a002 = a007 - a017;
a013 = a004 + a006;
a002 = a019 + a015;
} else {
a002 -= -1;
a003 += a002;
a006 -= a009;
a010 = a011 + a017;
if (a009 < a010) {
a002 -= a017;
a004 += a016;
a011 = a010 + a013;
a003 -= a010;
a018 = cur - a018;
if (a003 > a018) {
a005 -= a002;
} else {
a011 = a000 - a018;
a015 = a001 - a012;
a003 += a005;
a007 -= a004;
}
a016 += a009;
a015 = a000 - a002;
if (a009 >= a013) {
a001 = a010 - a019;
a018 = a014 - a016;
a016 = a002 + a014;
a001 -= a000;
a015 = a009 + a011;
} else {
a015 = a001 * -2;
a009 = a012 - cur;
a003 += a007;
a010 += a007;
a003 += a013;
a013 -= a016;
a006 = a017 + a004;
}
a008 = a007 + a009;
a009 = a005 + a002;
a018 = a002 + a017;
a019 -= a015;
a018 = a004 + a015;
if (a014 < a019) {
a015 = cur + a002;
a004 = a010 - a016;
a019 -= a013;
a001 += 4;
a009 += a001;
a013 = a010 - a018;
if (a005 > a013) {
a019 += a016;
a004 = a005 * 3;
} else {
a018 = a015 - a002;
a016 = a006 - a011;
a008 = a010 + a015;
a004 = a000 + a009;
a013 = a014 - a013;
a011 = a007 + a019;
a018 = a007 - a011;
}
a016 = a003 - a010;
a010 = cur - a004;
a017 -= a013;
a009 = a012 - a006;
a006 -= a004;
} else {
a017 -= a005;
if (a015 >= a012) {
a004 = a018 + a001;
a016 = a008 - a002;
a017 = a016 + a015;
a019 -= a009;
a008 -= a008;
a015 -= a001;
a003 = a011 + a007;
if (a015 >= a001) {
a002 += a017;
a001 = a001 + a019;
if (a012 > a015) {
a015 = a005 + a012;
if (a008 <= a012) {
if (a018 < a011) {
a000 = a014 - a005;
a010 -= a005;
a008 = a007 + a019;
a001 += a017;
} else {
a017 -= a012;
a005 = a016 + a014;
a013 -= -5;
if (a010 > a013) {
a011 -= a014;
a009 -= a014;
a002 = a010 + a015;
} else {
a017 = a014 - a019;
if (a008 > a019) {
a019 = a017 + a009;
cur = a014 - a006;
if (a018 == a015) {
} else {
a006 -= a012;
a018 = a010 - a002;
a018 = a000 - a018;
a007 = a001 - a002;
if (a012 > a019) {
a009 -= a016;
a015 = a007 - a011;
a013 += a012;
a012 = cur + a013;
a006 = a001 + a019;
} else {
a014 = a008 + a006;
a019 = a006 + a006;
a000 -= a012;
a007 = a010 - 2;
a005 = cur - a005;
a003 += 4;
if (a011 == a003) {
} else {
if (a018 == a009) {
a015 = a018 - a007;
} else {
}
a018 -= a017;
}
a003 = a013 + a010;
}
a008 = a019 - a008;
a015 = a007 - a014;
a001 += a003;
a007 -= a007;
a014 -= a012;
a005 = a000 - a019;
a018 = a007 + a000;
if (a004 < a017) {
a002 -= a009;
a006 = a015 - a017;
} else {
a013 -= a004;
a000 += a018;
a015 += a016;
a009 -= a018;
a014 = a015 + cur;
a004 -= a001;
}
a013 += a015;
a018 += a009;
a000 += a012;
a013 += cur;
a011 = a013 - a003;
a002 = a018 - a019;
a011 = a015 + a005;
}
a002 -= a012;
a002 += a004;
a014 -= a001;
a003 -= a015;
a019 = a018 + a015;
a001 = a012 + cur;
} else {
}
}
cur += a000;
a017 = a004 - a000;
a013 -= a017;
a003 = a015 + a018;
}
a010 = a001 - a006;
a015 = cur - a019;
a011 = a016 - a002;
} else {
a008 = a018 - a011;
}
a010 -= a007;
a004 = a015 + a016;
a016 += a008;
a011 = a019 + a010;
a009 = a018 - -1;
} else {
a005 += a002;
a015 = a003 - a019;
a001 += a007;
a003 += cur;
a008 = a004 + a004;
a015 += a001;
}
} else {
a016 = a013 + a018;
}
a001 = a009 + a010;
a003 = a002 - a009;
a004 -= a005;
cur += a001;
a010 -= a010;
a003 = a000 + a016;
a014 = a014 - a003;
} else {
a003 = a003 + 1;
a002 += a011;
}
a001 = a002 + a002;
}
} else {
a016 -= a001;
a007 = a006 + a014;
}
a011 += a019;
a003 += a018;
a012 -= a012;
a013 -= a000;
a012 = a013 - 2;
a016 -= a008;
a005 += a006;
}
}
a019 = a004 + a002;
a019 += 4;
a014 -= a012;
a011 -= a004;
a008 = a011 - a002;
a018 -= a007;
} else {
a002 = a015 + a016;
cur += 2;
a000 += a016;
}
a012 = a009 - a019;
a002 -= a003;
a017 -= a017;
a015 += a001;
a007 = a002 - a017;
a010 += a011;
a013 = a011 + a007;
cur = a013 + -4;
a018 = a006 - a016;
a015 += a011;
}
output.collect(prefix, new IntWritable(a001));
}
