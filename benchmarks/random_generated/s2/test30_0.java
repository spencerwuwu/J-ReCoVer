// Note: only +, - operations
// Parameters:
//   Variables:   30
//   Baselines:   300
//   If-Branches: 30

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a017 -= a002;
a027 = a005 - a018;
cur = a006 + a005;
a007 -= a027;
if (a026 >= a012) {
if (a027 == a017) {
a012 += a011;
cur = a008 + a020;
a023 -= a001;
a012 -= a019;
a019 = a023 - a006;
a003 = a010 - a005;
if (a018 > a021) {
a015 = cur - a021;
a005 = a007 - a022;
cur = a005 - a007;
a003 += a011;
a011 += a007;
if (a025 >= a008) {
a020 += a014;
a009 = a020 + a020;
a008 += a014;
} else {
a006 += a013;
a022 = a003 * 1;
}
a027 = a017 - a001;
a018 += a015;
a025 = a023 - a027;
if (a028 != a019) {
a012 = a009 - a023;
} else {
cur -= a002;
if (a010 <= a026) {
if (a028 > a011) {
} else {
a008 = a022 + a010;
a023 += a022;
a015 = -1 - a027;
a015 = a020 + a023;
a022 -= a023;
if (a007 <= a028) {
a023 += a010;
a010 -= a029;
if (a005 == a021) {
} else {
a005 = a026 - 4;
}
a010 = a000 + a023;
a018 -= a003;
} else {
a000 = 3 - a008;
a008 -= a024;
a024 = 1 - a010;
if (a001 >= a004) {
} else {
a023 = a014 - a002;
a020 = a009 - a006;
a011 = a006 - a021;
a016 += a009;
a004 += a021;
}
a021 = a001 + a002;
a019 += a018;
cur = a018 - a012;
a022 = a022 - a015;
a001 += a023;
if (cur < a021) {
a021 += a019;
a028 += a002;
} else {
a026 = a027 - a018;
a012 = a012 - cur;
a000 = a022 - a019;
a013 += a015;
a018 += a004;
if (a020 <= a010) {
a019 -= a024;
a027 = a012 - a008;
a008 -= a013;
a005 += a001;
a015 = a020 + a029;
} else {
a012 = a000 + a013;
a017 = a026 + a009;
a023 += a020;
}
a027 = a010 - cur;
a027 -= a029;
a020 += a010;
a007 += a028;
a011 = a009 + a014;
}
a007 += a018;
}
a006 -= a016;
a019 -= a020;
a004 = a016 - a001;
a027 -= a009;
}
a011 = a007 + a022;
a026 += a014;
a010 -= a020;
a025 -= a015;
a025 = a010 + a027;
} else {
a012 = a028 - a001;
}
cur = a029 - a005;
a005 = a014 + cur;
a009 = a011 - a003;
a012 -= a002;
a022 = a026 - a019;
a008 -= -4;
if (a017 != a019) {
a028 = a027 + a021;
a017 -= a008;
a023 = a008 - a018;
a001 += a024;
a005 = a022 - a012;
if (a007 == a011) {
if (a013 != a006) {
a009 = a009 - a015;
a018 = a000 - a001;
a009 = a023 - a006;
if (a006 != a014) {
a006 += a026;
if (a018 < a007) {
a025 += a011;
a012 -= a023;
a029 += a014;
a023 -= a000;
a001 = a024 - a018;
} else {
if (a016 < a001) {
a022 -= a017;
a002 = a029 + a026;
a024 -= a003;
a012 = 4 - a008;
a000 -= 0;
a002 = a022 - a005;
} else {
a028 = a025 + a002;
a007 -= a005;
a006 -= a027;
a002 += a006;
a010 -= a020;
a024 -= a023;
if (a028 != a008) {
a026 = a017 - a028;
a005 += a022;
a011 -= a020;
a017 = a018 + cur;
} else {
a003 += a004;
a002 = a024 - a010;
a012 = a028 - a021;
}
a020 += a026;
a008 = a010 - a018;
a013 += a029;
a023 -= a014;
a024 = a005 - a025;
if (a011 == a017) {
a008 -= a028;
a028 += a029;
a007 = a016 - a014;
a023 = a000 + a008;
a025 -= a001;
a019 = a024 - a005;
} else {
a017 = a020 + a019;
a008 -= a018;
a008 = a015 + cur;
if (a004 <= a012) {
if (a027 == a001) {
a023 += a013;
} else {
a011 = a008 - a029;
a002 -= a022;
a004 = a021 - a011;
a023 -= a001;
a015 = a024 + a009;
a002 += a013;
a005 = cur + a028;
if (a007 < a004) {
a019 += a016;
a029 -= a016;
a019 = a005 + a009;
a024 -= a009;
a004 += a009;
a017 += a026;
a015 += a023;
} else {
a022 -= a021;
a005 = a021 + a027;
a002 = a020 - a024;
a011 = a006 + a007;
a023 = a025 * -4;
a012 = a003 - a004;
if (a003 > a027) {
a026 -= a000;
a022 = a022 - a021;
a007 -= cur;
a006 = a022 + a024;
a023 -= a001;
a020 += a000;
a018 += a002;
if (a024 >= a022) {
a019 -= -2;
a009 = a023 + a020;
if (a017 > a006) {
a021 += a022;
a023 -= a000;
a009 = a007 + 4;
a026 = -3 + a010;
a017 = a004 - a027;
a023 -= a008;
a021 -= a002;
if (a015 <= a016) {
a009 = a012 + a001;
a028 = a024 + a029;
a009 = a008 - a027;
a028 = a023 + a009;
} else {
if (a009 == a024) {
a015 = a010 - a008;
if (a025 < a024) {
a001 = a027 + a004;
a000 = a017 + a012;
a002 = a015 - a029;
a005 = a020 - a007;
if (a007 > 2) {
a006 = a021 - a014;
a025 = a015 + a021;
a018 -= a006;
a026 -= cur;
a028 = -4 - a010;
a006 = a009 - a021;
} else {
cur += cur;
}
a006 = a013 + a004;
a012 = a000 - a015;
} else {
}
a001 += a009;
} else {
a010 -= a022;
a003 -= a028;
}
}
a014 = a005 - a018;
a017 = a028 + a022;
a021 -= a015;
a012 = a017 - a014;
a013 = a026 + a017;
a022 -= a010;
a026 += a013;
} else {
a005 += a006;
a015 -= a015;
a001 -= a000;
a017 -= -4;
}
a010 = a001 - a011;
a023 = a009 - a005;
a010 -= a015;
a021 = a026 - a018;
a022 = a005 - a027;
a003 = a001 - a004;
a002 = a001 - a011;
} else {
a009 = a013 - a029;
a004 -= a022;
}
a024 = a020 * -4;
} else {
a010 -= a023;
cur = a020 + a008;
a011 = a005 - a022;
}
a019 -= a015;
}
a025 = a021 - a000;
cur -= a009;
a011 -= a002;
a001 = a019 - a015;
a023 -= a009;
}
a029 -= a021;
} else {
a012 -= a021;
a007 = a003 + a009;
a020 = a023 + a000;
a006 -= a023;
a012 = a019 + a025;
a009 = a019 + a018;
}
}
a029 -= a003;
a026 = a003 + a006;
a006 -= a009;
a004 = cur - a021;
a025 = a006 + a028;
a003 = cur - a028;
a027 += a021;
}
a020 = a020 + a008;
a019 += a002;
a014 -= a029;
a019 -= a018;
}
a026 += a024;
a019 = cur - a018;
} else {
}
a025 -= a028;
a029 += a029;
a027 += a007;
a005 += a006;
a029 -= a008;
a024 += a012;
a013 += a007;
} else {
a003 = a017 - a004;
a010 = a024 - 1;
}
a019 = a015 - a003;
a014 = a001 - a025;
a022 = a002 + a004;
a005 -= a026;
a004 -= a023;
} else {
a018 = a026 + a028;
a020 += a020;
}
a010 -= a022;
a000 = cur + a017;
a019 = a015 - a013;
a005 = a008 + a004;
a003 -= a011;
a025 = a006 - a028;
a004 = a018 + a000;
} else {
a009 = a012 - a009;
a011 += a004;
a008 = a021 - a011;
a028 -= a020;
a005 = 2 + a005;
a023 = a015 + a008;
}
a006 -= a000;
a001 = a009 - a005;
a005 = a004 + 0;
a011 += 0;
}
a021 = a019 - a005;
a027 = a019 - a008;
a005 -= a000;
a001 = a019 + a013;
a003 -= a025;
a027 += a006;
a020 += a023;
} else {
a013 = 1 + a015;
a008 += a000;
a001 -= a024;
a019 = a009 + a009;
a005 = a006 + a017;
}
a001 = a013 + a025;
a026 = a014 - a005;
a025 = a028 + a023;
a027 -= a002;
a018 = a015 + a008;
} else {
a000 += a028;
a004 = a028 - a029;
a012 = a028 * 2;
}
a027 += a018;
a015 += a027;
a013 -= a029;
a016 = a022 - a026;
a009 -= a004;
} else {
a028 = a001 + a012;
}
a017 = a001 * 4;
}
output.collect(prefix, new IntWritable(a014));
}
