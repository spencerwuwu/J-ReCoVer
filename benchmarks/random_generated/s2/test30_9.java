// Note: only +, - operations
// Parameters:
//   Variables:   30
//   Baselines:   300
//   If-Branches: 30

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a016 -= a026;
a010 += a028;
a028 = a021 + a010;
if (a027 <= a020) {
a019 = a029 - a006;
a019 += a018;
a016 += a016;
a017 -= a011;
} else {
a005 = a007 - a012;
a011 -= a022;
a011 -= a007;
a001 += a007;
a014 = a017 - cur;
a001 += a001;
if (a018 >= a023) {
a029 = cur - a022;
if (a013 == a000) {
a002 -= a004;
if (a008 < a012) {
a009 += a019;
a020 = 3 + a016;
a012 = a024 - a012;
a009 = a014 - a002;
a005 = a012 - a024;
a029 = a005 - a002;
a018 = a023 - a005;
if (a011 != cur) {
a002 += a027;
a007 -= a029;
a004 += a022;
a023 = a007 - a011;
a023 += a006;
a020 -= a009;
a016 -= a017;
} else {
a002 = a021 + a027;
a009 += a023;
a005 -= a021;
if (a009 < a019) {
a018 += a020;
a015 += a026;
a017 = a023 + a016;
a012 = a000 + a017;
a009 = cur - a021;
a017 = a027 + a022;
a023 = a028 - a021;
} else {
a029 = a021 + a011;
a010 = a023 - a010;
if (a017 <= a019) {
if (a025 < a004) {
a003 = a001 - a026;
a001 -= a000;
} else {
a007 = a001 - a001;
a025 += a019;
a008 += a017;
a020 -= a023;
}
a018 = a017 - a018;
cur = a004 + a016;
a015 -= a018;
a028 -= a000;
a004 = a028 - a004;
a018 += a025;
a001 = a002 + a014;
if (a023 >= -5) {
a029 = a011 + a006;
a020 = a004 - a016;
a022 = a028 + a012;
a000 = a002 - a017;
a009 = a003 + a015;
a016 = a002 - a017;
} else {
a005 += a006;
a026 = a006 + a022;
a005 = a023 + a007;
a011 = a028 - a020;
a006 = cur + a009;
a010 -= a004;
a022 = a004 - a018;
}
a002 -= a008;
a027 += cur;
a005 = a012 - a010;
a001 += a013;
if (a018 < a029) {
a005 = a029 + a004;
if (a010 > a013) {
if (a022 > a000) {
a022 -= a014;
a028 = a009 - a025;
a014 = cur - a023;
a020 = a003 + a024;
a012 = a017 + a016;
a025 -= a006;
cur += a021;
} else {
a029 = a000 + a001;
a013 += a004;
a027 += -3;
a013 = -5 - a008;
if (a012 != a024) {
a006 = a018 + a010;
a011 -= a003;
a015 -= a006;
a021 = a025 - a021;
a002 = a018 + a002;
a019 = a027 - a016;
} else {
a006 = a001 - a010;
a001 = a028 + a011;
a018 = a023 + a003;
a022 = a023 + a005;
a029 = a025 + a010;
a020 += a004;
a001 = a027 - a012;
}
a028 = a013 - a026;
a025 += a020;
a029 -= 0;
a006 += a012;
a006 = a025 - a026;
a017 += a000;
a014 -= a026;
if (a028 >= a019) {
a021 = a024 + a009;
a021 += a020;
a023 = a022 + a022;
a024 = a014 - cur;
a000 = a006 - a004;
a006 -= a018;
} else {
a009 += a016;
a023 = a004 - a011;
a012 = a010 + a019;
a025 = a004 - a005;
if (a008 < a003) {
a007 = a004 - a026;
a017 = a023 - a019;
a028 -= a021;
a011 += a023;
if (a020 >= a023) {
a024 -= a001;
a018 += a000;
a005 -= a000;
a022 += a028;
a018 -= a025;
a011 = a003 + a029;
a008 = 3 + a012;
if (a019 == 4) {
a021 -= a020;
} else {
a029 -= a002;
a018 = a004 - a029;
a018 += 0;
if (a009 >= a006) {
a016 += a027;
a026 -= a021;
a020 = a029 - a003;
a002 = a017 - a002;
if (a028 <= -5) {
a007 += a027;
} else {
a014 = a017 - a009;
a012 -= a004;
a004 -= a017;
a022 += a013;
a029 = a019 - a008;
a006 = a014 + a019;
if (a029 < a013) {
a016 = cur + cur;
a018 = a028 + a011;
a026 += a029;
} else {
a010 -= a004;
a020 = a023 - a023;
a025 -= a014;
a029 = a008 + a013;
a023 -= a023;
if (a027 < a007) {
} else {
if (a011 < a019) {
cur = a010 + a012;
a028 = a022 + 4;
a027 -= a020;
a025 = a025 - a018;
a014 += a010;
if (a008 >= a029) {
if (a003 != a026) {
a023 += a021;
a011 = a021 - cur;
a028 = a000 - a020;
a002 += cur;
a019 = a005 + a014;
a027 = a021 + a012;
if (a014 != a007) {
a006 = a004 - a001;
a019 -= a022;
a013 -= a020;
a011 = a002 + a014;
a001 -= a019;
a014 -= a004;
} else {
a018 = a013 - a022;
a014 -= a000;
a026 = a000 - a013;
a022 = a009 + a012;
a004 -= a007;
if (a007 == a006) {
a007 -= a022;
if (a015 <= a006) {
a023 = a006 + a003;
a003 = a019 + a007;
} else {
a012 = a024 + a008;
a020 = a023 - a019;
a010 = a014 + a010;
}
a017 = a022 - a028;
a020 -= a003;
a028 -= a014;
if (a008 > a021) {
if (a018 >= a018) {
a013 -= a015;
if (a015 > a002) {
a023 -= a018;
a024 -= a017;
a011 = a020 + a019;
a005 = a027 - a009;
a006 -= a006;
a013 = a027 - a008;
a010 -= a002;
} else {
a026 = a013 - a012;
a003 = a021 - a008;
a010 -= a017;
a016 = a014 + a028;
a011 -= a025;
}
a013 = a006 + a020;
a012 += a006;
a012 -= a006;
a027 = a019 + a008;
a027 -= a010;
a007 += a014;
a007 -= a011;
} else {
a011 -= cur;
a015 = a029 - a009;
a008 = a003 - cur;
a026 += a022;
a011 += a014;
}
cur += a028;
a020 = a029 + a013;
a009 = a020 + a022;
a007 = a008 + a013;
} else {
a012 = a009 - a017;
a021 = a000 + a007;
a001 = a013 - a008;
a010 += a022;
a008 = a002 + a003;
a015 += a029;
a012 -= a024;
}
a019 += a010;
a026 += a016;
a026 -= a001;
a003 -= a009;
a000 = a009 - a013;
a006 = a017 - a015;
a023 += a021;
} else {
a018 = a024 - cur;
a010 = a018 + a026;
a022 = a024 + a025;
}
a011 -= a008;
}
a024 = a015 - a001;
a025 = a012 - cur;
a019 = 2 + a013;
a011 -= a013;
a019 -= a025;
a028 += a016;
a007 = a027 + a018;
} else {
a008 -= a015;
a007 = a008 + a016;
a009 -= a017;
a020 -= a029;
}
a016 += a004;
a008 -= a027;
a014 = a029 + a007;
a024 += cur;
a016 += a022;
} else {
a015 = a002 + a001;
a025 = a012 - a009;
a002 -= a011;
a017 -= 3;
a005 = a006 - a002;
a020 = a013 + a021;
a015 += a021;
}
} else {
a013 += a029;
a010 = a017 - a011;
a008 += a009;
a001 = a024 + a008;
a002 -= a001;
}
a025 = a002 - a028;
cur += a025;
a016 -= a026;
a005 -= a011;
a016 = a021 + a017;
}
a025 = a020 - a007;
a003 += a026;
a025 = a011 + a026;
a001 = a025 + a014;
a015 = a029 + a028;
}
}
a022 += a020;
} else {
a023 = a021 - a014;
a008 = a024 - cur;
a026 -= a008;
a028 += a014;
}
}
a022 -= a018;
a019 += a019;
} else {
a019 = a006 + a025;
}
cur = a003 * 3;
a026 -= a025;
a003 = a008 + a025;
a003 = a015 + a005;
} else {
a022 = a002 - a024;
a022 -= a009;
a024 -= a027;
a017 += a008;
a000 -= a002;
}
a019 += a022;
a027 = a018 - a002;
a029 = a000 + a004;
a020 = a007 + a006;
a000 = a028 - a013;
}
cur = a004 - a014;
a027 = a029 + a013;
a013 = a000 + a021;
a016 -= a006;
}
a014 += a016;
} else {
a015 += a029;
a004 = a006 - a007;
a011 -= cur;
}
a011 -= a009;
a012 = a000 - a014;
} else {
a023 += a026;
a014 = a012 - a006;
}
a011 = a014 + a015;
} else {
a009 += a015;
}
}
}
} else {
}
} else {
}
} else {
}
}
a020 -= a022;
}
output.collect(prefix, new IntWritable(a008));
}
