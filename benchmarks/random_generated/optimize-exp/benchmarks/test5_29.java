// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a004 = a000 + a000;
a001 -= a007;
a024 -= a007;
a015 -= a021;
a020 += a010;
a017 = 4 - cur;
a010 += a018;
a012 = a010 + a019;
a020 = a015 - a002;
a017 = a008 - -1;
a008 = a001 + a021;
a022 -= a002;
a002 = a001 + a012;
a014 = a009 + -4;
a001 = a006 + a012;
if (a013 == a010) {
a021 = a013 + a005;
a019 -= a016;
a018 = a017 - cur;
a011 = a007 * -4;
a005 = a022 - a017;
a011 = a003 - a006;
a000 += a015;
a022 = a002 + a003;
a003 = a014 + a019;
a018 += a022;
a001 -= a012;
a010 = a007 + a008;
a004 = a023 - a009;
a013 -= a024;
a004 -= a021;
a019 -= a000;
a022 += a021;
a001 = a021 - a021;
a019 -= a014;
a024 = cur - a003;
a023 += a002;
a003 -= 1;
a018 = a009 - a020;
a006 = a024 - a012;
a004 = a001 - a023;
a008 += a021;
a001 = a018 * 4;
a011 = a000 + a007;
a010 -= a023;
if (a004 > a005) {
a004 = a023 + a024;
a000 += a006;
a007 -= a011;
a018 = a014 + a005;
a005 += a024;
a014 = a020 - a010;
a006 += a013;
a004 -= a024;
a003 -= a005;
a020 -= a013;
a000 += a016;
a007 += cur;
a001 = a019 - a009;
a017 = a003 - a021;
a011 -= a018;
a003 = a004 - a019;
if (a021 == 3) {
if (a022 > a000) {
a003 = a002 + a020;
} else {
a007 = a001 - cur;
a009 = a015 - a003;
a013 += a018;
a023 -= a003;
a005 = a023 - a013;
a011 = a017 + a014;
a016 = a000 - a024;
a017 = a020 - a011;
a021 = a015 + a005;
a009 = a008 + a018;
}
a017 = a004 + a017;
a024 -= a014;
a007 -= a017;
a001 -= a007;
a013 += a024;
a013 += a018;
a001 = a023 + a002;
a012 -= a018;
a001 += a015;
a009 -= a018;
a007 += a007;
a017 += a005;
a008 = a009 - a001;
a022 -= a006;
a014 = a017 - 2;
a011 = a018 - a018;
a011 = a007 - a018;
a014 -= a022;
a024 = a024 - a017;
a016 = a007 + 2;
a020 = a010 + a001;
a024 += a019;
} else {
a022 = a020 + a009;
a015 -= a008;
cur += a018;
a022 += a023;
a017 -= a019;
a018 += a021;
a018 = a021 - a020;
a011 = a008 + a020;
a022 = a011 - a010;
a020 = a000 * 0;
a022 = a023 + a003;
a017 -= a010;
a022 -= 3;
a018 = a017 + a009;
a001 -= a013;
a010 = a000 + a010;
a013 -= a017;
a021 = a005 - a020;
}
a006 -= a021;
a024 -= a024;
a005 = a008 + a013;
a013 = cur + a024;
a019 -= a016;
a012 = a009 - a009;
a015 += a001;
} else {
a004 = a013 - a021;
if (a015 != a018) {
a022 = a016 - a023;
a024 = a005 + cur;
a002 = a012 - a009;
a019 -= a005;
a020 = a006 + a001;
a013 = a013 - a005;
a019 -= a021;
a014 = a010 + a004;
a006 += a003;
a017 = a014 - a011;
a023 = a016 + a003;
a007 = a022 + a000;
a022 += a002;
a011 = a021 - cur;
a009 = a010 + a019;
a023 = a024 - a007;
a007 += a010;
a010 = a006 + cur;
a009 += a014;
a022 += a021;
a023 -= a014;
a018 = a018 - a016;
a016 += a024;
cur = a015 + a001;
} else {
a013 = a009 + a016;
a012 -= a024;
a019 = a013 + a017;
a000 += a001;
a015 += a014;
a022 = a000 - a009;
a017 = a024 + a013;
a007 -= a015;
a005 += a009;
a020 -= a004;
a000 = a009 + a010;
a004 = a011 - 0;
a019 = a012 + -5;
a003 -= a011;
a023 = a011 - a017;
a003 -= a023;
a016 = a023 - a003;
a000 = a024 + a005;
a012 += a015;
cur -= a016;
a018 -= a001;
a002 += a011;
a020 += a015;
a022 = a015 - a012;
a000 = a018 + a006;
a009 += a021;
a019 = a013 + a008;
}
a020 -= a024;
a009 = a002 - a009;
a002 = a019 + a010;
a023 = a024 + a017;
a007 = a000 - a000;
}
a002 += a003;
a007 = a018 + a003;
a001 = a013 + a016;
a006 = a006 + a024;
a023 = a015 + a001;
a007 += a000;
a022 -= a019;
a007 = cur - a001;
a004 = cur + a021;
a005 = a016 + a012;
a024 = a022 + a017;
a004 -= a003;
a023 = a003 + a002;
a006 += a019;
} else {
a015 = a017 - a019;
a000 -= a023;
a009 -= a018;
a008 = a002 + a003;
a001 = a002 + a013;
cur -= a024;
a011 = a006 - a011;
a021 -= a009;
a001 -= a004;
a002 = a015 + a011;
a015 = a000 + a020;
a018 += a007;
a024 = a004 + a004;
a013 = a003 - a023;
a015 = a000 - a012;
a014 = 3 + a013;
a020 = a013 - a013;
a014 = a013 - a003;
a013 = a010 + a007;
a022 -= a000;
}
a004 -= a019;
cur = a009 - a020;
a005 -= a002;
a001 -= cur;
a021 += a024;
a010 -= cur;
a017 = a002 + a020;
a020 -= a005;
a000 = a000 + a017;
cur -= a016;
a015 += a015;
a008 -= -2;
a014 = a007 + a002;
a014 = cur + a014;
a002 = a005 + a002;
a015 = a002 + a024;
a013 = a013 - a016;
a003 = a011 - a015;
a022 = a007 + a016;
a009 = a002 + 0;
a004 += a005;
a015 -= a016;
a003 -= a011;
a010 += a012;
a022 += a009;
a018 -= a006;
a002 = a007 + a014;
a018 -= a018;
a019 += a022;
a001 += a001;
a003 += a000;
a021 = cur - a021;
a015 -= a023;
a015 -= a016;
a004 = a004 + 2;
a020 = a009 - a012;
a011 = a024 + a022;
a005 -= a018;
a023 -= a000;
a014 = a002 - a024;
a007 = a016 + a010;
}
output.collect(prefix, new IntWritable(a024));
}
