// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a018 = a002 + a000;
a017 = a004 + 2;
a004 = a000 - a013;
a004 = a018 + a018;
a015 += a001;
a011 = a013 - cur;
a003 = a010 + a010;
a001 = a001 + a006;
a005 += a012;
a006 -= a008;
a002 += a000;
a015 = a000 + 0;
a019 += a013;
a007 = a006 + a007;
a011 = a008 - a016;
a008 -= a000;
if (a001 <= a006) {
a004 = a018 - a016;
a002 = cur + a006;
a003 = a003 + a006;
a000 += a000;
a009 = a011 - a016;
a015 -= a007;
a012 += a013;
a003 += a000;
a010 += a018;
a013 = a000 + a005;
a009 = a018 + a013;
a019 -= a000;
a009 = a013 + a012;
a002 = a007 + a004;
} else {
a008 += 3;
cur -= a018;
a006 = a011 * 2;
a007 = a006 + a018;
a007 -= a010;
a015 -= a017;
a016 -= cur;
a006 -= a005;
a009 += a011;
a019 += a018;
a006 = -1 + a016;
a016 -= a015;
a013 += a019;
a019 = a012 + -3;
a016 = a004 - a003;
a014 += a012;
a018 += a013;
a009 = a019 - a019;
a008 = a011 + a009;
a000 += a000;
a012 += -3;
a009 += a012;
a018 += a006;
a004 += a004;
a011 = 4 + a019;
a000 = a017 - a012;
a017 = a014 - a005;
a018 += a017;
a019 = a004 - a016;
if (a010 != a009) {
a010 = a006 * 1;
a015 -= a010;
a011 += a002;
a007 -= a008;
a012 += a012;
a002 = a001 + a014;
a016 += a001;
a002 += a005;
a001 = a002 - a016;
a012 = a001 - a019;
a004 = a013 - a017;
a017 = a006 + a015;
a019 = a001 - a007;
a011 = a009 - a013;
a015 -= a011;
a002 = a012 - -1;
a008 += a019;
a019 = a015 + a004;
a009 = a018 + a014;
} else {
a005 = a018 + a019;
a012 = a006 - a002;
a011 += a018;
a006 += 1;
cur -= a001;
cur = a015 - a003;
a001 -= a012;
a004 += a008;
a012 += a014;
a003 -= a006;
a001 -= a011;
a013 = a017 + a008;
a015 = cur - a010;
a009 = -5 + a009;
a012 += a004;
a000 = a000 - a015;
a014 = a013 + 0;
a007 = a009 + a011;
a013 = a016 + a015;
a001 = a019 - a011;
a008 += a016;
a003 = a014 + a004;
a007 = a007 + a014;
a000 = a009 + a019;
a015 = a018 + a012;
a003 += a014;
a010 = a000 - cur;
a002 = a007 + a011;
a012 -= a009;
a009 += a002;
}
a003 = a016 + a018;
a003 += -4;
a011 = -2 - a011;
a015 += a014;
a018 += a014;
a018 -= a001;
a017 -= -3;
a006 = cur + a000;
}
a005 = a005 + a004;
if (a011 <= a019) {
a018 -= a001;
a009 -= a014;
a007 = a008 - a003;
a015 = a009 - a007;
a003 = a014 - -4;
a000 += a012;
cur -= a001;
a000 += a006;
a014 = a019 + a000;
a019 = a019 - a009;
a013 = a001 + a006;
a010 -= a001;
a002 = a009 + a010;
a003 -= a018;
a016 = cur + a009;
a010 -= a007;
a006 -= a004;
a002 = a018 + a014;
a010 -= a010;
} else {
a015 = a018 + cur;
a014 = 4 + cur;
a007 = a018 - a009;
a010 = a000 + a004;
a008 += a004;
a011 -= a018;
a002 -= a010;
a006 -= a019;
a005 = a003 + a013;
a019 += a010;
a016 = a011 - a003;
cur -= a006;
a005 -= a013;
a017 = a004 + a019;
a001 += a002;
cur = a009 - a010;
a011 = 4 - a010;
a000 += a004;
a005 = a016 - a012;
a000 -= a007;
a001 = cur + a014;
a004 = a004 + a018;
a013 -= a010;
a012 = a004 - a010;
a018 -= a011;
a005 = a011 - a018;
if (a018 < a001) {
} else {
a019 = a001 - a003;
a015 = a011 + a016;
a000 -= a010;
a018 -= a000;
a000 -= a018;
cur = a014 + a004;
a011 = a015 + a004;
a008 = a015 - a001;
a012 = a019 + a013;
a003 = a006 - a013;
a002 += a005;
a002 += a014;
a002 = a000 + a008;
}
a016 += a011;
a001 = a008 + a018;
a014 = a009 - a005;
a001 = a016 - a014;
a001 = a014 - a003;
a016 = a015 - 4;
a003 += a009;
cur = a012 + a015;
a004 -= a007;
a017 += a000;
cur += a014;
a011 -= a016;
a016 -= a012;
}
a017 -= a008;
a018 -= a004;
a015 = a014 - a007;
a011 -= a015;
a014 -= a008;
cur = a017 - a012;
a014 += a017;
a004 = a013 + a018;
a000 -= a007;
a015 += cur;
a014 = a013 - a019;
a008 += a008;
}
output.collect(prefix, new IntWritable(a005));
}
