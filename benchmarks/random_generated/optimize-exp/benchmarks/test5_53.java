// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a019 += a015;
a004 = a006 - a019;
a017 += a022;
a013 = a017 * 2;
a002 = a014 - a018;
a024 += a019;
cur = a003 - a021;
a007 -= a011;
a023 = a020 + a005;
a012 = a002 - a024;
a020 -= a022;
a020 -= cur;
cur -= a014;
a017 = a004 + a020;
a002 = a000 + a001;
a011 -= a001;
a024 += a010;
a010 = a017 - a012;
a021 -= a011;
a008 += a007;
a023 = a018 + a021;
a010 += a007;
a019 -= a018;
a006 = a017 + a003;
a000 += a005;
a003 = a018 + a009;
a003 = a003 - a007;
a005 += a016;
a010 += a007;
if (a016 != a003) {
a000 = a014 - a020;
a001 = a012 + a008;
a010 -= a003;
a010 += a004;
a023 += a021;
a018 = a024 - a016;
a001 -= a021;
a011 += a023;
a005 = a022 - a023;
a004 = a008 - a022;
a021 = a010 - a007;
a009 = a015 + a016;
a022 = a018 - a021;
a000 = a003 - a008;
a022 += a003;
a009 -= a013;
a014 = a018 - a014;
a016 += a022;
a014 = a022 + a001;
cur += a022;
a018 -= a013;
a004 += a010;
a015 -= a020;
a000 -= a011;
a020 += a024;
if (a003 >= a003) {
a019 = a005 - a017;
a005 += a013;
a019 -= a005;
a009 = a016 - a002;
if (a010 > a005) {
a022 -= a011;
a019 += a013;
a000 += a018;
a003 = a003 + a010;
a007 -= a002;
a018 += a016;
a009 = a009 * -2;
} else {
a004 = a021 - a019;
a010 += a019;
a019 -= a023;
a008 = a014 + a022;
a013 += cur;
a009 -= a016;
a004 -= a008;
a006 -= a014;
a006 += a000;
a009 = a015 - a015;
a008 = a014 + a003;
a018 = a020 + a003;
a012 -= a001;
a020 = a023 - a012;
a011 = a001 - a008;
a024 += a024;
}
a021 = a008 + a008;
a013 -= a001;
a012 = a004 - a006;
a013 = a013 - a021;
a019 = -5 - a022;
a024 += a006;
cur -= a008;
a006 -= a021;
a001 += a000;
a021 -= a022;
a015 += a006;
a019 = a019 + a024;
a011 = a002 + a000;
a016 += a017;
a018 = a011 + a023;
a008 = a022 - a022;
a013 = a022 - a006;
a000 = a024 - a011;
a008 += a003;
a001 = a023 - a010;
a012 = a022 - a008;
a004 -= a007;
a023 -= a007;
a004 -= a019;
a011 += a001;
a017 += a002;
a014 = a001 + a011;
a013 -= a020;
a012 = a001 + a024;
if (a003 == a022) {
a009 = a014 + a004;
a016 = a006 - a018;
a005 = a022 + a020;
a004 = a019 + a009;
a022 -= a003;
a002 = cur - a009;
a002 -= a001;
a012 = a023 - a001;
a020 -= a010;
a005 = a022 + a009;
a000 = a004 - a014;
a017 -= a024;
a019 += a022;
a021 += a012;
if (a000 <= a017) {
a003 = a003 - a014;
a009 -= a013;
a011 = a012 - a014;
a001 = a013 - a017;
a024 = a008 + a022;
a020 += a012;
a021 = a004 - a001;
a022 = a012 + a018;
a013 = a006 - a012;
a005 = a009 + a009;
a003 = a020 - a000;
a015 -= a020;
a009 = a015 + a005;
a005 = a001 + a020;
a003 += a011;
a007 = a012 - a017;
a005 += a020;
cur = -5 + a018;
a014 = a003 - a022;
a023 = a019 - a008;
} else {
a004 = a011 + a014;
a024 += a016;
a019 += a024;
a000 -= a014;
a006 = cur - a012;
a021 += a005;
a006 -= cur;
a018 += a019;
a019 = cur - a013;
a017 = a011 - a015;
a022 = a021 - a005;
a012 += cur;
a016 = a002 - a023;
a007 = a024 - cur;
a015 += a013;
a003 = a008 + a010;
a007 = a015 + a007;
a021 = a022 + a008;
a016 -= a022;
a013 += a010;
a024 -= a002;
a024 = a015 - a004;
a004 -= a005;
a020 -= a000;
}
} else {
a003 = a003 - cur;
a012 -= a013;
}
a013 += a016;
a005 -= a016;
cur = a023 + a008;
a012 -= a023;
a008 = a015 - a024;
a016 += a015;
a001 = a001 - a007;
a002 = a000 - a007;
a003 -= -5;
a014 = a010 - a019;
cur -= a006;
a013 -= a013;
a003 += a020;
a020 -= a012;
} else {
a015 = a002 - a006;
a024 -= a002;
a018 += a008;
a008 = a016 + 0;
a024 += a009;
a023 = a000 - a006;
a013 += 3;
a022 += a013;
a013 = a000 - a023;
a013 = a002 - a014;
a010 = a012 + a008;
a023 = a001 + cur;
a014 = a021 + a004;
a007 += a011;
a009 -= a006;
a010 -= a016;
a008 = a017 + a024;
a009 -= a022;
a018 -= a009;
a008 -= a017;
a020 += cur;
}
a005 -= a018;
a004 = a003 - 1;
a006 -= a023;
a005 = a002 + a022;
a000 = cur + a010;
a002 -= a019;
a007 -= cur;
a013 += a004;
a003 = a022 + a002;
} else {
a023 = a015 - a017;
a011 += a006;
a018 -= -3;
a015 -= a014;
a003 += a002;
a005 += -2;
a024 += a010;
a013 = a007 - a001;
a000 = a004 - a005;
a017 = a024 * 0;
a013 = a019 - a021;
a002 -= a020;
a018 -= a018;
a008 -= a011;
a010 = a019 - a012;
cur += a018;
a017 = a010 + cur;
a023 = a009 - a022;
a022 += cur;
a000 += a011;
a004 = a001 + a000;
a015 -= a007;
a015 = -3 - 2;
a018 = a004 - a019;
a013 = a016 - a006;
a000 += a006;
a006 = a004 - a020;
a003 = a003 + a022;
a024 -= a016;
a009 = a020 - a003;
a021 += a018;
}
a017 = a019 - a007;
a004 -= a011;
a004 = a015 + a007;
a024 = a004 + a020;
a020 += a024;
}
output.collect(prefix, new IntWritable(a003));
}
