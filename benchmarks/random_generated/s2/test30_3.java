// Note: only +, - operations
// Parameters:
//   Variables:   30
//   Baselines:   300
//   If-Branches: 30

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a029 = 2 - cur;
a008 -= a023;
a015 -= a015;
a006 -= a004;
a014 = a029 * -2;
if (a015 != a014) {
a023 = a014 + a008;
a019 = a026 - a000;
a017 = a002 - a000;
a021 += a012;
cur = cur + a012;
a028 += a023;
a017 = a003 - a019;
if (a004 < a027) {
if (a023 < a029) {
a001 = a006 + a020;
if (a008 >= a013) {
a007 = a028 - a012;
a011 = a003 + a013;
cur = a022 - a000;
a005 += a018;
a002 = a002 - a026;
a004 = a011 + a028;
} else {
a000 = a011 - a017;
a012 -= a007;
a017 = a001 + a009;
cur += a019;
a020 = a006 - a017;
}
a024 -= a002;
a018 = a002 - a018;
a010 = a023 - a001;
a011 = a003 + a017;
cur = a012 * 4;
if (a020 > a002) {
a007 -= a003;
a005 -= a005;
a013 = a001 - a019;
a013 -= a001;
a009 = a001 - a016;
a007 = cur - a013;
if (a007 > a017) {
a009 += a006;
a009 = a007 + a024;
if (a029 == a009) {
a003 = a023 * -4;
a005 = a027 + a003;
a018 = a008 + a025;
if (a026 == a021) {
a000 = a013 + a000;
} else {
a002 = a018 + a015;
a028 = a022 + a011;
a008 = a007 + a017;
a003 = a010 + a013;
a002 += a011;
a015 = a013 + a016;
}
a007 += a022;
a017 = a014 - a026;
a029 = a001 - a007;
a027 = a026 + a010;
} else {
cur = cur + a022;
a002 = a026 - a010;
a029 -= a025;
a013 -= a016;
a003 += a000;
}
a013 += a021;
a010 += a016;
a018 = a013 - a025;
a019 += a009;
if (a017 > a020) {
a004 = a005 - a017;
a000 = a017 + a000;
} else {
a006 = a007 + a021;
cur -= a022;
a024 -= a019;
a014 -= a025;
a013 += a020;
a026 = a026 - a027;
a002 = a026 + a016;
if (a023 != a000) {
a003 += a029;
} else {
if (a029 >= a004) {
a008 -= a007;
a027 = 4 + a006;
} else {
a021 = a020 + a011;
}
a025 -= a012;
a014 = a017 - a011;
if (a001 <= a017) {
if (a010 > a014) {
a010 += a022;
if (a028 != a012) {
cur = a016 + a007;
a024 -= a004;
a006 = a025 + a015;
a011 = a023 - a007;
if (a011 <= a001) {
a009 = a022 + a012;
a022 = a002 - a010;
a000 += a028;
a012 -= a008;
} else {
a028 = a001 + 0;
if (a023 <= a010) {
a004 -= a020;
a000 = a012 + a022;
a017 -= a012;
a003 -= a016;
a004 = a001 + a002;
a002 += a022;
} else {
a009 = a015 - a008;
a009 -= a008;
a009 = a018 + a027;
}
a013 += a018;
}
a017 = a005 - a009;
a028 += a006;
a005 = a027 - a010;
a003 = a023 - a017;
a023 = a017 - a024;
a027 -= a027;
} else {
a005 = a022 - a005;
}
a017 += a027;
a022 = a018 - a018;
a010 = a001 + a010;
a001 -= a000;
a023 = a004 - a009;
if (a012 < a004) {
a015 += a013;
a023 = a015 - a004;
a013 = a007 - a026;
a024 += a025;
if (a018 < a018) {
a013 += a015;
a016 = a019 - a025;
a022 += a015;
a012 = a001 + a007;
a022 += a002;
if (a027 == a026) {
a015 -= a018;
a025 = a024 - a004;
a017 -= a022;
cur -= a021;
a014 = a014 - a027;
if (a023 > a024) {
a009 += a002;
a020 = a011 - a007;
a017 = a021 - a015;
a002 += a025;
a020 = a028 - a005;
a012 += cur;
} else {
a006 -= a018;
a017 = a007 + a002;
a010 = a008 - a005;
a013 += a019;
a004 = a000 - a021;
if (a019 < a017) {
if (a016 != a016) {
if (a001 < a011) {
a009 = a007 - a017;
a018 = a010 + a011;
if (a012 != a016) {
a026 -= a024;
a026 = a016 - a013;
} else {
a012 -= a010;
a023 -= a028;
a018 -= a024;
a029 += a003;
a013 += cur;
a008 -= a007;
if (a008 >= a022) {
a003 += a015;
if (a017 == a014) {
a012 += cur;
a019 -= a023;
a012 = a018 + a003;
a022 = a026 - cur;
if (a001 == a005) {
a009 -= a028;
if (a021 < a012) {
a005 += a002;
a014 = a023 + a017;
a003 = a012 - a015;
a009 -= a019;
a022 = a017 - a004;
if (a025 > cur) {
a014 = a019 - a020;
a023 += a024;
a011 = a020 + a024;
a000 = a016 - a018;
a004 += a000;
a000 = a017 - a008;
a024 += a025;
} else {
a002 = a024 + a001;
a004 = a015 - a014;
a029 += a022;
a002 += a026;
a025 = a013 + a006;
}
a012 -= a004;
if (a016 > a010) {
a020 = a012 - a016;
a009 -= a015;
} else {
}
a013 = a018 - a011;
a029 -= a029;
a024 -= a011;
a023 -= a004;
a010 -= a020;
} else {
a026 = a011 + a022;
a005 = a020 - a017;
a027 += a021;
a025 += a016;
a029 = a010 + a013;
a020 = a018 - a020;
}
a018 = a022 + a007;
a006 += a016;
a009 = a019 + a022;
} else {
a007 -= a003;
a019 -= a021;
}
a015 -= a009;
a014 += a026;
} else {
a015 -= a014;
}
a014 += a021;
a029 = a016 + a023;
a012 = a017 - a017;
a006 += a011;
} else {
a009 += a019;
a013 += a013;
}
a000 -= a001;
a027 = a029 + a021;
a006 = a013 - a008;
a004 = a010 - a004;
}
a024 += a001;
a009 = a017 + a003;
} else {
a010 = a000 + a004;
a009 -= a028;
a012 = a028 * 3;
a013 -= a021;
a024 += a002;
a028 -= a017;
}
a007 = a018 - a027;
a010 += a025;
a021 = a011 - a021;
a015 += a003;
} else {
a024 += a022;
a006 = a006 - a028;
a026 -= a008;
a004 += a011;
a010 = cur + a016;
}
a009 += a008;
a006 = a028 - a026;
a026 = a022 + a015;
a001 += a018;
a020 += a011;
} else {
a008 = a009 - a023;
a011 = a001 - a026;
a010 -= a021;
}
a014 = a025 - a024;
a028 += a028;
a020 += cur;
a020 = a008 + a021;
a000 += a026;
a025 = a019 + a022;
a004 = a015 - a025;
}
a024 += a009;
a000 -= a010;
a007 = a018 - a014;
} else {
a021 -= a010;
a012 = a008 + a011;
a000 -= a026;
cur -= a002;
a004 -= a004;
a015 = a004 + a028;
}
a001 = a017 - a004;
a017 -= a023;
a017 = a018 + a000;
} else {
a026 -= cur;
a010 = a000 - a011;
a018 -= a002;
a000 += a017;
}
a020 += a012;
a025 = a028 + a015;
a004 -= a005;
a014 = a016 + a017;
} else {
a008 += a014;
a026 += a003;
a015 = a014 * -5;
a011 = a004 + a006;
a018 += a026;
}
a018 -= a027;
a018 += a022;
a009 = a020 + a002;
a029 += a005;
cur = a009 - a019;
a007 = a010 + a009;
a015 -= a007;
} else {
a003 += a013;
}
a022 -= a020;
a011 = a015 + cur;
cur = a016 + a002;
a026 -= -2;
} else {
a009 += a023;
a012 -= a004;
a009 += a019;
a018 -= a026;
a013 -= a014;
}
a002 = a000 - a014;
a013 -= a019;
a009 = a026 - a028;
a014 = a008 - a026;
a022 = a011 - a021;
}
a009 = a021 + a004;
a003 = a001 - a009;
a013 = a025 - a026;
a010 = a005 + cur;
a029 = a022 - a006;
a028 += a000;
}
a018 += a018;
a014 -= cur;
a002 -= a025;
a001 += a011;
a008 -= a017;
a013 += a018;
a018 = a018 - a025;
} else {
a013 += a026;
}
a000 = a026 * 2;
} else {
a022 = 1 - 0;
a029 = a011 + a024;
a024 = a025 + a018;
}
a003 += a023;
a017 += a002;
a003 -= a014;
a025 = a011 - a006;
a029 = a026 - a002;
} else {
}
} else {
}
} else {
}
a014 = a007 - a001;
}
output.collect(prefix, new IntWritable(a002));
}
