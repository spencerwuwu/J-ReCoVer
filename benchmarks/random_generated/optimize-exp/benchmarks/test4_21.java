// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
cur = a015 + a014;
a016 = a018 - a011;
a000 = a001 - a010;
a017 += a008;
a016 = a012 - a015;
a003 -= a019;
a013 = a016 + a013;
a018 = a006 - a001;
a008 += a013;
a013 += a001;
a018 = a000 - a001;
if (a004 != a011) {
a007 += -3;
a011 += a011;
a008 += a018;
a004 += a007;
a015 -= a018;
a017 += a017;
cur = a013 + a006;
cur = a002 - a017;
a006 += a008;
a008 = a000 + a009;
a019 -= a019;
a016 += a016;
a012 = a004 + a018;
a009 = a016 + a001;
a016 -= -4;
a008 = a003 - a007;
} else {
a008 += a005;
cur += a018;
a016 += a013;
a017 = a011 + a002;
a009 -= a014;
a000 = a000 - a003;
a002 += a016;
a018 += a013;
a005 = a007 - a008;
a002 = a015 + a015;
a010 += a010;
a016 = a012 - a002;
a000 -= a009;
a007 = a010 + a017;
a000 = a001 + a018;
if (a013 <= a004) {
a015 += a002;
} else {
a007 -= a005;
a016 = cur + a017;
a017 = a006 + a013;
a017 = cur - a014;
a001 -= a006;
a006 = a002 + a013;
a009 = cur - a006;
a000 = a005 - a005;
a000 = a001 + a017;
a014 = a012 - a000;
a005 = a006 - a001;
a007 += cur;
cur = a008 + a011;
cur = a015 - a011;
a004 = a017 * 4;
a000 += a019;
}
a019 = a016 - a012;
a011 += a011;
a012 -= a002;
a016 = a015 + a004;
a012 = a003 - a015;
a018 -= a018;
a013 += a000;
a007 = a013 - cur;
a012 -= a003;
a003 += a016;
a017 = a014 + a013;
a011 -= a001;
a003 = a006 + a003;
a008 = 3 + a008;
if (a014 == a007) {
a006 += a019;
a013 -= a008;
a016 += a004;
a001 = a017 + a017;
a001 -= a010;
a004 = a006 - a009;
a014 += a013;
a015 -= a018;
a019 += a014;
a011 = a011 - a001;
a009 -= a003;
a007 = a014 + a013;
a016 = a017 + a012;
a002 = a016 + a006;
cur += a005;
a005 = a006 - a007;
a010 += a017;
cur = a002 + a007;
a006 = a019 * -5;
a004 -= a004;
a013 = a001 + a018;
a010 = a015 - -3;
a006 = cur - a002;
a007 = a002 - a011;
cur += a015;
a018 += a005;
cur += a000;
a009 += a005;
cur = a017 - a017;
a005 -= a002;
if (a012 <= a015) {
a007 = a006 + a008;
a003 = a015 - a008;
a007 += a005;
a013 = a018 + a017;
a007 += a004;
a010 = a006 - a018;
a010 -= a006;
a018 = a014 + a002;
} else {
a001 += a014;
a004 = a000 - a019;
a001 -= a017;
a004 = a007 - a019;
a010 = a017 - a014;
a004 = a014 + a014;
a007 = a015 + a005;
a002 = a006 - a018;
a011 = a016 - a012;
a006 = cur + a003;
a011 = a005 + a015;
a018 -= a000;
a007 -= a007;
a018 += a010;
a003 = a002 + a013;
a011 -= a003;
a011 += a007;
a002 -= a019;
a019 += a005;
a019 = -4 + a015;
a006 -= a009;
a017 = a017 + a008;
a000 -= a015;
a017 = a009 - a000;
a013 = a006 - a010;
a019 = cur - cur;
a011 -= a019;
a014 = cur * -5;
a005 = a017 - a016;
a014 = a012 - a002;
a004 += 4;
a003 -= a019;
a012 -= a012;
}
a001 -= a009;
a014 += a015;
a019 += a018;
a000 = a015 - a012;
a017 = a007 - 2;
a006 += a000;
a014 = a005 - a017;
a008 = a003 + a019;
a007 = a007 + a009;
cur = a016 + a005;
a011 -= a006;
a017 -= a008;
a017 = cur + a015;
a011 = a013 + a007;
a010 = a004 + a008;
a015 -= a014;
a012 = a003 + cur;
a006 += a010;
a017 += a011;
a009 -= a006;
} else {
a016 = a013 + a015;
a007 = a004 - a010;
a011 = a004 - a010;
a007 = a000 - a015;
a000 = a003 - a006;
a002 -= a019;
a005 -= a007;
a002 += a015;
a010 = cur - a004;
a003 -= a018;
}
a014 += a001;
a014 += a009;
a017 = a017 * -4;
a001 = a004 - a015;
a014 += -3;
a019 -= a007;
a004 -= a002;
a005 += a013;
a002 = a010 - a015;
a002 += a013;
a016 = a005 + a007;
a019 = a004 + a008;
}
a008 -= a002;
a013 += a013;
a012 = a001 - a001;
a012 = a005 * -3;
a005 += cur;
a016 = a013 + cur;
a007 = a011 + a018;
a017 = a003 + a015;
cur = a000 + a004;
a006 += a005;
a013 -= -3;
a010 += cur;
a009 = a005 + a008;
a017 = a001 + -1;
}
output.collect(prefix, new IntWritable(a019));
}
