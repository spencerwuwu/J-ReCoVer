// Note: only +, - operations
// Parameters:
//   Variables:   30
//   Baselines:   300
//   If-Branches: 30

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a011 += a011;
a008 = a000 * 2;
a002 = a029 + 0;
a008 += a017;
a016 = a019 - a027;
a017 = a016 + a025;
if (a014 != a021) {
a026 -= a006;
a010 = a020 - a014;
} else {
a023 = a028 + a028;
a010 += a019;
a009 = a007 + a029;
a016 = a019 - a007;
a005 = a010 + a001;
a009 = a006 + a026;
a000 -= a018;
}
a006 += a003;
if (a025 != a022) {
a001 -= a016;
a018 += a008;
a005 = a013 + a001;
} else {
a012 = a019 + a014;
a020 -= a008;
}
if (a011 == a009) {
a012 = a013 + 1;
a007 = a006 - a024;
a011 = cur + a009;
a001 += a027;
a010 += a007;
cur -= a018;
} else {
if (a029 <= a027) {
a011 -= a005;
a006 = a001 + a023;
a021 -= a007;
a028 = a018 + a028;
} else {
a008 = a018 - a027;
a004 += a007;
a008 = a009 + a014;
}
a028 -= a015;
a006 = a016 + a018;
a008 = a004 - a020;
a017 = a004 + a004;
if (a016 < 3) {
a027 = a000 - a012;
a016 += a029;
a014 = a019 - a029;
a011 -= a007;
a003 -= a027;
} else {
a011 = a022 + a006;
if (a012 <= a005) {
a029 -= a029;
a009 += a009;
a002 += a015;
if (a005 <= a012) {
a015 -= cur;
cur = a027 - a020;
a013 += a017;
a012 -= a012;
a022 = a021 - a026;
a017 -= a004;
a020 = a022 - a022;
} else {
cur = a017 - a015;
a026 -= a009;
}
a003 -= a024;
a003 -= a024;
a002 = a022 - a027;
a003 -= a029;
if (a022 < a026) {
} else {
}
} else {
a016 += a027;
a000 -= cur;
a018 -= a001;
a010 = a020 - a005;
a007 = a009 - a013;
a003 -= a016;
if (cur >= a005) {
a023 = a021 - a013;
a018 = a024 + a029;
if (a002 != a004) {
a021 += a001;
a018 = a022 - a009;
a025 = a023 + a011;
if (a024 == a015) {
a019 += a011;
a003 = a005 + a008;
a026 -= cur;
a002 = a005 - a024;
a016 = a022 - a017;
if (a018 < a022) {
a013 += cur;
a007 -= a003;
a016 += a008;
a010 = cur - a021;
a017 = a012 + a009;
a018 += a005;
a026 = a028 - a025;
if (a009 >= a004) {
a012 = a018 + a024;
a000 -= a001;
a027 += a001;
a000 += 3;
a022 += a001;
if (a017 < a005) {
a015 += a006;
a023 = cur - a011;
a002 -= a003;
a022 += a011;
a022 += a016;
if (a012 >= a014) {
a003 = 4 + a004;
a013 = a002 + a020;
a007 = a019 - a016;
a022 -= a027;
cur += a004;
a021 += a006;
a022 = a021 + a002;
if (a014 >= a014) {
a029 = a028 + a027;
a015 = a014 + a005;
a007 -= a003;
a001 -= a004;
a021 += a014;
a017 -= a013;
if (a013 < a025) {
a000 += a008;
a002 -= a012;
a010 += a029;
a028 = a023 + a002;
a002 += a000;
a005 -= a029;
} else {
a026 += a022;
a001 += a015;
a000 += a020;
}
a024 = a021 + a016;
a028 = a021 - a000;
a001 += a026;
cur += a025;
a021 -= cur;
a008 = a005 - a022;
if (a000 != a000) {
a024 -= a015;
a022 = a004 + a024;
a002 = a023 + a022;
if (a013 == a013) {
a019 = a029 - a019;
a010 += a001;
a009 = a021 + a016;
a000 -= a002;
a021 += a025;
} else {
a017 = a019 - -3;
if (a009 < a001) {
a026 -= a011;
a027 = a009 + a003;
a013 -= cur;
a027 = a017 - a008;
a025 += a008;
a008 = a027 - a009;
if (a026 < a010) {
a008 += cur;
a017 = a022 + -5;
a006 -= cur;
a002 -= a020;
a027 = a009 - a014;
a015 -= a024;
} else {
a009 = a006 - a008;
cur += -5;
a025 += a010;
a013 += a020;
if (a011 > a011) {
a027 = a007 - a015;
a006 += a019;
a029 = a010 + a004;
} else {
a022 = a014 - a026;
a027 -= a021;
}
a026 = a001 + a025;
a016 = a001 + a007;
}
a004 -= a021;
a024 = a010 + a024;
a005 = a016 + a015;
a020 = a001 - a019;
a023 += cur;
a018 -= a021;
a000 += a027;
} else {
a027 += a007;
a017 -= a022;
if (a010 >= a010) {
a014 += a014;
a002 -= a026;
cur = a026 + a012;
a009 += a019;
a007 += cur;
if (a020 != a005) {
a006 = a025 - a017;
} else {
a000 = a021 - cur;
a017 = a014 - a022;
a000 += a024;
a017 += a002;
a028 -= a003;
a007 = a027 + a022;
if (a015 < a015) {
a016 -= a019;
a008 -= a015;
a002 = a017 - a021;
a025 += a009;
if (a014 < cur) {
a018 = a000 - a006;
a024 = a022 + a011;
a024 = 4 + a026;
a028 = a003 - a000;
} else {
a029 = a023 - cur;
a010 = a004 - cur;
a014 -= a028;
if (a017 < a023) {
a005 = a006 * 0;
a026 = cur + a004;
a022 += a024;
if (a001 >= a012) {
} else {
a007 += a029;
a017 = a019 - a024;
a021 = a022 + a023;
a004 = a013 - a021;
if (a026 > a025) {
a008 = cur - a009;
a014 += a018;
} else {
if (a025 <= a028) {
a010 = a012 + a002;
a012 = a004 + a027;
} else {
a011 -= a029;
}
a008 = a019 - a025;
a015 -= a001;
}
a021 = -1 + a009;
a021 = a008 + a019;
a005 = a005 + 1;
}
a006 = a012 + a007;
a023 = a008 + a006;
a026 = a013 - a015;
a016 += a024;
a010 -= a007;
a008 -= a027;
} else {
a005 += a019;
a017 -= a024;
a013 = a020 - a007;
a021 += a024;
}
a018 = a022 - a028;
a006 = a028 + a016;
a012 = a011 * -5;
a014 += a000;
}
a025 -= a008;
a021 = a015 - a018;
a008 = a016 - a028;
a003 += a027;
} else {
a010 = a008 + a012;
cur = a005 + a024;
a004 = a023 - a029;
a018 = a015 + a013;
a023 += a022;
a022 += a018;
a010 = a004 - a000;
}
}
a021 = a002 - a023;
a028 -= a024;
} else {
a016 = a020 + a013;
a027 = a029 + a019;
a023 = a017 - a026;
cur += -2;
a000 += a002;
a001 = cur - a008;
}
a000 -= a017;
a025 += a022;
a022 = a018 + a025;
a028 -= a017;
}
a017 = a021 + 1;
}
a014 = a002 - 3;
a009 -= a023;
a019 = a025 - a015;
a016 += a008;
} else {
a009 -= a005;
a009 -= a029;
a018 = a015 - a006;
a010 = a026 - a003;
a029 += a000;
}
a011 += a001;
a016 += a013;
a028 = a025 - a010;
a018 = cur - 1;
} else {
a000 = a022 - a027;
a028 += a015;
a011 = a025 + a020;
}
cur -= a000;
a015 += a025;
a028 -= a023;
a029 = a029 - 1;
a020 += a008;
a012 += a018;
} else {
a022 += a001;
a003 = a019 + a016;
}
a019 += a010;
a001 += a006;
a010 -= a025;
a015 = a019 - a017;
a000 -= a020;
a012 -= a009;
a023 = a011 - a011;
} else {
a028 -= a019;
a014 = a021 - a024;
a016 -= a005;
a002 -= a021;
}
a025 -= a022;
} else {
a009 = a008 - a028;
a014 = a000 - a010;
a006 += a018;
}
} else {
a011 -= a024;
a015 = a012 + a021;
}
a014 = a028 + a026;
a027 = a005 - a026;
a006 += a010;
a017 += a023;
a013 = a029 - a010;
a005 -= -3;
} else {
a016 += a014;
a014 -= a017;
a014 += a005;
a027 += a002;
a025 += a013;
}
a024 = a028 + a021;
a004 += a001;
a011 = a013 - a012;
} else {
a019 -= a002;
a014 = a022 - a023;
}
a016 += a004;
} else {
}
a011 += cur;
}
}
}
cur += a029;
}
output.collect(prefix, new IntWritable(a018));
}
