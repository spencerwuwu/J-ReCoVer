// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a015 += a004;
cur += a019;
a001 -= a014;
a013 -= a008;
a009 = a004 + a016;
if (a006 < a011) {
a012 += a002;
a002 += a009;
a001 -= a012;
a010 -= a004;
a015 += a001;
a007 = a011 + a017;
a017 = a017 - a003;
a008 += a011;
a004 = a003 + a011;
a006 = a004 + a012;
a002 = cur + a007;
a011 = a008 - a003;
a001 = a019 - a012;
a014 -= a007;
a007 = a013 + a013;
a007 = a004 - cur;
a005 += a016;
a016 = a019 - a009;
a006 -= a000;
a014 += a018;
a007 = a011 + a008;
a001 += a014;
a002 -= a019;
a004 = a011 + cur;
a001 = a015 - a008;
a018 = a014 - a002;
a012 = a019 - a009;
a003 = a002 + a010;
a016 -= a008;
a002 -= a013;
if (a019 >= a009) {
cur = cur + a018;
a005 = a011 - a017;
a003 = a003 + a009;
a006 = a011 - a019;
a014 = -3 + a015;
a013 = a011 - a012;
a011 = a001 - a015;
a007 += a000;
a001 += a000;
a000 -= cur;
a002 += a019;
a002 += a015;
a003 += a003;
a004 = a004 - a000;
a019 = a000 - a001;
a005 -= a010;
a012 = a017 - a019;
a000 = a018 - a019;
a008 = a007 + a006;
a014 = a013 - a015;
a018 += a012;
if (a011 <= a011) {
a016 -= a019;
a014 += a010;
a005 = a001 + a007;
a014 = a007 - a008;
a012 = a012 + a001;
a010 = a005 - a013;
a018 -= a001;
a015 = a001 + a015;
a004 = 4 + a003;
a009 += -1;
a011 = a002 + a011;
a018 -= a017;
a017 = a015 - a007;
a008 -= a002;
a004 += a012;
a004 = a002 - a011;
a005 = a019 + a015;
a015 = 0 + a002;
a015 -= a018;
a018 = a007 + a007;
a012 += a006;
a017 = a000 - a017;
a003 += a009;
cur += a003;
a005 += a016;
a010 = a010 + a007;
a019 = a017 - a002;
a012 += -3;
a006 -= a001;
if (a008 >= 2) {
a007 += cur;
a008 += a001;
a003 -= a015;
a011 += a001;
a007 -= a000;
a017 += a002;
a011 = a001 - a010;
a000 = a017 + a011;
a019 -= a001;
a018 = a015 + a017;
a003 = a001 - a013;
a004 -= a007;
a017 = a002 - a013;
a004 = a010 - a018;
a004 -= a010;
} else {
a013 = a009 - a005;
a019 = a017 - a017;
a003 = a012 + a011;
a014 = a002 + a005;
a001 += a001;
a008 += a019;
a017 -= a011;
a019 -= a008;
a014 -= a004;
a015 += a019;
a000 = a013 - a005;
a007 = a006 - a008;
}
a007 += a001;
a005 += cur;
a017 = cur - a015;
a003 = a003 + a006;
a004 -= -2;
a002 -= a009;
a018 -= a012;
cur += cur;
a017 -= -1;
a006 = a019 + a008;
a006 = a010 - a018;
a017 = a019 - a007;
a018 += a007;
a007 = a000 - a014;
a004 = a005 + a019;
a012 = cur - a004;
a013 += a013;
a008 = -2 + a003;
a007 = a004 - a000;
a004 -= a010;
a010 -= a003;
a003 = a019 + a000;
cur += cur;
a013 += a013;
a017 = a005 + a001;
a007 = a010 + a013;
a000 = a007 + 1;
a013 = a015 + cur;
a004 = a011 + a017;
a014 = a005 - a002;
cur = a008 + a002;
a003 -= a006;
a015 = a000 + a013;
} else {
a008 -= a015;
a017 += a001;
a002 -= a000;
a018 = a006 - a004;
a012 += a012;
a002 -= a019;
a001 = a014 - a016;
a017 -= a013;
a001 += a013;
a002 = a001 + a010;
a005 -= a008;
}
a008 = a019 - a008;
a007 += cur;
cur = a017 - a003;
a004 += a005;
a012 -= a014;
a017 += a006;
a010 -= a014;
a009 += a015;
a015 -= a012;
a006 -= a002;
a005 = a004 - a010;
} else {
a002 -= a007;
a012 = a009 + a016;
a011 = a001 + a001;
}
a018 -= a003;
a007 = a002 + cur;
a000 = a001 + a003;
a010 -= a012;
a000 -= a005;
a017 = a018 + a001;
a002 += -1;
a018 = -4 - a014;
a001 += a016;
a008 -= a010;
a007 = a019 + a005;
a012 = a000 - a013;
a019 -= a007;
} else {
}
a014 = a006 - a000;
a013 -= a005;
a012 -= a018;
a016 = a000 - a010;
a001 += a002;
a009 -= a015;
a017 += a008;
a011 = a012 - a017;
a004 = a008 + a008;
a007 -= a016;
a003 = a003 + a003;
a016 = a002 - a019;
a006 = a011 - a017;
a010 = a015 - a014;
a008 -= a002;
a004 = a005 + a005;
a006 = a014 + a004;
}
output.collect(prefix, new IntWritable(a010));
}
