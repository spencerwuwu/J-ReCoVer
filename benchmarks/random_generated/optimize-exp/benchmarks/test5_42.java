// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a014 = a022 - a006;
a013 = -2 - a022;
a018 += a003;
a011 -= a011;
a011 += a018;
a009 -= cur;
if (a019 <= a021) {
a014 = a003 + a003;
a011 = a021 + 4;
a017 -= a002;
a005 = -5 - a019;
a004 = a003 - a016;
cur += a017;
a013 += a010;
cur -= a012;
a006 = a000 + a015;
a017 = a014 + a022;
a011 = a020 + a013;
a014 += a001;
a005 = a016 + a007;
cur = 2 + a011;
a020 = a023 - a006;
a007 += a021;
a021 = a021 + a008;
a000 += a008;
a024 = a024 - a009;
a017 += 4;
a013 = a006 - a023;
a013 = a009 + a008;
a010 += a001;
a003 = a018 - a018;
a015 = a023 + a023;
a016 = a009 - a002;
a003 += -1;
a013 = a022 + a014;
a018 -= a020;
a001 = a003 + a009;
a024 += a015;
} else {
if (a017 > a011) {
a009 -= a001;
a024 -= a007;
a005 = a017 - a007;
a020 += a020;
if (a003 != a001) {
a009 += a006;
a006 += a017;
a016 -= a004;
a024 = a008 + a002;
a014 -= a024;
a017 -= a010;
a012 -= a003;
a005 += a002;
a005 = a007 - a014;
a013 = a013 - a001;
a005 = a019 + a016;
a024 -= a014;
cur = a005 - a010;
a004 = a003 - a001;
a000 = a021 - -1;
a019 = a006 - a008;
a006 = a018 + a009;
a015 -= a013;
a017 = a019 - a022;
a004 += a019;
a023 += a016;
a010 += a000;
a003 += a011;
a011 += a019;
a009 += a014;
a018 = a012 + a001;
cur = -4 + 3;
a021 = a017 - a001;
a004 += a002;
a020 = -5 + a024;
a023 = a020 + a018;
a024 += a018;
} else {
a017 = -5 - a012;
a013 = a023 - a018;
a020 = a020 - a017;
a003 += a013;
a004 = a019 - cur;
a016 += a010;
a021 += a018;
a008 = a010 - a012;
a010 -= a019;
a007 -= a013;
a015 -= a019;
a019 = a004 + a021;
a011 = a013 + a006;
a005 += a004;
a015 -= a016;
a017 = a002 - a024;
a002 -= a007;
a022 = a004 - cur;
a011 = a021 + a014;
a004 += a020;
a020 = a020 + a009;
a007 = a012 - a002;
a018 = a003 - a001;
a011 = a000 + a009;
a019 = a021 + a017;
a017 = a022 - a013;
a014 = a018 - a020;
a009 -= a023;
a007 -= a008;
a020 = 2 + a011;
a009 = cur + a010;
a015 -= a018;
a010 = a024 + a014;
}
cur -= a020;
} else {
a008 = a003 - a017;
a024 -= a004;
if (a014 >= a018) {
a005 = a000 + a021;
a003 = a006 + a002;
a009 = a021 + a023;
a003 += -5;
a022 += a024;
a010 = a014 + a016;
a024 = a008 + a010;
a008 = 2 - a003;
a014 -= a002;
a007 = a006 - a023;
a014 += a018;
a001 = a009 + a016;
a018 += a022;
a001 = a019 - a018;
a008 -= a011;
a019 -= a001;
a010 += a014;
cur += a011;
a024 = a022 - a018;
a014 = a003 - a023;
a004 -= a002;
} else {
a020 += a017;
a001 = a012 + a009;
a015 += a013;
a018 += a003;
a013 += a009;
a007 = a015 + a019;
a012 += a001;
a009 = a010 + -1;
a023 -= a017;
a020 = a017 + a004;
a005 = a011 - a001;
cur -= a000;
a020 = a002 + a002;
a004 += a017;
a022 = a017 + a024;
a001 -= a016;
a012 = a021 + 0;
a002 -= a018;
a011 += a001;
a024 = a001 + a002;
a003 -= a015;
a016 = a022 - a014;
a008 = a002 - a001;
a006 += a009;
a018 -= a000;
a008 = a000 - a004;
a019 += a021;
a009 = a021 - a011;
a000 += a020;
a002 += a009;
if (a024 == a022) {
cur = a012 + a009;
a007 = a002 + a012;
a015 += a001;
a022 = a007 + a011;
a012 += a021;
a003 -= cur;
a018 -= a011;
a012 = a019 - a013;
a000 = a010 - a005;
a004 = a014 - a009;
a001 = a000 + a005;
a010 += a004;
a008 = a023 - 3;
a009 += a022;
a005 -= a018;
a004 += a003;
a018 = a001 + a001;
a010 = a003 + a014;
a011 -= a003;
a000 += 1;
a006 -= a018;
a008 = a011 - a009;
a008 = a013 - a009;
a011 = a016 + a009;
a008 -= a011;
a024 = a000 + a003;
a015 -= 4;
cur = a008 - a024;
a024 = a012 - a008;
a005 = a023 + a020;
a024 -= a003;
} else {
a017 = a012 + a013;
a017 = a019 - a000;
}
a018 -= a005;
a006 = a021 + a019;
a005 += a007;
a018 += cur;
a005 += a008;
a008 += a017;
a019 = a002 - a006;
a005 = a000 + a011;
a003 = a021 - a005;
a019 = a014 + a006;
a018 -= a010;
a006 = 1 + a023;
a024 += a016;
a018 += a022;
a011 += a024;
a003 = a007 - a010;
a001 = a019 + a013;
a022 += a013;
a017 += a008;
a006 = a010 + a011;
a023 += a006;
a009 = a011 + a002;
a022 -= a015;
a024 = a012 - a019;
a001 -= a023;
a010 = a019 + cur;
a002 -= a009;
a012 -= a010;
a001 -= a006;
a021 = a000 - a000;
}
a000 += a008;
a010 = a004 + a013;
a001 += cur;
a004 += a010;
a022 = a020 + a016;
a016 -= a008;
a010 = 4 - a018;
a007 = a021 - a011;
a010 -= a006;
a011 = a018 + a008;
a002 -= a000;
a004 -= a016;
a012 = a018 - a003;
a010 = a005 + a012;
a013 -= a005;
a011 = a010 - a001;
a007 -= a000;
a001 = a014 + a013;
a008 += a002;
a017 = a011 - a020;
a009 -= a013;
a022 -= a010;
a022 = a011 - a010;
}
a005 = a021 - a002;
}
a003 += a010;
a012 = cur - a021;
cur += a017;
}
output.collect(prefix, new IntWritable(a003));
}
