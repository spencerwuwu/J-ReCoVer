// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a016 = a000 + a007;
a002 -= a011;
a015 = a000 + a008;
a021 += a008;
a001 = a000 + a005;
a014 = a002 - a002;
a009 = a015 + -5;
a015 = a015 + a023;
a001 += a009;
a024 += a008;
a018 = a013 + a016;
a004 = a018 + a001;
a000 += a012;
a001 = a012 + a017;
a015 -= a019;
a023 = a019 + a000;
a009 -= a013;
a023 = a003 - cur;
a006 += a024;
a012 = a007 - a013;
a012 -= a010;
a022 = a012 + a019;
a011 = a000 + a009;
a023 -= a007;
a002 = a011 + a010;
a007 += a008;
a004 = a002 - a012;
if (a006 < a022) {
a004 -= a000;
a022 += a009;
a002 = a010 + a014;
a023 = a013 - a007;
a016 -= cur;
a020 -= a011;
a008 += a011;
a000 = a009 - a016;
a004 = a021 - a011;
a008 -= a023;
a004 -= a000;
a020 += 0;
a018 = a017 * -5;
cur = a018 + a006;
a013 = a009 - a003;
a000 -= a015;
a005 = a014 - a002;
a009 += a007;
a022 = a007 + a004;
cur = a005 + a022;
a005 += a009;
a015 -= a010;
a007 += a019;
a023 += 1;
a001 -= a024;
cur += a016;
a022 += a011;
a017 = a024 - a020;
a021 -= a021;
if (a021 <= a021) {
a002 = a007 + a014;
cur += a011;
a016 = a020 - a022;
a019 = a001 * -2;
a023 = cur + a023;
a010 = a024 + a023;
a010 += a023;
a008 += a005;
a004 = a022 + a004;
a016 = a011 + a019;
} else {
a013 -= -5;
a021 += a006;
a002 -= a023;
a011 += a007;
a011 = a000 + a004;
a005 = a022 - a015;
a015 += a001;
a013 -= a013;
a021 += a017;
a001 += a001;
a003 = a003 - a023;
a005 = a000 - a000;
a019 -= a013;
a011 = a007 + a016;
a018 = a011 - a016;
a006 = a006 + a011;
cur = a017 - a001;
a013 += a010;
a000 = -2 - a005;
a002 -= a023;
a010 += a017;
a012 += a013;
a001 -= a017;
a003 = cur + a006;
a007 += a015;
a013 -= a024;
a002 -= a024;
a023 += a002;
if (a024 != a007) {
a021 = a005 - cur;
a010 = a022 + a023;
a023 += a004;
a019 += cur;
a016 = a004 - a013;
a016 = a017 - a010;
a015 += a016;
cur += a006;
a006 = a001 + a001;
a021 = cur - a021;
a020 = a019 + cur;
a015 += a023;
a018 = a004 - a014;
a011 = a007 + 1;
a006 += a015;
a004 = a004 + a016;
a006 -= a019;
a024 = a006 + a004;
a015 = a020 + a004;
a006 -= a013;
a022 += a006;
a002 = a000 + a019;
a018 -= a011;
a015 = a010 - a010;
a004 -= cur;
a024 = a010 + a013;
a018 += a012;
a006 += a021;
a019 = a022 + a003;
if (a007 <= a016) {
a021 = a016 + a022;
a004 -= a021;
} else {
a005 -= a006;
a008 += a018;
a008 += a018;
a001 += a021;
a011 -= -1;
a001 = a018 - a023;
a013 = a003 + a016;
a004 = a016 - a006;
a001 = a010 + a017;
a021 -= a020;
cur = a001 - a018;
a000 = a013 - a022;
a005 -= a023;
a010 = a004 - a023;
if (a007 > a002) {
a008 = a004 - a010;
a016 -= a001;
} else {
a002 += a005;
a013 = a015 * -3;
a008 += cur;
}
a011 += a013;
a006 += a012;
a015 -= a021;
a008 += a023;
a019 = a009 - cur;
a000 = a019 - a000;
a015 = a017 - a007;
a024 -= a011;
a005 = a014 + a019;
a013 -= a015;
a009 = a024 + a017;
a006 -= a018;
a002 += a014;
a007 += cur;
a020 += a005;
a004 = a004 + a001;
a023 += a022;
a017 -= a018;
a024 = a012 + a013;
a006 = a006 - a003;
a024 = a011 + a014;
a018 -= a023;
a011 += a011;
}
a002 = a009 + a011;
a008 = a000 - 4;
a009 += a012;
} else {
}
a005 = cur + a012;
a004 = a006 + a005;
a001 = a007 + a008;
a002 = a011 - a018;
a001 = a005 - a010;
a023 = a008 + a020;
a006 = a013 + a023;
a009 = a009 + a017;
a009 += a019;
a022 -= a012;
a020 = a021 + a013;
a010 -= a024;
a007 += -1;
a016 = a017 - a000;
a011 = a008 + a005;
a014 += a012;
a021 -= a001;
a003 = a015 + a006;
a023 = a022 - a024;
a014 = a008 - a001;
a018 = a014 + a004;
a021 += a009;
a014 = a021 + a006;
a012 = a001 - a023;
}
a006 += a024;
a005 = a021 + a017;
a005 += a009;
a000 = a010 + a009;
a012 = a021 - a019;
a002 = a013 + a016;
a002 += a020;
a012 = a017 - a009;
a001 = a002 + a003;
a011 = a017 - a012;
a006 -= a000;
a013 = a012 - a008;
a004 -= a003;
a005 = a018 + a000;
a010 += a019;
a002 -= a001;
a020 = a011 + a007;
a022 = a018 - a010;
a001 = a001 - a006;
a006 -= a004;
a023 += a001;
a017 = a016 + a007;
a006 += a006;
a012 = a017 - a003;
a000 -= a004;
a012 -= a017;
a012 += a003;
} else {
a021 -= a002;
a014 = a021 - a016;
a023 = a020 + a002;
a020 = a017 + a024;
a001 += a007;
a007 += a024;
a000 = a019 + a021;
a009 -= a017;
a000 = a023 - a010;
a000 -= a014;
a006 = a019 + a022;
}
a000 += a011;
a017 = 3 - a021;
a018 = a001 + a018;
a008 = a004 - a008;
a020 = a011 + a007;
a013 = a019 + a004;
a017 -= a024;
a024 += a002;
a008 -= a006;
a017 -= a001;
a013 += a013;
a000 += a007;
a000 = a020 - a002;
a018 = a018 - a018;
a004 -= a016;
a000 = a002 + a020;
a022 -= a004;
a012 = a015 + a008;
}
output.collect(prefix, new IntWritable(a008));
}
