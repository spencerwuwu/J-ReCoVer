// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a012 += a019;
a013 = a019 + a011;
a013 = a006 - a006;
a006 = a005 - a012;
a006 -= a012;
a006 -= a001;
a018 -= a013;
a013 -= a007;
a010 = a004 - a004;
a007 -= a016;
cur = a003 + a007;
a012 = a005 - cur;
if (a018 != a019) {
a001 = a005 + a012;
a010 = a016 + a005;
a002 = a015 + a008;
a007 += a013;
a006 += a008;
a014 -= a018;
a002 = a014 - a018;
a006 = a018 * 2;
a007 = a018 - a001;
a011 -= a017;
a003 = a018 - a015;
a004 -= a004;
a018 -= a016;
} else {
if (a019 == a001) {
a017 += a002;
a016 = a007 - a001;
a008 += a007;
a016 = a016 + a015;
a015 -= a005;
a003 = a014 + a006;
a012 -= a018;
a010 = a000 + a004;
a005 -= a014;
a010 = a002 + a005;
a008 -= a010;
a006 -= a006;
a000 -= a006;
a000 = a015 - 0;
a006 = a009 + a016;
a001 = a011 + a011;
a001 = a000 + a017;
a007 = a017 + a006;
a003 += a012;
if (a003 != a015) {
a012 -= a006;
a017 += a017;
a013 = cur + a001;
a008 = a014 - a000;
a016 = a007 - 4;
a000 -= cur;
a002 = a012 - a015;
a004 -= a019;
a009 = a002 - a007;
a014 = a005 + a019;
a005 = a000 - a011;
a018 = a018 + a003;
a009 -= a016;
a014 -= a006;
a006 += a017;
a002 -= a007;
a014 = a017 + a017;
a001 = a009 - a006;
a004 += a006;
a009 += a011;
a001 = a007 + a007;
} else {
a006 = a002 - a015;
a012 = a004 - a019;
a018 -= a017;
a000 += a001;
a015 += a005;
a002 = a006 + a014;
a007 -= a009;
a001 += a015;
a005 = a000 + a012;
}
a004 = a000 + a005;
a000 = a002 - a012;
a003 = a011 - a018;
a009 += a000;
a018 = a016 - a015;
a015 -= a010;
cur = a007 - a005;
a008 = a008 + cur;
a014 += a010;
a012 -= a013;
a019 = a001 * 2;
a017 += a009;
a011 = a014 + a017;
a011 += 3;
a012 += a007;
a014 -= a010;
a019 += a019;
a011 += cur;
a016 = a016 - a012;
a006 = a012 + a018;
a009 = a015 + a010;
cur = a016 - cur;
a017 -= a017;
a002 = cur + a010;
a005 = a006 + a015;
if (a019 >= a014) {
a001 = a007 + a013;
a014 = a009 + a004;
a012 = -4 + a008;
a000 = a005 + a018;
a015 = a016 - a011;
a006 -= a017;
a009 += a002;
a017 = a012 + a009;
a014 += a019;
a007 = a019 + a015;
a006 = a005 + a003;
a000 = a018 - a002;
a009 = a004 - a004;
a004 = a014 - a002;
a006 += a001;
a018 = a019 + a012;
} else {
a005 = a010 + a006;
a000 -= a002;
a015 = a009 + a002;
a003 -= a007;
cur = a015 - a011;
a007 = a007 + a005;
a003 = a000 * 1;
a019 -= a018;
a011 = a015 - a011;
a004 = a019 + a012;
a004 = cur - a002;
a010 -= a012;
a005 += a016;
a016 = a007 - a011;
cur -= a013;
a017 = a017 + a009;
}
a018 = a010 + cur;
a003 += a004;
a015 -= a007;
a011 = a015 - a011;
a000 = a012 + a000;
a018 = a001 + a011;
a007 += a012;
a016 = a008 + a003;
a006 = cur + a011;
a011 += a010;
a008 += a007;
a000 = a003 * -2;
a000 -= a010;
a010 = a019 + a016;
a016 = a019 + a000;
a003 = a011 + a011;
a013 = a014 - cur;
a004 += a019;
a012 += a013;
a009 = a015 - a010;
a001 += a014;
a013 = a005 - a005;
a019 -= a018;
a001 = a004 - a006;
a001 = a008 + -3;
a006 = a009 + a010;
} else {
a018 += a003;
a006 = a011 + a014;
a008 -= a002;
a018 -= a013;
a004 = a019 - a014;
a000 = a017 - a004;
a012 -= a011;
a009 = a013 - a005;
a016 = a016 + a013;
a001 = a010 + a007;
cur = a000 - a018;
a002 = a011 - a001;
cur = a009 - a007;
a018 += a012;
a002 = a009 + a012;
a012 -= a019;
a015 -= a015;
a007 = 1 + a006;
a019 += a013;
a013 -= a017;
a000 = a009 - a007;
a004 = a018 + a007;
a003 = a003 - a017;
a016 += a004;
a010 += a017;
a018 -= a010;
a015 = a004 - a010;
a013 -= a015;
a019 = a012 - a000;
}
a019 -= a002;
a002 = a014 - a013;
a014 = a005 - a006;
a013 = a008 + a019;
a018 -= a011;
a011 += a014;
a006 += a014;
a003 += a012;
}
a010 -= a011;
a004 -= a014;
a016 = a005 - a018;
a012 -= a005;
a000 += a003;
a007 -= a018;
}
output.collect(prefix, new IntWritable(a011));
}
