// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
cur = a022 - a003;
a012 = a020 + a024;
a019 += a008;
if (a003 < a015) {
a016 = a018 - a006;
a003 = a011 - a023;
if (a016 != a006) {
a015 = a023 + a022;
a018 = a008 - a008;
a002 -= a024;
a012 += a001;
a022 = a000 - a018;
a010 = a011 + a016;
a012 -= a006;
a015 = a014 - a013;
a024 -= cur;
a020 = a004 - a012;
a004 -= a024;
a002 -= a013;
} else {
a003 -= a000;
a022 = a008 + a016;
a018 = a021 - a021;
a018 += a013;
if (a000 < a019) {
a001 = cur + a017;
a019 += a017;
a011 += a022;
a010 = a008 - a000;
a016 -= a018;
} else {
a022 = a000 + a023;
a019 = a015 - a003;
a010 = 4 - a000;
a022 = a015 + a001;
a010 = a023 - a022;
a022 = a018 - a013;
a021 -= a023;
a003 += a005;
a014 = 1 + a014;
a017 += a018;
a001 += a020;
a011 = a010 - a011;
a007 = a015 - a020;
a019 = a003 + a011;
a001 -= a023;
a020 = a015 + a006;
a010 = a016 + a013;
a010 = a006 + a005;
a016 += a008;
a004 = a007 - a017;
a017 = -3 + a006;
a002 += cur;
a017 = a024 - a002;
a001 = a006 - a000;
a019 = a020 - a006;
cur += a005;
a011 = a004 - a009;
a004 -= a001;
a013 -= a006;
a001 = a006 - a013;
a014 = a019 - a015;
a020 = a003 - a023;
if (a013 == a001) {
a001 += a000;
a024 = a015 + a015;
a012 -= a006;
a018 = a002 - a012;
a015 += a010;
a004 = a018 - a020;
a015 = a021 - 3;
a009 += a016;
a010 += a001;
a015 = a003 + a023;
a016 += a023;
a020 -= a008;
a022 = a006 - a023;
a007 = a023 - a024;
a000 = a008 - a002;
a004 = a006 * 3;
a022 = a012 - a011;
a019 = a022 - a016;
a019 += a012;
a000 -= a015;
a017 += a024;
a018 = a021 + a003;
a011 = a011 - a000;
a004 = a013 - a021;
a001 = a016 - a019;
a017 -= a005;
a010 = cur + a005;
a022 -= a010;
} else {
a008 = a022 + a013;
a007 -= a001;
a015 += a019;
a013 -= a020;
a006 = a010 + a017;
if (a021 == a000) {
a024 = a024 + a002;
a018 = a012 - a018;
a008 = a024 + a013;
a023 += a016;
a001 = a003 + a011;
a012 -= a017;
a000 = a023 + a012;
cur += a013;
a014 += a007;
a017 -= cur;
a001 -= a007;
a024 = a001 + a012;
a007 -= a022;
a004 = a001 - a000;
a014 = a011 + a008;
a023 = a021 + a019;
a006 = a012 + a024;
a001 = a005 + a019;
a016 = a017 - a005;
a024 -= a010;
a020 = a009 + a018;
a023 -= cur;
a005 = a014 - a005;
a012 = a009 - a007;
a017 = a004 + a020;
a004 -= a007;
a008 -= a000;
a017 = cur - a010;
a011 += a019;
a007 -= cur;
a013 += a004;
a013 = a017 - a013;
} else {
a014 += a015;
a012 += a002;
a021 += a008;
a024 += a000;
a010 -= a004;
a019 = a018 + cur;
a005 -= -3;
a016 -= a023;
a017 -= a006;
a005 += 0;
a024 = a023 + a004;
a010 = a012 - a014;
a000 += a016;
a007 = a021 + a009;
a021 = a003 + a021;
a013 += a021;
a010 = a010 + a006;
a019 += a021;
a014 += a005;
a006 = a010 + a011;
a012 = a019 - a009;
a004 += a024;
a001 = a024 - 3;
cur = a014 + a022;
a002 = a003 - a004;
a019 = a013 - a007;
a003 += a010;
a022 -= a002;
}
a010 += a008;
cur = a000 + a015;
a018 = a007 + a023;
a004 += a004;
a017 = a013 + a008;
a004 = a007 + cur;
a013 -= a022;
a001 = -5 - a006;
a007 += a016;
a003 -= a013;
a011 += a023;
a020 += -1;
a015 -= a023;
a016 -= a003;
a021 = a016 - a007;
a019 += a009;
a018 = a011 - a018;
a021 += a015;
a023 = a006 + a005;
a010 += a007;
a023 += a009;
a009 -= a018;
a011 -= a024;
a021 -= a022;
a018 = a001 + a019;
cur -= a005;
a023 += a014;
a007 = a022 + a020;
a019 -= a024;
a016 = a005 + a011;
}
a020 -= a021;
a003 = a000 + a005;
cur = a021 - a013;
a006 -= a018;
a021 = a015 + a012;
a021 = a010 - a021;
a018 = a012 - a003;
a022 += a011;
a011 = cur + a001;
a008 -= a009;
a002 -= a024;
a021 = a014 - a009;
}
a023 -= a014;
a001 -= a007;
a019 -= a019;
a024 = a013 - a009;
a008 = a000 + a013;
a012 = a016 - a022;
a003 = a005 + a022;
a020 += a022;
a006 = -2 - a021;
a002 -= a019;
a004 -= a012;
a016 = a019 - a014;
a000 = a024 + -2;
a021 -= a022;
a009 += a006;
a012 -= a022;
a021 = a009 - a020;
}
a015 += cur;
a021 -= a012;
a011 -= a024;
a014 = a024 - a011;
a022 += a006;
a013 -= a012;
a020 = a016 - a016;
a000 = a012 + a001;
} else {
a005 = a003 - a005;
a016 = a009 + a000;
a022 -= a009;
a003 = a014 - a009;
a019 += 2;
a021 = a012 - a008;
a010 = a019 + a010;
a008 = a004 - a017;
cur = a020 - a004;
a016 += a011;
a021 = a014 + a015;
a024 -= a008;
a007 = a010 + a000;
a013 -= a016;
}
a000 = a018 + a018;
a006 = a019 - a002;
a014 = a000 + a007;
a011 = a000 + a003;
a018 -= a022;
a003 += a013;
a001 = a003 + a000;
a014 = a000 - a005;
a016 -= a021;
a015 -= a010;
a010 -= a021;
a015 -= a007;
a002 = a015 + a008;
a021 += a001;
a023 -= a023;
a012 = a009 - a018;
cur = a014 + a011;
cur -= a021;
}
output.collect(prefix, new IntWritable(a021));
}
