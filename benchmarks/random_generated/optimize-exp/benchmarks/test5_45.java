// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a009 += 4;
a007 -= a013;
a010 += a012;
a016 = a004 - a001;
a009 -= a004;
a006 += a021;
a020 = a017 + a006;
a000 += a019;
a013 += a018;
a006 -= cur;
if (a021 != a014) {
a019 += a010;
if (a011 == a004) {
a018 = a021 - a004;
a013 += a007;
a021 += a011;
} else {
a021 = a016 - a018;
a018 = a018 + a021;
a002 = a009 - a024;
a006 = a011 - a012;
a012 = a017 - a010;
cur = a023 + a010;
if (a017 >= a000) {
a023 -= a013;
a001 -= a017;
a013 = a016 - a005;
a017 -= a008;
a012 = 4 - a002;
a020 = a011 - a019;
a024 -= a019;
if (a016 <= a021) {
a018 -= a014;
a014 -= a014;
a010 = a014 + a004;
a023 -= a000;
a006 = a004 - a003;
a015 -= a000;
a022 -= a019;
a023 += a001;
a008 = cur - a017;
a010 += a003;
a010 = a011 - a002;
a021 = a022 + a002;
a016 += a001;
a005 -= a003;
a008 = a023 - a018;
a009 += a024;
a009 = a002 - 0;
a018 = a012 * -3;
a006 = a022 - a023;
a009 = a018 + a017;
a010 += a005;
a012 -= a004;
a010 -= a007;
a024 = a001 - a002;
a019 += a014;
a024 = a005 + a013;
if (a022 >= 0) {
a007 -= a009;
a014 -= a004;
a003 += a000;
a015 -= a010;
a017 -= a020;
a024 = a020 + a014;
cur = a000 + a021;
a015 += a024;
a008 = a019 + a023;
a021 = a002 + a024;
a004 = a019 - a005;
cur = a020 + a005;
a013 -= a001;
a004 = a022 - a018;
cur = a000 + a012;
a016 = a024 + a015;
a005 += a003;
a014 -= a016;
a006 += a003;
cur = a014 + a001;
a023 = a007 + a022;
a019 = a007 - a022;
a006 = a022 - a015;
a007 = 2 - a016;
a010 = a004 - a018;
a012 += a010;
a022 = a003 + a021;
a007 = a015 - a005;
a013 -= cur;
cur = a017 - a022;
a002 = a006 - a022;
a024 = a019 + a004;
} else {
a001 -= a004;
a013 = a020 - a013;
}
a018 += cur;
a014 += a016;
a023 -= a011;
a015 -= a012;
a003 -= a015;
a006 = a012 + a016;
a005 = cur + a022;
a021 += a002;
a024 += a007;
cur = a001 - a014;
a004 -= a002;
a023 -= -2;
a003 -= a012;
a015 -= a017;
a012 = a011 - a006;
a002 += a015;
a023 += a021;
a011 += a015;
a012 += a021;
a006 = a016 + a022;
a014 += a024;
a019 += a024;
a008 = a009 + a018;
a007 += cur;
} else {
a016 -= a014;
a010 += a008;
a005 += a009;
a024 -= a021;
a005 = a013 + a001;
cur = a001 - a023;
a000 = a004 - cur;
a015 = a001 + a021;
a013 = a001 + a013;
a011 = a009 - a000;
cur -= a019;
}
a016 -= a022;
a005 = a020 + a020;
cur = a018 + a005;
a015 = a020 + a009;
a024 = a008 + a009;
a007 = a024 - a001;
} else {
a020 -= a019;
a011 -= a014;
a006 -= a010;
a024 -= a019;
a009 -= a002;
a019 -= a009;
a000 += a014;
a023 += a022;
a010 = a003 + a001;
a008 = a001 - a013;
a019 -= a023;
a014 = a012 * -3;
a000 = a013 + a002;
a022 = a009 + a005;
a009 = a014 + a022;
a002 = a016 + a012;
a019 = cur - a006;
a017 += -4;
a015 = a008 - a003;
a009 = a005 + a013;
a024 = a021 + a023;
a021 = a024 + a015;
a021 += a018;
a009 = -2 - a006;
a015 -= a021;
a015 += -2;
a010 -= a004;
cur = a018 - a003;
a008 = a001 - a021;
a012 = a003 - 2;
a005 = a010 + a002;
a017 += a018;
a003 = a006 + a012;
}
a008 -= a007;
a002 = a009 - a005;
a017 = a014 - a006;
a020 -= a012;
a009 = cur + a001;
a016 = a011 - a007;
cur -= a011;
a005 -= a012;
}
a004 += a006;
a009 += a022;
a000 = a016 + a015;
a010 -= a008;
a000 = a014 + a006;
a017 -= a013;
} else {
a016 += a005;
a001 -= a005;
a024 += a011;
a023 += a007;
a011 = a000 + a017;
cur = a022 - a009;
a012 = a005 + a003;
cur = a009 + a009;
a009 = a007 + a005;
a002 += a006;
a015 = a022 - a002;
a020 -= a023;
a019 -= a007;
cur = a020 + a004;
a010 = a014 + a000;
a015 = a012 + a003;
a006 = a024 + a002;
a001 = a017 + a009;
a014 = a009 - a008;
a012 -= a010;
a021 -= a010;
a006 = a022 - a008;
a014 = a021 + a014;
a021 -= -5;
a002 = a012 + a008;
a016 += a020;
a007 = a002 - a006;
a014 -= a024;
a017 += a003;
a017 = a005 + a016;
}
a018 -= cur;
a007 += cur;
a001 += a008;
a009 -= a013;
a001 = a023 + a001;
a017 -= a011;
a003 += a002;
a008 = a024 - -3;
a023 += cur;
a008 = a008 + a024;
a012 = a009 + a000;
a014 = a015 - a018;
a002 = a020 + a022;
a002 = a022 - a020;
a005 = a004 - a013;
cur += a013;
a002 = a010 + a002;
a013 += a010;
a015 += a006;
a012 += a015;
a000 = a004 + a016;
a023 = a020 + a017;
a012 -= a006;
a004 = a008 + a016;
a015 -= a023;
a020 += a019;
a007 += a002;
a024 += a009;
a013 = a006 - a012;
a009 = a016 - a006;
a002 = a021 - a019;
a012 -= a012;
a010 = a011 + a013;
a013 = a012 * 1;
a012 = a010 + a020;
a018 = a024 + a005;
a021 += a017;
a003 = a009 + a003;
a023 += a000;
a018 -= a009;
a015 += a020;
a008 -= a021;
a024 -= a004;
a014 += cur;
a006 -= a020;
}
output.collect(prefix, new IntWritable(a020));
}
