// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a019 -= cur;
a010 = a007 + a005;
a019 += a011;
a012 -= a001;
a006 -= a018;
a005 = a002 - a008;
a010 += a015;
a008 = a005 - a012;
a019 += cur;
a010 = a010 + a005;
a014 += a007;
a019 = a000 + a018;
a017 += a018;
a008 += a011;
a013 = a003 + a017;
a018 = a006 - a011;
a008 = a009 - a017;
a002 -= a018;
if (a000 == a016) {
a010 -= a004;
a016 = 3 + a000;
a009 -= a002;
a001 = 1 + a013;
a008 += a005;
a012 += a009;
a012 = a013 - a015;
a006 = a009 - cur;
a001 += a003;
a004 = 0 + a014;
a016 = a006 - a016;
cur = a016 - a014;
a000 += a015;
a018 -= a003;
a017 -= a003;
a001 = a010 - a013;
a011 = 3 + a019;
a015 = a006 - a018;
a013 = a006 - a017;
cur += a017;
a013 = a000 + a002;
a010 += a009;
a017 += a001;
a013 = a007 - a015;
a016 = a010 + a011;
cur += a015;
} else {
a009 += a000;
a001 = a008 + cur;
a009 += a013;
a001 -= a006;
a005 = a019 - a012;
a015 = a011 + a001;
a003 = a002 - a014;
a012 += a015;
a013 = a009 - -4;
a007 -= a003;
a008 = a013 + a009;
a000 += 4;
a017 -= a007;
a004 -= -2;
a014 -= a003;
a011 = a001 + a018;
a019 -= a006;
a018 = a005 - a017;
a001 = a013 + a010;
a001 -= a004;
a018 = a005 - a000;
a002 = a002 - a005;
a008 -= a011;
a000 = a014 - a003;
a000 = a008 + a008;
a003 = a000 + a010;
a013 += -3;
a011 += a014;
a001 -= -2;
}
a018 = a010 - a004;
a001 = a002 - a010;
a002 -= 3;
a010 -= a002;
a011 = a008 + a011;
a001 += a012;
a018 -= a011;
a019 = a001 - a006;
a005 -= a019;
if (cur >= a018) {
a013 = a018 - a011;
a001 = a019 + a007;
a017 += a002;
a013 += a013;
a012 = a008 + a006;
a014 -= a003;
a003 -= a008;
a005 += a014;
a014 -= a009;
cur += a004;
a003 = a006 + a010;
a004 = a009 - a003;
a013 -= a017;
a002 += a006;
a019 = a000 - a014;
a007 -= a016;
a004 = a009 - a008;
} else {
}
a000 += a002;
a009 = a001 - a008;
a007 -= a010;
cur += a017;
a018 += a013;
a011 += a009;
a004 -= a007;
a005 -= a015;
a010 = a014 - a018;
a012 += a010;
a008 += -2;
a014 = a010 - a003;
a015 = a013 - a000;
a015 += a014;
a003 = a004 - a008;
cur = a016 + a017;
a012 = a011 - a003;
a008 = a010 + a017;
a008 = a012 - cur;
a004 = a011 - a019;
if (a017 != a004) {
a001 += a017;
a013 = 2 + a013;
if (a001 > a016) {
a009 = a002 + a005;
a010 = a003 - a009;
a017 += a001;
a009 = a013 + a013;
a012 += a000;
a018 -= a019;
a000 -= a001;
a016 += a009;
a014 = a003 + a006;
a004 -= a010;
a012 += a001;
a002 = -2 - a017;
a005 = a010 + a015;
a003 = a016 - a018;
a008 -= a010;
a008 += a013;
a012 = a007 - cur;
a014 += a016;
a006 -= a019;
a001 = a019 + a003;
a016 += a016;
} else {
a003 = a010 - a011;
a010 -= a010;
a005 -= a006;
a006 += a007;
a003 = a017 + a012;
a014 = a007 + a008;
a014 += a015;
a006 -= a002;
a014 -= a015;
a013 = a003 + a014;
a016 = a002 + a013;
a000 += a005;
a016 = a019 - a019;
a016 -= cur;
}
a001 = a013 - cur;
a019 += a011;
} else {
a017 = a018 + a014;
a000 += a004;
a018 += cur;
a014 = a005 - a017;
a019 = a006 - a016;
a012 = cur - a008;
a019 = a009 - a006;
a002 = a002 + a003;
a012 = a006 - a014;
a017 = a000 * 4;
a003 = 2 - a009;
a015 += a018;
a008 -= a010;
a009 = a010 - a011;
}
a012 = cur + a016;
a019 = a019 + a015;
a005 = a007 - a015;
a007 = a019 + a014;
a009 -= a006;
a015 -= a018;
a011 -= a002;
a002 = a019 + a001;
a007 = a015 + a002;
a014 -= a003;
a004 = a008 - a012;
a006 -= a009;
a018 = a009 + 4;
a013 = a010 + a019;
a013 -= a013;
a002 -= a019;
a015 += a003;
a017 = a010 + a005;
a003 = cur - cur;
a015 = a013 - a018;
a003 += a015;
a011 += a002;
a014 -= cur;
a009 += cur;
a000 = a003 + a004;
a008 -= a013;
a002 += a012;
a019 = a015 + a017;
}
output.collect(prefix, new IntWritable(a007));
}
