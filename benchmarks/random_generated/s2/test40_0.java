// Note: only +, - operations
// Parameters:
//   Variables:   40
//   Baselines:   400
//   If-Branches: 40

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int a030 = 0;
int a031 = 0;
int a032 = 0;
int a033 = 0;
int a034 = 0;
int a035 = 0;
int a036 = 0;
int a037 = 0;
int a038 = 0;
int a039 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a000 = a023 + a014;
a011 += a025;
a019 += a025;
a026 = a028 + cur;
if (a037 <= a013) {
a002 = a021 + a038;
a039 = a026 - a005;
a032 -= a022;
a005 = a032 - a022;
} else {
a002 = a021 + a035;
a016 = a034 - a035;
a015 -= a010;
a014 = a006 + a026;
a033 -= a008;
a010 += a030;
if (a034 >= a020) {
a029 = a024 + a008;
a024 = a039 * -3;
} else {
a039 -= a017;
cur -= a011;
a020 -= a027;
a000 += a002;
a039 -= a034;
a011 = a005 + a006;
}
a005 = a038 - a024;
a007 -= a007;
a016 += a027;
a033 += a004;
if (a022 <= a027) {
} else {
a021 -= a037;
}
a005 = a033 - a019;
a021 -= a027;
a015 -= a030;
a000 -= a016;
}
a013 = a002 - a005;
a025 += a026;
if (a009 != a016) {
a015 += a005;
a036 = a015 + a024;
a032 = a006 + a005;
a006 = a032 - a015;
a015 = a030 - a005;
a016 -= a029;
} else {
a037 = a003 - a014;
a032 = a030 + a032;
a025 -= a023;
if (cur < a028) {
a007 -= a008;
} else {
a012 = a039 + a038;
a006 = a000 - a029;
a021 = a012 + a039;
a038 = a018 - a009;
a022 += a016;
if (a022 >= a001) {
a031 += a034;
a028 -= a017;
} else {
a007 -= a012;
a033 += a037;
if (a005 <= a034) {
a005 += a035;
a013 = a032 + a005;
a015 += a012;
if (a003 < a003) {
a031 = a007 + a000;
a002 = a029 + a023;
a013 = a019 + a015;
a006 -= a024;
a031 -= a033;
a000 = a016 - cur;
a037 = a006 - a017;
} else {
}
a010 = a017 - a031;
a024 += a015;
a018 = -4 + a021;
a022 -= a017;
a001 = a022 - a018;
a029 += 2;
a017 += a007;
if (a008 >= a039) {
a034 = a031 - a025;
a003 = a001 + a000;
a017 += a011;
a008 += a007;
a033 = a001 - a036;
a022 += a021;
a030 = cur - a014;
} else {
}
a039 -= a037;
a036 = a035 + a021;
a023 -= a022;
a026 = a020 - cur;
a032 = a005 - a006;
a004 += a038;
a014 = a025 + a012;
if (a015 != a007) {
a010 -= a024;
cur += a026;
a034 = a032 + a039;
a004 -= a012;
a018 -= a015;
a008 += a033;
a038 = a027 - a031;
} else {
a031 = a032 - a038;
a006 += a004;
a027 -= a027;
a014 -= a022;
a029 = a006 + a002;
a037 = a006 + a033;
cur += a022;
}
a019 = a004 - a026;
} else {
a000 = cur + a021;
a027 += a032;
a030 += a011;
a006 = a014 - a014;
a004 += a008;
if (a005 != a024) {
a033 += a025;
if (a016 >= a018) {
if (a028 <= a014) {
if (a027 > a031) {
a029 += a034;
a024 = a034 + a021;
a035 = a014 + a024;
a021 = a026 + a009;
a016 = a008 + a034;
a017 = a023 - cur;
a024 -= a039;
if (a030 != a034) {
if (a000 != a026) {
if (a036 >= a032) {
a036 = a027 - a030;
a037 = a026 - a008;
a002 = a038 - a024;
a008 = a030 + a029;
} else {
a038 = a020 + a019;
}
a021 += a034;
a024 = a024 - a003;
a034 -= a014;
a026 -= a035;
a001 = a017 - a038;
a037 += a034;
a031 += a039;
if (a018 >= a017) {
a007 = a019 + a037;
a025 -= 4;
a026 = a033 + cur;
a018 += a011;
a018 -= a031;
a003 = a007 + a022;
if (a028 > a038) {
} else {
a037 += a026;
a000 += a003;
}
} else {
if (a007 > a013) {
a027 = a006 * 4;
a024 -= a008;
a017 -= a007;
a039 -= a039;
a021 += a011;
a029 -= a017;
a035 -= a007;
} else {
a020 += a035;
a007 -= a022;
a005 = a011 + a014;
a027 = a038 - a020;
a032 = a031 + a024;
a002 -= a008;
if (a001 > a027) {
a015 = a017 - a032;
a019 -= a009;
a010 += cur;
if (a034 > a012) {
a012 += a037;
a012 = a028 + a025;
a022 = a003 - a022;
a030 = a020 + a015;
a013 += a023;
a037 = a012 - a035;
a013 -= a026;
if (a033 <= a021) {
if (a004 > a002) {
a038 = a016 - a039;
a011 = a014 + a011;
a012 -= a037;
a019 = a034 + cur;
a033 = a032 - a029;
a006 = a034 - a002;
} else {
a006 += a013;
}
a031 -= a019;
} else {
if (a008 <= a033) {
} else {
a022 -= a032;
a009 -= a011;
a004 += a030;
if (a026 == a017) {
a032 += a015;
a004 = a015 + a015;
a022 = a031 + a027;
a030 = a010 + a039;
a002 += a015;
a020 += a013;
a020 = a017 - a033;
} else {
a026 += a030;
a011 -= a029;
a032 = a015 - a011;
a038 = a019 - a029;
}
a028 -= a012;
a032 += a021;
if (a006 <= a014) {
a038 = a034 + a013;
a027 += a014;
a003 += a000;
if (a011 != a009) {
a035 = a003 - a013;
a022 = a024 - a006;
a031 += a007;
a038 = cur + a030;
a026 += a013;
a021 = a017 - a020;
if (a029 == a030) {
} else {
a023 = a007 * 3;
a015 -= a034;
}
a021 = a010 - -5;
a009 = a021 + a022;
a001 += a001;
} else {
a012 -= a025;
a034 = 3 + a004;
a032 += 1;
a027 -= a032;
a032 += cur;
a033 -= a007;
a027 = a014 + a012;
if (a024 < a035) {
if (a018 > a001) {
a025 = a032 + a022;
a023 = a024 + a036;
a010 -= a015;
a010 = a018 + a022;
a029 = a021 + a001;
} else {
a005 = a028 - a011;
a037 = a017 - a031;
a035 = a007 - a026;
a029 = a004 + a009;
a022 = a019 + a011;
if (a027 == cur) {
a022 = a009 + a033;
a037 += a021;
cur = a010 + a010;
a032 = a017 + a006;
a021 = a025 + a003;
a036 = a015 + a031;
} else {
if (a030 < a006) {
a020 = a033 + a011;
a025 = a032 + a022;
a008 = a015 + a017;
a025 = a020 - a011;
} else {
a004 = a033 + cur;
a004 += a030;
a001 += a029;
a036 = a016 + a008;
if (a035 > a030) {
a002 = a023 - a018;
a015 -= a000;
a012 = a035 - a018;
a014 = a026 - a011;
cur = a027 - a023;
a035 -= a025;
if (a002 != a012) {
a005 = a039 - a017;
a023 -= a008;
a034 = a023 + a016;
a039 = a028 + a015;
a016 = a018 + a023;
if (a001 < a018) {
a001 = a023 + a017;
a033 = a032 + a018;
a016 -= a007;
a028 = a018 - a035;
a010 -= a004;
if (a000 >= a016) {
a010 += a016;
a027 = a033 - a034;
a025 += a004;
} else {
a037 += a038;
a017 += a034;
}
} else {
a002 = a003 - a024;
a039 = a022 + a022;
a001 = a019 + cur;
a017 = a027 + a026;
a013 += a027;
a010 = a009 + a038;
if (a019 == a010) {
a026 += a012;
a032 = a005 + -4;
a011 = a025 + a014;
a023 -= a032;
a023 -= a031;
a030 -= a037;
if (a024 <= a036) {
if (a027 == a017) {
a005 = a019 - a017;
a036 -= a029;
a037 = a009 + a034;
a006 += a024;
} else {
a013 -= a017;
a005 += a004;
cur = a014 + a020;
a024 -= a010;
a026 -= a024;
a017 -= a014;
a005 -= a037;
}
a034 += a017;
a002 += a006;
a007 = a011 - a035;
} else {
a030 += a013;
a032 += a024;
a038 += cur;
a009 = a009 - a034;
a028 += a004;
a023 = a000 * -2;
}
a008 += a007;
a018 = a003 - a024;
a016 += a021;
} else {
a033 = a016 + a033;
a022 = a003 + a005;
a002 = a002 + a036;
a037 = a010 - a007;
a013 -= a000;
a025 += a000;
a038 = a021 - a029;
}
a031 += a039;
a018 = a011 - a035;
a009 = a024 + a035;
a039 = a005 - a019;
a030 -= a018;
a001 += a001;
}
} else {
a006 += a016;
a026 -= a036;
a014 = a029 - a021;
a017 -= a005;
a004 = a005 - a018;
a039 += a014;
}
a019 -= a012;
cur = a032 + a011;
a018 = a037 + a019;
a013 = a006 + a012;
} else {
a031 += a022;
}
a013 = a010 + a033;
a013 -= a001;
a015 -= a038;
a031 += a017;
}
a002 += a010;
a038 = a010 - a008;
a010 = a023 + a007;
a021 -= a033;
}
a012 = a011 - a039;
a027 += a020;
a024 += a000;
a015 = a006 + a034;
a021 = a029 + a011;
}
} else {
a020 += a033;
}
a016 += a028;
a009 = a026 + a015;
}
a011 = a030 + a031;
a022 = a000 - a019;
cur -= a026;
a039 = a019 - a035;
a005 += a023;
} else {
a008 = a034 + a021;
a020 = a002 - a019;
a022 -= a017;
a034 -= a037;
a035 -= a024;
a036 = a004 - a002;
}
a030 = cur - a031;
}
a016 -= a007;
a029 += a038;
a007 = a022 + a028;
a023 += a036;
a038 -= a037;
a001 += a008;
}
a019 = a035 + -3;
} else {
a013 = a029 - a038;
a003 -= a037;
a039 -= a027;
a003 -= a010;
a019 -= a038;
}
} else {
a022 += a013;
a008 = a013 + a025;
a000 -= a025;
a037 = a003 - a014;
a004 = a015 + a025;
a037 -= a012;
a022 -= a000;
}
a016 += a032;
a023 = a016 + a031;
a036 += a001;
a003 += a023;
}
a020 -= cur;
a006 = a022 + a012;
a020 -= a025;
a010 -= a004;
}
a027 = a009 + a029;
a004 = a015 + a029;
} else {
a004 = a036 - a020;
a001 = a018 + a016;
a003 = a024 + a021;
}
cur = a005 - a016;
a012 -= a017;
} else {
a030 = a025 + a006;
a005 += a039;
a027 += a000;
a012 += a038;
a022 = a029 - a033;
}
} else {
a007 = a033 + a007;
a023 = a012 + a022;
a015 -= a012;
a014 -= a009;
}
a025 -= a014;
a012 += a016;
a005 = a004 - a031;
a033 += a013;
a010 -= a037;
} else {
a007 = a012 - a018;
}
a019 = -2 + a002;
a006 += a014;
cur += a002;
} else {
a033 += a034;
a018 += a015;
a037 = a038 + a017;
a010 = a038 + a008;
a034 -= -4;
a011 -= a011;
}
a023 = a034 - a006;
a012 += a019;
a035 += a037;
} else {
a018 -= a013;
a012 = a016 - a033;
a000 = a006 + a028;
a011 -= a005;
a014 -= a000;
a034 = a036 - a036;
a012 -= a027;
}
}
}
}
}
a008 = a012 - a004;
}
output.collect(prefix, new IntWritable(a039));
}
