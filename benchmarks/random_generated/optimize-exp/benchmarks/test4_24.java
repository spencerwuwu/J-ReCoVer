// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a012 += a019;
a013 = a004 - a000;
a006 = a015 + a007;
a013 += a017;
a007 = a010 + a008;
a008 += a008;
a012 -= a000;
a014 = a000 + a013;
a012 -= a015;
a010 -= a000;
a007 += a016;
a016 = a009 - a014;
a018 += a000;
a011 += a007;
a014 -= a006;
a015 = a012 + a008;
a014 = -2 + a016;
cur -= a016;
a011 += a014;
a011 += a017;
a015 = a010 + a008;
a001 = a012 + a004;
a014 = cur + a017;
a010 = -3 + a010;
a006 = a016 - a002;
a000 = a011 * 0;
a011 -= a015;
a001 += a002;
a007 = a008 + a001;
cur = cur + a001;
a019 = a019 - a002;
a010 += a006;
if (cur == a008) {
a011 = a007 - a009;
a008 = a001 + a010;
a005 += a001;
a005 = a015 + a019;
a010 += a000;
a017 = a007 + a009;
a014 -= a018;
a011 -= a019;
a005 = a006 - a019;
a019 = a017 - a007;
a019 = a006 + a018;
a010 += a019;
cur += -2;
a009 -= a005;
a002 += a000;
a009 = a009 + a008;
a011 = a019 - a010;
a017 = a008 + a002;
a019 -= a011;
a016 += a008;
a010 -= a017;
a012 = a016 - cur;
a013 -= a017;
a000 = a008 + a014;
a017 = a019 + a004;
if (a000 <= 1) {
a013 -= a009;
a014 = a004 + a016;
a005 = a003 + a006;
a012 = a019 - a015;
a014 = a008 - a006;
a007 = a017 + a006;
a017 = a001 - a008;
a000 -= a012;
a010 -= a009;
a002 -= a017;
if (a007 < a013) {
cur -= a003;
a017 = a006 - a005;
a015 += a015;
cur = a011 + a016;
if (a012 != a006) {
a012 = a017 - a012;
a016 += cur;
a009 = a016 - a014;
a012 = a015 - cur;
a012 = a004 + a018;
a006 = a010 - a011;
a008 -= a000;
a014 -= a011;
a018 -= a002;
a006 -= a007;
a002 += a019;
a007 = a015 - a004;
a013 += a003;
a013 -= a009;
a006 = a002 + a019;
a012 += a010;
a019 += cur;
} else {
a011 -= a013;
cur = a007 - a007;
a017 += a001;
a010 -= a009;
a011 -= a010;
a004 = a006 - a014;
a010 = a006 - a004;
a004 = a000 - a000;
a015 -= a008;
a014 -= a007;
a015 -= a016;
a012 = a013 - a013;
cur = a011 - a002;
a003 = a006 + a003;
a008 = 1 - a014;
a013 = a009 + a004;
a001 += a003;
a003 = a016 - a007;
a017 += a017;
a013 -= a000;
a013 = a013 * -1;
a004 = a012 - a018;
a002 += 0;
a002 -= a019;
a013 += a011;
a001 = a016 - a019;
a010 = a000 * 0;
a013 = a011 - a010;
a010 += a007;
a004 -= a015;
cur = a018 - a013;
}
a003 += a013;
a017 -= -5;
a004 = a005 - 1;
a013 = a002 + a009;
a013 -= a008;
a013 -= cur;
a005 = -5 + a006;
a005 = a003 + a010;
a014 -= a017;
a012 = cur - a019;
a012 = a009 + a007;
a011 -= -5;
} else {
a017 = cur - a015;
a011 = a000 + a010;
cur = a009 - cur;
a011 += a006;
a014 = a012 + a006;
cur -= a000;
a018 -= a016;
a006 += a019;
a001 = a016 - a003;
a019 = a009 + a001;
a004 = a006 - a015;
a007 = a015 - a013;
a005 += a005;
a002 = a015 - a005;
a013 -= a004;
a005 -= a009;
a017 = a018 - a002;
a010 += a010;
a001 = a003 - a002;
a011 += a017;
a014 += a010;
a004 = a014 + a007;
a009 += a013;
a005 = a017 + a014;
a000 = a014 + a005;
}
a015 -= a012;
a006 = a009 + a006;
a017 = a005 - a002;
a006 = a015 - a000;
a004 -= a011;
a014 -= a016;
} else {
a013 -= a013;
a014 += a001;
a004 = a012 + a012;
a017 -= a019;
a005 += cur;
a007 = a013 + a014;
a017 = a007 - a018;
a008 = a006 - a018;
cur += a013;
a015 = a000 - a016;
a018 -= a002;
a001 += a003;
a013 -= a010;
a016 -= a005;
a015 += a011;
cur -= a017;
a003 = a006 + a011;
a008 += a010;
a017 += a013;
a016 -= a017;
a016 = a017 - a010;
a011 = a008 + a019;
a000 += a002;
a004 = a003 + a016;
a009 += a018;
a005 = a000 + a001;
}
a014 += a008;
a002 -= a012;
a008 += a009;
a008 = a000 - a015;
a005 -= a002;
a018 += a018;
a017 = a004 - a010;
a005 = a010 - a019;
} else {
a019 += a008;
a018 = a005 - a013;
}
a013 += a017;
a009 += a005;
}
output.collect(prefix, new IntWritable(cur));
}
