// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a004 -= a011;
a015 += a005;
a006 = a011 - a009;
if (a018 <= a000) {
a019 = cur - a016;
a011 = a006 + a002;
a008 += a011;
a002 -= a006;
a017 -= a017;
a003 = a006 + 2;
if (a009 < a016) {
a005 = a000 - a001;
a001 = a016 - a001;
a012 = a008 - a003;
a016 -= a018;
a004 = a000 - a004;
a000 -= a017;
a004 = a019 - a013;
a011 = a004 + a016;
a001 -= cur;
a015 -= a016;
a018 = a010 - a003;
a012 -= a019;
a009 += a016;
a015 -= -2;
cur = a000 - a011;
a011 = a005 - a009;
a008 -= a000;
a010 += a018;
a013 += a013;
a005 += a000;
a016 -= a005;
a013 += a015;
a007 += a015;
} else {
a006 = a019 - a018;
a011 -= a005;
a004 = a014 - a002;
if (a015 >= a004) {
a011 += a011;
a014 = cur - a010;
a004 += a011;
a013 = a009 - a004;
a000 = -4 - a002;
a006 = a005 + a002;
a014 = a011 * 4;
a018 = a012 * 3;
a016 += a009;
a006 += a009;
a017 = -2 - a009;
a019 += a018;
a002 = a010 - a016;
a013 = a011 - a014;
cur = a018 + a011;
a003 += a007;
a002 -= a018;
a014 = cur - 2;
a002 = a016 + a004;
} else {
a002 -= a009;
a016 -= a017;
}
a012 = a005 + a014;
a019 += a000;
a015 += a003;
a010 -= a002;
a000 = a014 + a013;
a014 = a005 - a013;
a012 = a013 + a016;
a014 -= a002;
a011 = a019 + a001;
a009 += a003;
if (a015 < a003) {
a015 -= a006;
a006 -= a011;
a016 += a001;
a008 = a005 - a002;
cur -= a002;
a016 += a005;
a004 = a014 + a006;
a002 += a009;
a010 -= a002;
a005 += a015;
a013 = a006 - a000;
a004 = a013 + a019;
a004 -= a017;
a013 += a009;
a001 += a016;
a000 = a005 + a005;
a005 = a013 - a002;
a013 += a001;
a018 = a006 - -2;
a009 -= a013;
a000 = a012 - a005;
a005 = a018 + a017;
a005 -= a017;
a007 = a007 + a006;
a016 = a004 - a014;
a012 += cur;
a014 += cur;
a000 += -5;
a012 += a009;
a019 = cur + 3;
a002 += a019;
} else {
a004 = a002 - a011;
a012 += a019;
a008 -= a007;
a006 = a005 + a015;
a008 = a005 + a016;
a000 = a002 - a018;
a004 = a006 - a016;
a018 -= a014;
a007 = a011 - a009;
a009 = a005 + a019;
a011 = a018 - -1;
a007 -= a004;
cur += a010;
cur = a002 + a014;
a004 -= 3;
a011 = a013 - -5;
a008 += a005;
a001 -= a002;
}
a006 = a001 + a004;
a019 += a009;
a000 = a002 - a007;
cur = a005 - a006;
a008 = a018 + a002;
a016 = a008 - a002;
a009 -= a017;
a010 -= a017;
a010 += a006;
a002 = a008 + a011;
a014 = a012 + a004;
a011 = a011 + a011;
a018 = a000 - a005;
a006 += a018;
a004 = a016 - a003;
a003 -= a016;
a013 = a011 - a003;
a016 -= a006;
a011 = a000 + 2;
a006 += a000;
a000 += a000;
a000 = a009 + a000;
a016 = cur + a000;
cur -= a016;
a001 = a019 - a008;
}
a019 -= a002;
a018 += a013;
a004 = -1 + a016;
cur = a004 + a010;
cur -= a005;
a006 -= a014;
a018 = a003 - a011;
a008 = a016 - a012;
a014 += a011;
a001 = a005 - -2;
a003 = a005 - a001;
a015 += a005;
a009 = a006 + a007;
a001 = a007 - a005;
a005 -= a009;
a016 += a013;
a018 += a017;
a014 -= a007;
} else {
a005 = a018 - a000;
cur += a008;
a008 = a007 + a000;
a013 = a013 - a017;
a006 = a012 + a006;
a009 = 4 + a003;
a016 += a000;
a012 -= a004;
a000 = a009 + a011;
cur = a015 - a003;
a008 = a014 + a003;
a002 = a010 - a016;
}
a005 -= a003;
a013 -= a004;
a007 -= a000;
a005 -= a005;
a015 += a007;
a015 += cur;
a008 = a007 + a016;
a008 -= a015;
a000 = a011 - a019;
a001 = a017 - cur;
a008 = a001 + a016;
a000 = a019 - a018;
a018 = a009 + a005;
a014 = a015 - a015;
a004 -= -4;
a019 = a003 - a002;
a009 = 3 + cur;
a014 = a015 + a009;
a014 += 2;
a017 += cur;
a009 += a019;
a005 = a015 - a000;
a009 = a012 * -3;
a017 += -5;
a013 = a015 - a009;
a003 = a003 + a012;
a012 = cur - a000;
a010 += 4;
a007 = a016 + a013;
a019 = a006 - a011;
}
output.collect(prefix, new IntWritable(a011));
}
