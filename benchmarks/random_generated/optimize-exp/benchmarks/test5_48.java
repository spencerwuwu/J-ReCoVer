// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a008 = cur + cur;
a005 = a004 + a023;
a007 += cur;
a021 -= cur;
a015 = a000 + a020;
a010 = a012 + a016;
a019 += a012;
a022 += a012;
a019 = a015 - a000;
if (a021 >= a010) {
} else {
a013 += a023;
a004 += a005;
a024 += a013;
a019 = a005 - a021;
cur = a019 + a002;
cur = a022 + a007;
a003 += a021;
a023 -= a019;
if (a003 > a009) {
a010 = a013 + a019;
a010 = a000 + a016;
a005 -= a001;
a006 = a004 + a017;
a001 -= a000;
a006 += a006;
a000 = a016 - a009;
a014 = a020 - a008;
a018 = a022 - a003;
a012 = a013 - a019;
a010 += a003;
a004 -= a024;
a001 = a008 - a003;
a009 += a015;
a017 = a019 - a007;
a014 += -1;
a011 += a007;
a024 = a015 - a000;
a015 -= a002;
a002 += a012;
a010 -= a014;
a006 = a005 + a022;
a003 += a024;
if (a023 != a006) {
a001 -= a015;
a022 += a016;
a021 -= a024;
a009 -= a023;
a020 = a006 + a015;
a016 = a010 - a010;
a002 = a003 + a014;
a006 = a020 + a000;
a006 = a017 + a004;
a010 += a021;
a017 = a018 + a001;
a013 = a022 + a005;
a003 = a004 + a008;
cur -= a001;
a010 = a019 - a020;
a012 += a011;
a002 = a019 + a005;
a003 -= a004;
a001 += a001;
a023 -= a015;
a017 = a004 + a020;
a005 = a004 - a020;
a007 += a019;
a000 += a001;
a011 = a017 - a000;
if (a020 == a015) {
if (a019 != a008) {
a014 += a008;
a019 = a022 - a008;
a021 -= a009;
a021 += a000;
a019 -= a007;
a009 -= a000;
a009 = a003 + a012;
a014 -= a000;
a004 = a024 - a020;
a023 = a023 - a024;
a020 += a004;
a009 = a018 - a007;
cur = a019 + a022;
a007 += a013;
a005 = a011 * -5;
a015 = a008 - a005;
} else {
a015 -= a013;
a014 -= a015;
a019 += a008;
a002 = a012 + a021;
a019 += a019;
a021 -= a017;
}
a006 = a009 - a012;
a012 = a002 - a011;
a021 += a021;
a011 -= a015;
a013 -= a014;
a016 += -3;
} else {
cur -= a020;
a009 = a008 + cur;
a014 += a001;
cur -= a017;
cur = a016 - a004;
a023 += a004;
a003 += a021;
a015 += a002;
a005 -= a003;
a007 = a020 + a024;
a022 += a013;
cur -= a020;
a000 = 4 - a003;
a018 = a005 + a000;
a001 -= a001;
a024 += a022;
a000 += a007;
a012 = a003 - a008;
a020 += cur;
a001 += a011;
a010 = a003 * 2;
a008 += a020;
a006 = a014 * -3;
a005 -= a014;
a022 += a003;
a023 = a000 - a001;
a012 = a020 + a013;
a017 = a000 + a003;
a013 -= a001;
a013 = a014 - a015;
}
a014 = a010 + cur;
a015 -= a004;
a013 -= a006;
cur = a016 + cur;
a016 += a012;
a017 -= a009;
a008 = a006 - cur;
a004 = a021 - a007;
a017 += a022;
a023 -= a017;
a000 = a019 - a010;
a006 = a016 - a011;
a020 = a001 - a021;
a003 -= a011;
a004 = a013 + a006;
a008 -= a013;
a020 -= a010;
a007 -= a019;
a007 += a008;
a005 -= a006;
a019 -= a013;
a010 = a006 * -4;
} else {
a004 = a014 - a002;
a002 += a018;
a006 = a024 + a012;
a015 = a015 - a013;
a002 = a015 - a024;
a019 += a015;
a004 = cur - a014;
a004 = a003 - a018;
a011 = cur - a011;
a011 = a018 + a012;
a021 = a000 - 2;
a022 = cur - a018;
a024 -= a019;
a001 = 0 - a012;
a006 -= a001;
a013 = a006 + a021;
cur = a008 - a020;
a001 = a015 - a010;
a005 = a000 - a006;
a021 += a018;
}
a011 = a023 + a011;
a005 += a023;
a012 += a006;
a001 = a020 - a006;
a008 = a020 + a010;
a022 += a013;
a003 = cur + a002;
a001 += a005;
a009 = a013 + a017;
a019 -= cur;
a007 += a008;
a008 = a008 - a006;
a000 = a023 - a014;
a015 += a017;
a013 += a001;
a019 += a011;
a005 = -5 + a021;
a018 -= a019;
a006 = a012 - a021;
a023 = a021 + a006;
a024 += a020;
a005 -= a018;
a012 = a001 + a023;
a011 += a005;
a004 = a001 - a017;
a000 += a014;
} else {
a017 += a003;
}
a001 -= a017;
a021 = a011 - a000;
a024 -= a001;
a024 = a004 + a024;
a008 = a016 + a020;
a015 = a018 + a000;
a013 = 0 + a008;
a024 = a013 - a021;
a021 = a014 - a004;
a020 = a010 - a004;
}
a011 = a004 - a007;
a004 -= a010;
a020 = a004 + a001;
a016 = a004 + a007;
a013 = a022 + a016;
a009 = a023 - cur;
a012 = a008 - a004;
a019 += a002;
a015 -= a014;
a005 += a018;
a016 = a020 - a020;
a024 -= a020;
a016 += cur;
a005 -= a020;
a007 = a011 - a004;
a024 += a021;
a019 += a004;
a009 = a004 - a012;
a007 += a013;
a003 -= a016;
a005 -= a011;
a018 = a004 - a006;
a005 = a002 + a006;
a004 = a011 - a020;
a014 = a023 + cur;
a004 -= a017;
a006 = a015 + a017;
a020 = a023 - a007;
a000 -= a000;
a004 = a017 - -5;
cur = a018 - a016;
a018 = a002 - a017;
a016 = a008 + a024;
a024 = a023 + a005;
a002 += a017;
a003 = a022 - a012;
a023 = a007 - a006;
a011 -= a021;
a020 = a020 - 1;
a005 += a016;
a000 -= a007;
a001 = a004 + a013;
a016 = a002 + cur;
a015 = a006 - a011;
a024 = a014 + a017;
a000 = a009 - a015;
a021 = a015 - a019;
a013 = a007 - a002;
}
output.collect(prefix, new IntWritable(a014));
}
