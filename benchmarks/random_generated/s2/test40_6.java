// Note: only +, - operations
// Parameters:
//   Variables:   40
//   Baselines:   400
//   If-Branches: 40

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int a025 = 0;
int a026 = 0;
int a027 = 0;
int a028 = 0;
int a029 = 0;
int a030 = 0;
int a031 = 0;
int a032 = 0;
int a033 = 0;
int a034 = 0;
int a035 = 0;
int a036 = 0;
int a037 = 0;
int a038 = 0;
int a039 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a035 += a017;
a027 -= a014;
a001 = a007 + cur;
if (a030 == a017) {
a029 -= 1;
a037 = a017 + a006;
a026 = a005 - a038;
a012 += a029;
if (a022 >= a024) {
a037 = a009 + a012;
a020 = a037 + a033;
a031 -= a009;
a034 = a021 - a019;
a002 = a001 + a001;
a001 -= a019;
a023 -= a033;
} else {
a006 += a034;
a023 += a034;
a001 = a027 + a004;
if (a012 >= a007) {
a013 -= a010;
a025 = a025 - a003;
a033 = a020 - -3;
a028 += a035;
a015 = a009 - a020;
} else {
a014 -= a000;
a026 = a019 + a016;
if (a007 <= a010) {
a031 -= a015;
a014 += a017;
a030 += a010;
a023 -= a025;
a016 = a005 - a024;
a033 = a004 + a011;
cur = a000 * 3;
} else {
a029 = a018 - a002;
a035 = a004 + a001;
a000 = a027 - a029;
a015 = a032 + a009;
a000 -= a002;
a020 = a017 + a032;
a003 += a020;
}
a038 = a034 + a000;
a035 += a010;
a006 = a003 - a006;
}
a021 += a012;
a011 = a038 - a011;
a003 = a027 - a037;
a013 = a002 - a034;
}
a028 = a006 * -1;
if (a034 >= a024) {
a002 -= a008;
a030 = a001 - a028;
a025 = a034 - a017;
a018 += a027;
a010 -= a003;
a029 = a035 - a009;
a004 += a031;
} else {
a035 = a035 + a008;
a001 = a010 - a034;
a018 += a031;
a012 -= a003;
a001 += a016;
a031 -= a022;
a015 = a013 - a005;
if (a016 != a009) {
a015 = a019 - a029;
a007 += a012;
a030 = a011 + a023;
a016 += a020;
a020 = a005 + a019;
a000 = a010 + a022;
if (a010 <= a031) {
a027 += a007;
a017 += a032;
a006 = a014 - a016;
} else {
a032 = a012 + a022;
}
a016 += a037;
a018 += a004;
a015 += a032;
} else {
a025 = a039 - a007;
a018 = a006 - a036;
a022 = cur + a028;
a013 -= a030;
a013 = a023 - a031;
a002 = a002 - a026;
a019 -= a003;
if (a001 <= a008) {
a019 -= a002;
a023 = a009 + a010;
a027 = a012 - a004;
a035 -= a009;
a014 = a004 * -4;
a022 += a018;
if (a028 == a037) {
a034 = 3 - a034;
a006 += a012;
a024 -= a016;
a032 = a018 - a024;
a028 += a013;
a006 = a009 + a011;
if (a033 <= a007) {
a026 += a013;
a030 += a011;
a033 = a000 + a011;
a023 -= a000;
a012 += a039;
if (a000 < a010) {
a039 -= a034;
a009 -= a018;
if (a023 <= a029) {
a012 -= a012;
} else {
a011 = a028 + a037;
cur += a027;
a016 += a003;
a011 -= a022;
a036 += a002;
}
a020 += a010;
a028 -= a022;
if (a033 != a008) {
a004 = a025 + a003;
a035 = a026 + a029;
a030 += a004;
a003 -= a029;
} else {
}
a039 += a024;
a012 += a026;
} else {
a026 = a004 - a011;
a019 = a003 - a018;
a029 = a005 - a006;
a024 = a036 + a031;
a024 -= a006;
a010 = a019 - a027;
a016 = a016 + a031;
}
a039 = a025 - a028;
a036 = a031 - a007;
a023 = a001 + a023;
if (a024 == a015) {
a023 = a021 + a022;
a021 -= a020;
a018 = a027 - a019;
a037 -= a003;
} else {
a026 += a036;
}
a003 -= a006;
a023 = a006 - a024;
if (a003 == a002) {
a036 = a038 - a038;
a025 = a019 - a019;
} else {
a035 = a030 - cur;
a002 = a008 - a001;
if (a021 == a007) {
a005 = a004 + a029;
a039 -= a017;
a032 -= -4;
a038 += a021;
a004 = a019 - a034;
} else {
a002 -= a013;
}
a028 = a030 * 2;
a036 = a019 - a038;
a001 = a007 - a037;
a018 = a001 + a021;
if (a029 >= cur) {
a036 = a003 - a027;
} else {
a034 = a003 + a019;
a007 += a012;
a014 = a015 - a038;
a016 += a014;
a038 = a018 + cur;
a013 += a031;
a025 += a038;
}
a018 += a016;
a000 += a012;
a027 += a012;
}
a003 = a012 + a017;
a028 = a013 + a002;
a032 += a028;
a035 = a033 + a025;
a031 -= a039;
a013 -= a022;
a004 -= a001;
if (a038 == a035) {
a018 += a030;
a039 = a011 + a023;
a001 = a039 + a006;
a010 = a003 - a017;
a021 -= a003;
a039 = a033 - a015;
} else {
a025 = a017 - a026;
a032 = a016 - a035;
a032 -= a011;
}
a038 = a030 - a016;
a022 -= a024;
} else {
if (a029 < a025) {
a027 += a032;
cur -= a011;
a015 = a038 + a018;
a031 = a027 + a031;
} else {
a036 += a013;
a019 = a024 + a036;
a024 += a022;
a031 = a018 + a039;
a019 = a035 + a021;
a006 = a012 - a017;
if (a034 > a007) {
a031 -= a039;
a038 -= a012;
if (a019 < cur) {
a030 = a031 - a010;
a038 = a007 + a030;
a002 = a031 + a023;
a011 -= a017;
a007 = a002 + a029;
a000 = a015 + a025;
a024 -= a030;
if (a030 != a039) {
if (a029 == a007) {
a011 -= a027;
a015 = a006 - a000;
a018 = a004 + a037;
a033 -= a006;
} else {
a024 += a032;
a006 += a019;
a019 -= a000;
a000 -= a030;
if (a009 > a024) {
a029 += a018;
a035 += a025;
a018 = a003 + cur;
cur = a016 + 0;
} else {
a006 += a005;
}
}
a036 += a026;
a026 = a005 + a018;
a002 = a023 + a014;
a022 -= a027;
a023 -= a017;
a021 = a003 - a015;
a038 = a028 - a020;
} else {
a036 += a010;
}
a031 += a032;
if (a033 >= a026) {
a031 = a004 + a026;
a005 = a005 - a006;
a004 -= a005;
} else {
a031 -= a017;
a024 = a008 + a034;
a022 += a027;
}
a027 = a038 - -2;
a023 = a016 - a032;
} else {
a032 += a024;
a037 -= a020;
a004 = a013 - a034;
a027 = a007 + cur;
if (a006 >= a012) {
a011 = cur + a018;
a028 += a012;
a012 = a027 - a004;
a009 -= a039;
a006 = a034 - a022;
a015 += a034;
if (a001 >= a026) {
} else {
a033 -= a024;
a003 -= a002;
a002 = cur - a019;
if (a008 == a038) {
a010 += a012;
a039 -= cur;
} else {
a025 = a000 + a023;
a031 += a006;
if (a009 != a009) {
a000 -= a020;
a001 += a008;
a024 = a009 + a006;
a032 += a017;
a029 -= a038;
a031 = a025 - a005;
a032 += a038;
if (a003 >= a037) {
a001 = a006 + a021;
a018 -= a035;
a037 = a008 - a024;
if (a017 <= a005) {
a004 = a008 - a003;
} else {
a024 = a036 + cur;
a021 = a008 - a036;
a006 = a011 - a023;
a019 = a012 + a004;
a034 -= a002;
if (a025 > a029) {
a030 = -1 - a006;
a038 += a030;
a010 = a039 + a017;
if (a015 > a028) {
a009 -= a019;
a025 = a005 - a022;
a036 = a006 + a010;
a033 = a000 - a006;
a003 += a010;
a030 += a009;
if (a031 < a005) {
a005 -= a027;
a035 += a033;
a037 += a029;
} else {
a015 = a033 - a014;
a023 = a027 + a003;
a038 += a019;
a032 = a029 + a031;
a025 += a011;
a034 += a028;
a004 = a019 - cur;
if (a021 > a032) {
a011 = 3 - a025;
a013 -= a001;
a032 = a025 - a013;
a008 += a023;
} else {
a016 = a030 - a034;
a037 += a037;
a002 = a016 - a000;
a036 = a029 - a037;
a034 += a037;
a013 += a022;
if (a000 < a004) {
a021 -= a026;
if (a001 != a023) {
a023 += a030;
a036 += a031;
a007 += a033;
cur -= a006;
a024 = a000 - a007;
a000 = a038 - a003;
a027 += a010;
} else {
a030 = a017 - a038;
if (a012 > a000) {
a018 -= a025;
a006 += a028;
} else {
a018 = a021 - a036;
if (a025 == a014) {
a000 = a000 - a014;
if (a029 < a016) {
a016 = a032 - a029;
a027 = a028 + a004;
} else {
}
} else {
a007 += a015;
a001 -= a034;
a031 = cur + a016;
a025 -= a036;
}
a001 += a021;
a005 = a001 + a013;
a005 = a004 - a037;
a028 = a006 - a023;
}
a035 = a005 - a017;
a000 -= a018;
a008 += a003;
a035 += a003;
a016 += a008;
a019 = a013 + a028;
a020 -= a039;
}
a004 = a005 - a022;
a028 = a016 + a005;
a009 -= a023;
} else {
a031 = a028 - a023;
a026 -= a004;
a002 = a008 + a016;
cur = a017 + a034;
a032 = a008 - a008;
a008 = a015 * -2;
}
}
a014 = cur + a010;
a011 -= a034;
a033 = a033 - a002;
a020 -= a038;
a025 -= a005;
a010 = a017 + a039;
a007 -= a024;
}
} else {
a023 += a006;
a008 = a030 - a005;
a022 = a032 + a007;
}
} else {
a021 = a005 + a000;
a004 -= a022;
a010 = -3 - a033;
a022 = a038 - a030;
a031 -= a035;
}
a028 -= a028;
}
a000 = a016 - a007;
} else {
a007 = a025 - a036;
a003 += a029;
a000 -= a031;
}
a016 = 4 - a035;
a018 += a015;
a038 -= a029;
a020 += a004;
a007 = a028 - a018;
a033 -= a000;
} else {
}
a012 -= a015;
a026 = a012 + a017;
a034 = a021 - a015;
a005 += a001;
a009 -= cur;
a010 -= a029;
}
a026 -= a018;
a008 = a033 - a016;
a039 -= a011;
a021 += 1;
}
a001 -= a000;
a002 -= a018;
a004 = a024 - a030;
a019 = a023 - a016;
} else {
a036 = a022 - a012;
a030 = a002 - a012;
a007 = a021 + a013;
}
a005 -= a018;
a026 -= a020;
a030 += a008;
a018 -= a033;
a037 += a038;
a022 -= a032;
}
a011 = a035 - a005;
a030 += a021;
a018 -= a029;
cur = a028 + a022;
a015 += a027;
a027 = a032 + -5;
} else {
a039 += a012;
a030 -= a038;
a005 = a032 + a035;
a032 += a012;
a012 -= a022;
}
a018 += a030;
a024 += a029;
a018 += a006;
a039 = a039 + a024;
}
a030 += a027;
a034 += a021;
a039 = a012 + -5;
a020 = a034 * 4;
a020 = a028 - a001;
a000 -= a012;
a019 = a039 - a038;
}
cur = a006 - a008;
a000 += a011;
a015 -= a006;
a013 = a001 - a010;
a010 += a002;
} else {
}
} else {
}
}
}
} else {
}
a019 -= a010;
}
output.collect(prefix, new IntWritable(a020));
}
