// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a000 += a011;
a007 -= a012;
a000 = a003 - a009;
a006 = a009 - a000;
cur = a005 + a004;
a014 -= 0;
a012 = a003 + a002;
a018 = a000 - a003;
a013 = a012 - a010;
a004 = a019 + a017;
if (a015 >= a005) {
a017 = a010 + a013;
a000 += a008;
a012 = a001 - a014;
a017 = a001 - a016;
a005 -= a010;
a009 += a019;
a002 += a011;
a010 = a016 - a016;
} else {
a007 += a008;
cur = a001 + a014;
a016 = a016 - a018;
a018 -= a013;
a012 = a006 + a017;
a016 += cur;
a009 = a017 + a003;
a007 += a016;
a006 -= a018;
a002 = a012 - a015;
a000 = a018 - a009;
a004 = cur - a013;
a000 = a019 + a008;
a019 = a017 + a018;
a015 = a000 - a004;
a014 -= -2;
a002 = a005 + a000;
a012 = a006 - a007;
a016 += a018;
a005 -= a005;
}
a018 -= a002;
a009 = a005 + a018;
a012 = a003 - a018;
a004 = a015 + a000;
a009 = a015 + -1;
a002 = a000 + a014;
a002 += a016;
a001 = a009 - a010;
a006 = a004 + a007;
a004 = a009 + a014;
a004 = a017 - a011;
a011 += a019;
a003 += a001;
a004 = a015 * 3;
cur -= a012;
a001 -= a002;
a007 = a016 - 4;
a011 += a001;
a018 = a018 + a014;
a019 += a000;
a012 += a009;
a006 = a009 - a001;
a005 -= a018;
a012 += a019;
a014 = a006 - a019;
a011 = a007 - a014;
if (a017 == a016) {
cur -= a006;
a001 -= a005;
a016 = a004 - a007;
a005 = a006 - a019;
a008 = a000 - -5;
a003 = a015 - cur;
a017 = a015 + 1;
a001 -= a005;
if (a015 != a003) {
a002 = a006 + a019;
a013 += a004;
a017 -= a006;
a015 = a005 - a008;
a012 = a019 - a010;
a002 = a007 + 2;
a018 = a003 - cur;
a018 -= a004;
a007 -= a003;
a002 = a013 + a003;
a018 -= a006;
if (a000 == a014) {
a003 -= a005;
a013 = a017 - a019;
a018 += a019;
cur = a014 - a016;
cur = -5 - a012;
a007 = a019 - a014;
a007 = a016 + a018;
a014 = a008 - a004;
a019 = a013 - a000;
a015 -= a018;
a004 -= a017;
a012 = a003 + a016;
a006 = a001 + a010;
a001 += a007;
a010 = a008 + a014;
a006 -= a017;
a006 = a004 + a003;
a013 += a003;
a016 = a000 - a006;
a000 = a015 - a019;
a001 = a003 - a017;
} else {
a016 -= a014;
a002 = cur - a003;
a016 = a000 + a013;
a007 = a005 - a008;
a008 += a000;
a010 = a014 + 2;
a002 += a005;
a016 -= a009;
a003 = a004 + a013;
a017 = cur + a006;
a008 += a017;
a001 = a002 - a006;
a015 -= a010;
a002 = a015 + a019;
a011 += a007;
a013 += a015;
a018 = a007 + a018;
a001 = a012 - a016;
a009 += a017;
a014 = a000 - 2;
a004 = a015 + a001;
a019 = a013 - a008;
a000 = a012 - a008;
a000 = a004 - a018;
a006 = a003 + a009;
a002 = a012 + a012;
}
a000 = cur - a007;
a019 = a005 + a006;
} else {
a002 = a011 + a010;
a001 = a003 + a009;
a013 -= a011;
a006 -= a004;
a001 = a003 - a003;
a019 -= cur;
a012 -= a019;
a014 -= a017;
}
a011 += a002;
a009 = a006 - a013;
a006 += -5;
a011 -= a001;
a016 = a000 - a003;
cur += a009;
a004 += a016;
a018 += a009;
a015 = a002 + a014;
a000 += a019;
a003 -= a004;
a004 -= a012;
a010 += a013;
a013 = a011 + -3;
a016 += a003;
a008 = a002 + a008;
a016 += cur;
a016 -= a017;
a009 = a013 - cur;
a003 -= a004;
a004 -= a002;
a015 += a015;
a008 = a014 + a006;
a012 = a019 - a011;
a015 += a006;
a018 -= a002;
a014 += cur;
a009 -= a017;
} else {
a004 = a002 + a009;
a011 -= a009;
a006 = a010 + a011;
a009 = a000 + a006;
a002 = a006 - a000;
a004 += a018;
a016 = a013 + a005;
a017 += a013;
a005 = a004 - a019;
a012 = a007 + a015;
a004 = a004 - a018;
a000 += a005;
a005 = a001 - a001;
a005 = a008 + a005;
a007 -= a019;
a005 = a016 - a018;
cur -= a002;
a017 = a002 - a018;
a003 -= a000;
cur = a005 - a012;
a003 = a005 * -5;
a012 = a018 + a012;
cur = a012 + a015;
a008 = a009 - a005;
a009 -= a016;
a004 += a009;
}
a018 = a008 + a000;
a014 = cur + a018;
a014 += cur;
cur = -2 - a007;
a010 += a015;
a004 -= a010;
}
output.collect(prefix, new IntWritable(a008));
}
