// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a024 = a018 + a010;
a016 -= a010;
a008 = a001 - a013;
a001 = a017 + a020;
a020 = a001 + a002;
a020 = a002 - a016;
a015 -= a017;
a024 = a020 - cur;
a024 = a011 + a010;
a003 += a018;
a002 += a021;
a000 += a007;
a022 -= -1;
a009 = a019 - a004;
a004 += a012;
a022 = a013 + -5;
a020 = a024 + a002;
a010 += a019;
a000 -= a010;
a011 += a019;
a019 += a006;
a022 = a008 + a000;
a007 = a024 + cur;
a000 -= a000;
a010 = a024 + a015;
a001 += a021;
a024 += cur;
a011 -= a005;
a014 = a008 - a013;
a022 -= a020;
a007 += a005;
a010 = a016 - a020;
if (a009 > a021) {
a002 = a021 + a000;
a017 += a012;
a012 = a016 + a014;
a024 = a022 + a009;
a013 = a011 + a012;
cur += a017;
a017 = a016 - a007;
a008 = a003 + a018;
a021 += a018;
a000 -= cur;
a015 -= a020;
a018 = a021 - a010;
a001 -= a002;
a006 += a002;
a012 += a006;
a012 -= a021;
a008 = a013 - a019;
a016 = a022 - a005;
a017 -= a012;
a019 += a010;
a006 = a009 - a012;
a021 = a006 - a022;
a014 -= a021;
a006 = a009 - a021;
} else {
a017 = a014 + a002;
a000 = a008 - a006;
a020 += a010;
a013 = a020 + a017;
a023 = a005 - a001;
a009 += a022;
a011 = a020 - a012;
a007 = a000 - a003;
a012 += a018;
a008 = a014 + a022;
a024 = a011 - a006;
a007 = a016 - a005;
a022 = a021 - a007;
a009 += a022;
a022 = a018 - a006;
a013 = a008 - a000;
a013 = a023 + a005;
a005 += a004;
a005 += a020;
a015 += a021;
a003 = a009 + a010;
if (a009 < a002) {
a017 = a007 - a001;
a018 += a020;
a021 = a010 + a017;
a022 = a009 - a008;
a014 = a008 + a012;
a003 -= a010;
a010 -= a001;
a002 += a012;
} else {
a004 = a002 - a012;
a024 += a022;
a008 -= a018;
a007 += a024;
a003 = a020 + a018;
a018 = a014 + a020;
a004 -= a022;
a013 = a022 - a013;
a017 += a006;
a016 = a009 - a011;
a014 = a016 + a022;
a001 = a008 - a017;
a016 = a021 + a017;
a024 = a018 - a023;
a012 = cur - a002;
}
a000 = a007 + -3;
a024 = a019 - a014;
cur += a022;
}
a013 = a012 - a000;
a019 -= a007;
a022 = a015 + -2;
a021 = a012 + a009;
a022 = a019 - a005;
a015 = 0 - a003;
a024 -= a024;
a015 += a011;
a004 = a010 - a016;
a018 += a003;
a007 += a000;
a011 += a020;
a013 = a016 - a003;
a009 = a008 - a014;
a014 += a010;
cur = a015 + a009;
a005 += a007;
a015 = a024 * -5;
a011 += a016;
a000 = a018 - a010;
a019 = a024 - a011;
a024 = a001 + a000;
a009 += a006;
a021 = a014 - a009;
a009 += a003;
a009 = a010 - a004;
a013 -= a005;
if (a005 < a019) {
a003 = a014 + 0;
a015 -= a017;
a008 = a023 - a006;
a024 = a017 - a006;
if (a010 >= a016) {
a014 = a004 - -5;
a001 = cur - a010;
a003 += a004;
a012 = a008 - a023;
a013 = a015 - a002;
a024 += a019;
a008 -= a003;
a016 += a014;
a007 = a016 - a024;
a014 -= a005;
a017 -= a009;
a002 += a020;
a012 = -3 + a008;
a007 = a001 + a003;
cur -= a015;
a005 -= a000;
a001 += a010;
a009 -= a021;
a022 = a015 - a003;
a023 = cur - a002;
a008 = a018 - a000;
a000 -= 3;
if (a006 >= a002) {
a007 = -2 - a001;
a011 -= a023;
a022 -= a004;
a024 -= a008;
a017 = a004 + a017;
a006 += a005;
a024 -= cur;
a008 = a001 - a024;
a023 -= a004;
a017 -= a000;
a019 += a024;
cur = a014 - a002;
a003 -= a005;
a000 = a016 + a011;
a010 = a021 - -4;
a002 = a004 + a009;
a013 = a006 - a000;
a002 -= a024;
} else {
a012 = -5 - a022;
a000 = a018 + a021;
a020 -= a002;
}
a021 = a017 - a017;
a008 -= a008;
cur += a013;
a007 -= a019;
a006 = a006 + a012;
a024 -= a012;
a016 += a020;
a018 = a014 + a000;
} else {
a000 -= a002;
a021 = a012 + a015;
}
a003 = a024 + a007;
a020 = a007 - cur;
a017 -= a023;
a024 = -1 + a016;
a023 = a009 - a003;
a015 += a008;
a017 = a008 + a014;
a015 = a016 + a001;
a013 = a011 - a014;
a013 = a009 - a007;
a021 = a021 + a015;
a008 -= a005;
a024 = a005 - a007;
} else {
a005 += a016;
a022 = a000 + a011;
a022 = a002 - a008;
a020 += a012;
a004 = a015 + a010;
a009 = a015 + a006;
a024 = a000 - a002;
a009 = a001 - a012;
a020 = a020 - -2;
a003 = a021 - a018;
a021 = a017 - a023;
a021 += a015;
a016 = a016 + a005;
a018 += a009;
}
a014 = a002 - a022;
a006 -= a002;
a014 -= a019;
a020 = a009 + a006;
a000 -= a010;
cur -= a019;
a021 -= a017;
a007 -= a004;
a001 += a011;
a005 = a010 - a021;
a010 += cur;
a022 = a000 - a023;
a023 = a011 + a011;
a005 -= a012;
a006 += a021;
a009 -= a014;
a020 -= a004;
a003 -= a011;
a011 = a005 + a005;
a000 = a021 + a009;
a007 = a010 - a017;
a019 += a024;
a023 += a020;
a022 = a007 - a006;
a022 = a024 + a017;
a000 = a012 * -4;
a014 = cur - a016;
a004 -= a013;
a013 = a000 + cur;
a017 = a002 + a018;
a018 = a023 + a011;
a006 += -1;
a002 -= -5;
a006 = a003 + a004;
a009 = a014 + a023;
cur -= a019;
}
output.collect(prefix, new IntWritable(a018));
}
