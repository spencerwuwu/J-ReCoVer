// https://searchcode.com/api/result/100632805/

/* This file was generated by SableCC (http://www.sablecc.org/). */

package parser;

import lexer.*;
import node.*;
import analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

@SuppressWarnings("nls")
public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList<Object> nodeList;

    private final Lexer lexer;
    private final ListIterator<Object> stack = new LinkedList<Object>().listIterator();
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(@SuppressWarnings("hiding") Lexer lexer)
    {
        this.lexer = lexer;
    }

    protected void filter() throws ParserException, LexerException, IOException
    {
        // Empty body
    }

    private void push(int numstate, ArrayList<Object> listNode, boolean hidden) throws ParserException, LexerException, IOException
    {
        this.nodeList = listNode;

        if(!hidden)
        {
            filter();
        }

        if(!this.stack.hasNext())
        {
            this.stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) this.stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            // int middle = (low + high) / 2;
            int middle = (low + high) >>> 1;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) this.stack.previous();
        this.stack.next();
        return s.state;
    }

    private ArrayList<Object> pop()
    {
        return ((State) this.stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        this.converter.index = -1;
        token.apply(this.converter);
        return this.converter.index;
    }

    @SuppressWarnings("unchecked")
    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null, true);
        List<Node> ign = null;
        while(true)
        {
            while(index(this.lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new LinkedList<Node>();
                }

                ign.add(this.lexer.next());
            }

            if(ign != null)
            {
                this.ignoredTokens.setIn(this.lexer.peek(), ign);
                ign = null;
            }

            this.last_pos = this.lexer.peek().getPos();
            this.last_line = this.lexer.peek().getLine();
            this.last_token = this.lexer.peek();

            int index = index(this.lexer.peek());
            this.action[0] = Parser.actionTable[state()][0][1];
            this.action[1] = Parser.actionTable[state()][0][2];

            int low = 1;
            int high = Parser.actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < Parser.actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > Parser.actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    this.action[0] = Parser.actionTable[state()][middle][1];
                    this.action[1] = Parser.actionTable[state()][middle][2];
                    break;
                }
            }

            switch(this.action[0])
            {
                case SHIFT:
		    {
		        ArrayList<Object> list = new ArrayList<Object>();
		        list.add(this.lexer.next());
                        push(this.action[1], list, false);
                    }
		    break;
                case REDUCE:
                    {
                        int reduction = this.action[1];
                        if(reduction < 500) reduce_0(reduction);
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) this.lexer.next();
                        PPrograma node1 = (PPrograma) pop().get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(this.last_token,
                        "[" + this.last_line + "," + this.last_pos + "] " +
                        Parser.errorMessages[Parser.errors[this.action[1]]]);
            }
        }
    }

    private void reduce_0(int reduction) throws IOException, LexerException, ParserException
    {
        switch(reduction)
        {
            case 0: /* reduce ACabecalhoPrograma */
            {
                ArrayList<Object> list = new0();
                push(goTo(0), list, false);
            }
            break;
            case 1: /* reduce AVariaveisDeclaracao */
            {
                ArrayList<Object> list = new1();
                push(goTo(1), list, false);
            }
            break;
            case 2: /* reduce AConstantesDeclaracao */
            {
                ArrayList<Object> list = new2();
                push(goTo(1), list, false);
            }
            break;
            case 3: /* reduce AVazioDeclaracao */
            {
                ArrayList<Object> list = new3();
                push(goTo(1), list, false);
            }
            break;
            case 4: /* reduce AInteiroTipo */
            {
                ArrayList<Object> list = new4();
                push(goTo(2), list, false);
            }
            break;
            case 5: /* reduce ARealTipo */
            {
                ArrayList<Object> list = new5();
                push(goTo(2), list, false);
            }
            break;
            case 6: /* reduce ACaractereTipo */
            {
                ArrayList<Object> list = new6();
                push(goTo(2), list, false);
            }
            break;
            case 7: /* reduce AListaVariaveisEscorpo */
            {
                ArrayList<Object> list = new7();
                push(goTo(3), list, false);
            }
            break;
            case 8: /* reduce AVariavelEscorpo */
            {
                ArrayList<Object> list = new8();
                push(goTo(3), list, false);
            }
            break;
            case 9: /* reduce AVetorVariavel */
            {
                ArrayList<Object> list = new9();
                push(goTo(4), list, false);
            }
            break;
            case 10: /* reduce AVariavelVariavel */
            {
                ArrayList<Object> list = new10();
                push(goTo(4), list, false);
            }
            break;
            case 11: /* reduce ASeSenaoComando */
            {
                ArrayList<Object> list = new11();
                push(goTo(5), list, false);
            }
            break;
            case 12: /* reduce AVazioComando */
            {
                ArrayList<Object> list = new12();
                push(goTo(5), list, false);
            }
            break;
            case 13: /* reduce ASeBlocoSeBloco */
            {
                ArrayList<Object> list = new13();
                push(goTo(6), list, false);
            }
            break;
            case 14: /* reduce ASenaoBlocoSenaoBloco */
            {
                ArrayList<Object> list = new14();
                push(goTo(7), list, false);
            }
            break;
            case 15: /* reduce AVazioSenaoBloco */
            {
                ArrayList<Object> list = new15();
                push(goTo(7), list, false);
            }
            break;
            case 16: /* reduce ANumeroNegativoExpAritimetrica */
            {
                ArrayList<Object> list = new16();
                push(goTo(8), list, false);
            }
            break;
            case 17: /* reduce AAdicaoSubtracaoExpAritimetrica */
            {
                ArrayList<Object> list = new17();
                push(goTo(8), list, false);
            }
            break;
            case 18: /* reduce ATermoExpAritimetrica */
            {
                ArrayList<Object> list = new18();
                push(goTo(8), list, false);
            }
            break;
            case 19: /* reduce AAdicaoSoma */
            {
                ArrayList<Object> list = new19();
                push(goTo(9), list, false);
            }
            break;
            case 20: /* reduce ASubtracaoSoma */
            {
                ArrayList<Object> list = new20();
                push(goTo(9), list, false);
            }
            break;
            case 21: /* reduce AMultiplicacaoDivisaoTermo */
            {
                ArrayList<Object> list = new21();
                push(goTo(10), list, false);
            }
            break;
            case 22: /* reduce AFatorTermo */
            {
                ArrayList<Object> list = new22();
                push(goTo(10), list, false);
            }
            break;
            case 23: /* reduce AMultiplicacaoMult */
            {
                ArrayList<Object> list = new23();
                push(goTo(11), list, false);
            }
            break;
            case 24: /* reduce ADivisaoMult */
            {
                ArrayList<Object> list = new24();
                push(goTo(11), list, false);
            }
            break;
            case 25: /* reduce AExpParentesesFator */
            {
                ArrayList<Object> list = new25();
                push(goTo(12), list, false);
            }
            break;
            case 26: /* reduce AElementoFator */
            {
                ArrayList<Object> list = new26();
                push(goTo(12), list, false);
            }
            break;
            case 27: /* reduce AOuLogicoExpLogica */
            {
                ArrayList<Object> list = new27();
                push(goTo(13), list, false);
            }
            break;
            case 28: /* reduce AExpXouExpLogica */
            {
                ArrayList<Object> list = new28();
                push(goTo(13), list, false);
            }
            break;
            case 29: /* reduce AOuxLogicoExpXou */
            {
                ArrayList<Object> list = new29();
                push(goTo(14), list, false);
            }
            break;
            case 30: /* reduce AExpEExpXou */
            {
                ArrayList<Object> list = new30();
                push(goTo(14), list, false);
            }
            break;
            case 31: /* reduce AELogicoExpE */
            {
                ArrayList<Object> list = new31();
                push(goTo(15), list, false);
            }
            break;
            case 32: /* reduce AExpNaoExpE */
            {
                ArrayList<Object> list = new32();
                push(goTo(15), list, false);
            }
            break;
            case 33: /* reduce ANaoLogicoExpNao */
            {
                ArrayList<Object> list = new33();
                push(goTo(16), list, false);
            }
            break;
            case 34: /* reduce ATermoLogicoExpNao */
            {
                ArrayList<Object> list = new34();
                push(goTo(16), list, false);
            }
            break;
            case 35: /* reduce AParentesesLogicoTermoLogico */
            {
                ArrayList<Object> list = new35();
                push(goTo(17), list, false);
            }
            break;
            case 36: /* reduce AParentesesComparacaoTermoLogico */
            {
                ArrayList<Object> list = new36();
                push(goTo(17), list, false);
            }
            break;
            case 37: /* reduce AIgualDiferente1ExpComparativa */
            {
                ArrayList<Object> list = new37();
                push(goTo(18), list, false);
            }
            break;
            case 38: /* reduce AMenorMaiorExpComparativa */
            {
                ArrayList<Object> list = new38();
                push(goTo(18), list, false);
            }
            break;
            case 39: /* reduce AIgualSimbolo1 */
            {
                ArrayList<Object> list = new39();
                push(goTo(19), list, false);
            }
            break;
            case 40: /* reduce ADiferenteSimbolo1 */
            {
                ArrayList<Object> list = new40();
                push(goTo(19), list, false);
            }
            break;
            case 41: /* reduce AMenorLogicoExpMenorMaior */
            {
                ArrayList<Object> list = new41();
                push(goTo(20), list, false);
            }
            break;
            case 42: /* reduce AElementoExpMenorMaior */
            {
                ArrayList<Object> list = new42();
                push(goTo(20), list, false);
            }
            break;
            case 43: /* reduce AMenorQueSimbolo2 */
            {
                ArrayList<Object> list = new43();
                push(goTo(21), list, false);
            }
            break;
            case 44: /* reduce AMaiorQueSimbolo2 */
            {
                ArrayList<Object> list = new44();
                push(goTo(21), list, false);
            }
            break;
            case 45: /* reduce AMenorIgualSimbolo2 */
            {
                ArrayList<Object> list = new45();
                push(goTo(21), list, false);
            }
            break;
            case 46: /* reduce AMaiorIgualSimbolo2 */
            {
                ArrayList<Object> list = new46();
                push(goTo(21), list, false);
            }
            break;
            case 47: /* reduce AValorElemento */
            {
                ArrayList<Object> list = new47();
                push(goTo(22), list, false);
            }
            break;
            case 48: /* reduce AVariaveisElemento */
            {
                ArrayList<Object> list = new48();
                push(goTo(22), list, false);
            }
            break;
            case 49: /* reduce ACaractereValor */
            {
                ArrayList<Object> list = new49();
                push(goTo(23), list, false);
            }
            break;
            case 50: /* reduce ANumeroInteiroValor */
            {
                ArrayList<Object> list = new50();
                push(goTo(23), list, false);
            }
            break;
            case 51: /* reduce ANumeroRealValor */
            {
                ArrayList<Object> list = new51();
                push(goTo(23), list, false);
            }
            break;
        }
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new0() /* reduce ACabecalhoPrograma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PPrograma pprogramaNode1;
        {
            // Block
        TPrograma tprogramaNode2;
        TIdentificador tidentificadorNode3;
        PDeclaracao pdeclaracaoNode4;
        PComando pcomandoNode5;
        TFimPonto tfimpontoNode6;
        tprogramaNode2 = (TPrograma)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        pdeclaracaoNode4 = (PDeclaracao)nodeArrayList3.get(0);
        pcomandoNode5 = (PComando)nodeArrayList4.get(0);
        tfimpontoNode6 = (TFimPonto)nodeArrayList5.get(0);

        pprogramaNode1 = new ACabecalhoPrograma(tprogramaNode2, tidentificadorNode3, pdeclaracaoNode4, pcomandoNode5, tfimpontoNode6);
        }
	nodeList.add(pprogramaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new1() /* reduce AVariaveisDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        PTipo ptipoNode2;
        TDoisPontos tdoispontosNode3;
        PEscorpo pescorpoNode4;
        TPontoVirgula tpontovirgulaNode5;
        ptipoNode2 = (PTipo)nodeArrayList1.get(0);
        tdoispontosNode3 = (TDoisPontos)nodeArrayList2.get(0);
        pescorpoNode4 = (PEscorpo)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new AVariaveisDeclaracao(ptipoNode2, tdoispontosNode3, pescorpoNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new2() /* reduce AConstantesDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PDeclaracao pdeclaracaoNode1;
        {
            // Block
        TConstante tconstanteNode2;
        TIdentificador tidentificadorNode3;
        PValor pvalorNode4;
        TPontoVirgula tpontovirgulaNode5;
        tconstanteNode2 = (TConstante)nodeArrayList1.get(0);
        tidentificadorNode3 = (TIdentificador)nodeArrayList2.get(0);
        pvalorNode4 = (PValor)nodeArrayList3.get(0);
        tpontovirgulaNode5 = (TPontoVirgula)nodeArrayList4.get(0);

        pdeclaracaoNode1 = new AConstantesDeclaracao(tconstanteNode2, tidentificadorNode3, pvalorNode4, tpontovirgulaNode5);
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new3() /* reduce AVazioDeclaracao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PDeclaracao pdeclaracaoNode1;
        {
            // Block

        pdeclaracaoNode1 = new AVazioDeclaracao();
        }
	nodeList.add(pdeclaracaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new4() /* reduce AInteiroTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TInteiro tinteiroNode2;
        tinteiroNode2 = (TInteiro)nodeArrayList1.get(0);

        ptipoNode1 = new AInteiroTipo(tinteiroNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new5() /* reduce ARealTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TReal trealNode2;
        trealNode2 = (TReal)nodeArrayList1.get(0);

        ptipoNode1 = new ARealTipo(trealNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new6() /* reduce ACaractereTipo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTipo ptipoNode1;
        {
            // Block
        TCaractere tcaractereNode2;
        tcaractereNode2 = (TCaractere)nodeArrayList1.get(0);

        ptipoNode1 = new ACaractereTipo(tcaractereNode2);
        }
	nodeList.add(ptipoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new7() /* reduce AListaVariaveisEscorpo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEscorpo pescorpoNode1;
        {
            // Block
        PEscorpo pescorpoNode2;
        TVirgula tvirgulaNode3;
        PVariavel pvariavelNode4;
        pescorpoNode2 = (PEscorpo)nodeArrayList1.get(0);
        tvirgulaNode3 = (TVirgula)nodeArrayList2.get(0);
        pvariavelNode4 = (PVariavel)nodeArrayList3.get(0);

        pescorpoNode1 = new AListaVariaveisEscorpo(pescorpoNode2, tvirgulaNode3, pvariavelNode4);
        }
	nodeList.add(pescorpoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new8() /* reduce AVariavelEscorpo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PEscorpo pescorpoNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pescorpoNode1 = new AVariavelEscorpo(pvariavelNode2);
        }
	nodeList.add(pescorpoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new9() /* reduce AVetorVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        TCocheteEsq tcocheteesqNode3;
        TNInt tnintNode4;
        TCocheteDir tcochetedirNode5;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);
        tcocheteesqNode3 = (TCocheteEsq)nodeArrayList2.get(0);
        tnintNode4 = (TNInt)nodeArrayList3.get(0);
        tcochetedirNode5 = (TCocheteDir)nodeArrayList4.get(0);

        pvariavelNode1 = new AVetorVariavel(tidentificadorNode2, tcocheteesqNode3, tnintNode4, tcochetedirNode5);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new10() /* reduce AVariavelVariavel */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PVariavel pvariavelNode1;
        {
            // Block
        TIdentificador tidentificadorNode2;
        tidentificadorNode2 = (TIdentificador)nodeArrayList1.get(0);

        pvariavelNode1 = new AVariavelVariavel(tidentificadorNode2);
        }
	nodeList.add(pvariavelNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new11() /* reduce ASeSenaoComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PComando pcomandoNode1;
        {
            // Block
        PComando pcomandoNode2;
        PSeBloco pseblocoNode3;
        TPontoVirgula tpontovirgulaNode4;
        pcomandoNode2 = (PComando)nodeArrayList1.get(0);
        pseblocoNode3 = (PSeBloco)nodeArrayList2.get(0);
        tpontovirgulaNode4 = (TPontoVirgula)nodeArrayList3.get(0);

        pcomandoNode1 = new ASeSenaoComando(pcomandoNode2, pseblocoNode3, tpontovirgulaNode4);
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new12() /* reduce AVazioComando */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PComando pcomandoNode1;
        {
            // Block

        pcomandoNode1 = new AVazioComando();
        }
	nodeList.add(pcomandoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new13() /* reduce ASeBlocoSeBloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList8 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList7 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList6 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList5 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList4 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSeBloco pseblocoNode1;
        {
            // Block
        TSe tseNode2;
        TParenteseEsq tparenteseesqNode3;
        PExpLogica pexplogicaNode4;
        TParenteseDir tparentesedirNode5;
        TEntao tentaoNode6;
        PComando pcomandoNode7;
        PSenaoBloco psenaoblocoNode8;
        TFimSe tfimseNode9;
        tseNode2 = (TSe)nodeArrayList1.get(0);
        tparenteseesqNode3 = (TParenteseEsq)nodeArrayList2.get(0);
        pexplogicaNode4 = (PExpLogica)nodeArrayList3.get(0);
        tparentesedirNode5 = (TParenteseDir)nodeArrayList4.get(0);
        tentaoNode6 = (TEntao)nodeArrayList5.get(0);
        pcomandoNode7 = (PComando)nodeArrayList6.get(0);
        psenaoblocoNode8 = (PSenaoBloco)nodeArrayList7.get(0);
        tfimseNode9 = (TFimSe)nodeArrayList8.get(0);

        pseblocoNode1 = new ASeBlocoSeBloco(tseNode2, tparenteseesqNode3, pexplogicaNode4, tparentesedirNode5, tentaoNode6, pcomandoNode7, psenaoblocoNode8, tfimseNode9);
        }
	nodeList.add(pseblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new14() /* reduce ASenaoBlocoSenaoBloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSenaoBloco psenaoblocoNode1;
        {
            // Block
        TSenao tsenaoNode2;
        PComando pcomandoNode3;
        TFimSenao tfimsenaoNode4;
        tsenaoNode2 = (TSenao)nodeArrayList1.get(0);
        pcomandoNode3 = (PComando)nodeArrayList2.get(0);
        tfimsenaoNode4 = (TFimSenao)nodeArrayList3.get(0);

        psenaoblocoNode1 = new ASenaoBlocoSenaoBloco(tsenaoNode2, pcomandoNode3, tfimsenaoNode4);
        }
	nodeList.add(psenaoblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new15() /* reduce AVazioSenaoBloco */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        PSenaoBloco psenaoblocoNode1;
        {
            // Block

        psenaoblocoNode1 = new AVazioSenaoBloco();
        }
	nodeList.add(psenaoblocoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new16() /* reduce ANumeroNegativoExpAritimetrica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAritimetrica pexparitimetricaNode1;
        {
            // Block
        TMenos tmenosNode2;
        PTermo ptermoNode3;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);
        ptermoNode3 = (PTermo)nodeArrayList2.get(0);

        pexparitimetricaNode1 = new ANumeroNegativoExpAritimetrica(tmenosNode2, ptermoNode3);
        }
	nodeList.add(pexparitimetricaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new17() /* reduce AAdicaoSubtracaoExpAritimetrica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAritimetrica pexparitimetricaNode1;
        {
            // Block
        PExpAritimetrica pexparitimetricaNode2;
        PSoma psomaNode3;
        PTermo ptermoNode4;
        pexparitimetricaNode2 = (PExpAritimetrica)nodeArrayList1.get(0);
        psomaNode3 = (PSoma)nodeArrayList2.get(0);
        ptermoNode4 = (PTermo)nodeArrayList3.get(0);

        pexparitimetricaNode1 = new AAdicaoSubtracaoExpAritimetrica(pexparitimetricaNode2, psomaNode3, ptermoNode4);
        }
	nodeList.add(pexparitimetricaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new18() /* reduce ATermoExpAritimetrica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpAritimetrica pexparitimetricaNode1;
        {
            // Block
        PTermo ptermoNode2;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);

        pexparitimetricaNode1 = new ATermoExpAritimetrica(ptermoNode2);
        }
	nodeList.add(pexparitimetricaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new19() /* reduce AAdicaoSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TMais tmaisNode2;
        tmaisNode2 = (TMais)nodeArrayList1.get(0);

        psomaNode1 = new AAdicaoSoma(tmaisNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new20() /* reduce ASubtracaoSoma */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSoma psomaNode1;
        {
            // Block
        TMenos tmenosNode2;
        tmenosNode2 = (TMenos)nodeArrayList1.get(0);

        psomaNode1 = new ASubtracaoSoma(tmenosNode2);
        }
	nodeList.add(psomaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new21() /* reduce AMultiplicacaoDivisaoTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PTermo ptermoNode2;
        PMult pmultNode3;
        PFator pfatorNode4;
        ptermoNode2 = (PTermo)nodeArrayList1.get(0);
        pmultNode3 = (PMult)nodeArrayList2.get(0);
        pfatorNode4 = (PFator)nodeArrayList3.get(0);

        ptermoNode1 = new AMultiplicacaoDivisaoTermo(ptermoNode2, pmultNode3, pfatorNode4);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new22() /* reduce AFatorTermo */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermo ptermoNode1;
        {
            // Block
        PFator pfatorNode2;
        pfatorNode2 = (PFator)nodeArrayList1.get(0);

        ptermoNode1 = new AFatorTermo(pfatorNode2);
        }
	nodeList.add(ptermoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new23() /* reduce AMultiplicacaoMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMult pmultNode1;
        {
            // Block
        TEstrela testrelaNode2;
        testrelaNode2 = (TEstrela)nodeArrayList1.get(0);

        pmultNode1 = new AMultiplicacaoMult(testrelaNode2);
        }
	nodeList.add(pmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new24() /* reduce ADivisaoMult */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PMult pmultNode1;
        {
            // Block
        TBarraDir tbarradirNode2;
        tbarradirNode2 = (TBarraDir)nodeArrayList1.get(0);

        pmultNode1 = new ADivisaoMult(tbarradirNode2);
        }
	nodeList.add(pmultNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new25() /* reduce AExpParentesesFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        TParenteseEsq tparenteseesqNode2;
        PExpAritimetrica pexparitimetricaNode3;
        TParenteseDir tparentesedirNode4;
        tparenteseesqNode2 = (TParenteseEsq)nodeArrayList1.get(0);
        pexparitimetricaNode3 = (PExpAritimetrica)nodeArrayList2.get(0);
        tparentesedirNode4 = (TParenteseDir)nodeArrayList3.get(0);

        pfatorNode1 = new AExpParentesesFator(tparenteseesqNode2, pexparitimetricaNode3, tparentesedirNode4);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new26() /* reduce AElementoFator */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PFator pfatorNode1;
        {
            // Block
        PElemento pelementoNode2;
        pelementoNode2 = (PElemento)nodeArrayList1.get(0);

        pfatorNode1 = new AElementoFator(pelementoNode2);
        }
	nodeList.add(pfatorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new27() /* reduce AOuLogicoExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpLogica pexplogicaNode2;
        TOu touNode3;
        PExpXou pexpxouNode4;
        pexplogicaNode2 = (PExpLogica)nodeArrayList1.get(0);
        touNode3 = (TOu)nodeArrayList2.get(0);
        pexpxouNode4 = (PExpXou)nodeArrayList3.get(0);

        pexplogicaNode1 = new AOuLogicoExpLogica(pexplogicaNode2, touNode3, pexpxouNode4);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new28() /* reduce AExpXouExpLogica */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpLogica pexplogicaNode1;
        {
            // Block
        PExpXou pexpxouNode2;
        pexpxouNode2 = (PExpXou)nodeArrayList1.get(0);

        pexplogicaNode1 = new AExpXouExpLogica(pexpxouNode2);
        }
	nodeList.add(pexplogicaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new29() /* reduce AOuxLogicoExpXou */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpXou pexpxouNode1;
        {
            // Block
        PExpXou pexpxouNode2;
        TXou txouNode3;
        PExpE pexpeNode4;
        pexpxouNode2 = (PExpXou)nodeArrayList1.get(0);
        txouNode3 = (TXou)nodeArrayList2.get(0);
        pexpeNode4 = (PExpE)nodeArrayList3.get(0);

        pexpxouNode1 = new AOuxLogicoExpXou(pexpxouNode2, txouNode3, pexpeNode4);
        }
	nodeList.add(pexpxouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new30() /* reduce AExpEExpXou */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpXou pexpxouNode1;
        {
            // Block
        PExpE pexpeNode2;
        pexpeNode2 = (PExpE)nodeArrayList1.get(0);

        pexpxouNode1 = new AExpEExpXou(pexpeNode2);
        }
	nodeList.add(pexpxouNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new31() /* reduce AELogicoExpE */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpE pexpeNode1;
        {
            // Block
        PExpE pexpeNode2;
        TE teNode3;
        PExpNao pexpnaoNode4;
        pexpeNode2 = (PExpE)nodeArrayList1.get(0);
        teNode3 = (TE)nodeArrayList2.get(0);
        pexpnaoNode4 = (PExpNao)nodeArrayList3.get(0);

        pexpeNode1 = new AELogicoExpE(pexpeNode2, teNode3, pexpnaoNode4);
        }
	nodeList.add(pexpeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new32() /* reduce AExpNaoExpE */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpE pexpeNode1;
        {
            // Block
        PExpNao pexpnaoNode2;
        pexpnaoNode2 = (PExpNao)nodeArrayList1.get(0);

        pexpeNode1 = new AExpNaoExpE(pexpnaoNode2);
        }
	nodeList.add(pexpeNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new33() /* reduce ANaoLogicoExpNao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpNao pexpnaoNode1;
        {
            // Block
        TNao tnaoNode2;
        PTermoLogico ptermologicoNode3;
        tnaoNode2 = (TNao)nodeArrayList1.get(0);
        ptermologicoNode3 = (PTermoLogico)nodeArrayList2.get(0);

        pexpnaoNode1 = new ANaoLogicoExpNao(tnaoNode2, ptermologicoNode3);
        }
	nodeList.add(pexpnaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new34() /* reduce ATermoLogicoExpNao */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpNao pexpnaoNode1;
        {
            // Block
        PTermoLogico ptermologicoNode2;
        ptermologicoNode2 = (PTermoLogico)nodeArrayList1.get(0);

        pexpnaoNode1 = new ATermoLogicoExpNao(ptermologicoNode2);
        }
	nodeList.add(pexpnaoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new35() /* reduce AParentesesLogicoTermoLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoLogico ptermologicoNode1;
        {
            // Block
        TParenteseEsq tparenteseesqNode2;
        PExpLogica pexplogicaNode3;
        TParenteseDir tparentesedirNode4;
        tparenteseesqNode2 = (TParenteseEsq)nodeArrayList1.get(0);
        pexplogicaNode3 = (PExpLogica)nodeArrayList2.get(0);
        tparentesedirNode4 = (TParenteseDir)nodeArrayList3.get(0);

        ptermologicoNode1 = new AParentesesLogicoTermoLogico(tparenteseesqNode2, pexplogicaNode3, tparentesedirNode4);
        }
	nodeList.add(ptermologicoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new36() /* reduce AParentesesComparacaoTermoLogico */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PTermoLogico ptermologicoNode1;
        {
            // Block
        PExpComparativa pexpcomparativaNode2;
        pexpcomparativaNode2 = (PExpComparativa)nodeArrayList1.get(0);

        ptermologicoNode1 = new AParentesesComparacaoTermoLogico(pexpcomparativaNode2);
        }
	nodeList.add(ptermologicoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new37() /* reduce AIgualDiferente1ExpComparativa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpComparativa pexpcomparativaNode1;
        {
            // Block
        PElemento pelementoNode2;
        PSimbolo1 psimbolo1Node3;
        PElemento pelementoNode4;
        pelementoNode2 = (PElemento)nodeArrayList1.get(0);
        psimbolo1Node3 = (PSimbolo1)nodeArrayList2.get(0);
        pelementoNode4 = (PElemento)nodeArrayList3.get(0);

        pexpcomparativaNode1 = new AIgualDiferente1ExpComparativa(pelementoNode2, psimbolo1Node3, pelementoNode4);
        }
	nodeList.add(pexpcomparativaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new38() /* reduce AMenorMaiorExpComparativa */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpComparativa pexpcomparativaNode1;
        {
            // Block
        PExpMenorMaior pexpmenormaiorNode2;
        pexpmenormaiorNode2 = (PExpMenorMaior)nodeArrayList1.get(0);

        pexpcomparativaNode1 = new AMenorMaiorExpComparativa(pexpmenormaiorNode2);
        }
	nodeList.add(pexpcomparativaNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new39() /* reduce AIgualSimbolo1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSimbolo1 psimbolo1Node1;
        {
            // Block
        TIgual tigualNode2;
        tigualNode2 = (TIgual)nodeArrayList1.get(0);

        psimbolo1Node1 = new AIgualSimbolo1(tigualNode2);
        }
	nodeList.add(psimbolo1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new40() /* reduce ADiferenteSimbolo1 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSimbolo1 psimbolo1Node1;
        {
            // Block
        TDiferente tdiferenteNode2;
        tdiferenteNode2 = (TDiferente)nodeArrayList1.get(0);

        psimbolo1Node1 = new ADiferenteSimbolo1(tdiferenteNode2);
        }
	nodeList.add(psimbolo1Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new41() /* reduce AMenorLogicoExpMenorMaior */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList3 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList2 = pop();
        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpMenorMaior pexpmenormaiorNode1;
        {
            // Block
        PElemento pelementoNode2;
        PSimbolo2 psimbolo2Node3;
        PElemento pelementoNode4;
        pelementoNode2 = (PElemento)nodeArrayList1.get(0);
        psimbolo2Node3 = (PSimbolo2)nodeArrayList2.get(0);
        pelementoNode4 = (PElemento)nodeArrayList3.get(0);

        pexpmenormaiorNode1 = new AMenorLogicoExpMenorMaior(pelementoNode2, psimbolo2Node3, pelementoNode4);
        }
	nodeList.add(pexpmenormaiorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new42() /* reduce AElementoExpMenorMaior */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PExpMenorMaior pexpmenormaiorNode1;
        {
            // Block
        PElemento pelementoNode2;
        pelementoNode2 = (PElemento)nodeArrayList1.get(0);

        pexpmenormaiorNode1 = new AElementoExpMenorMaior(pelementoNode2);
        }
	nodeList.add(pexpmenormaiorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new43() /* reduce AMenorQueSimbolo2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSimbolo2 psimbolo2Node1;
        {
            // Block
        TMenorq tmenorqNode2;
        tmenorqNode2 = (TMenorq)nodeArrayList1.get(0);

        psimbolo2Node1 = new AMenorQueSimbolo2(tmenorqNode2);
        }
	nodeList.add(psimbolo2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new44() /* reduce AMaiorQueSimbolo2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSimbolo2 psimbolo2Node1;
        {
            // Block
        TMaiorq tmaiorqNode2;
        tmaiorqNode2 = (TMaiorq)nodeArrayList1.get(0);

        psimbolo2Node1 = new AMaiorQueSimbolo2(tmaiorqNode2);
        }
	nodeList.add(psimbolo2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new45() /* reduce AMenorIgualSimbolo2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSimbolo2 psimbolo2Node1;
        {
            // Block
        TMenorIgual tmenorigualNode2;
        tmenorigualNode2 = (TMenorIgual)nodeArrayList1.get(0);

        psimbolo2Node1 = new AMenorIgualSimbolo2(tmenorigualNode2);
        }
	nodeList.add(psimbolo2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new46() /* reduce AMaiorIgualSimbolo2 */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PSimbolo2 psimbolo2Node1;
        {
            // Block
        TMaiorIgual tmaiorigualNode2;
        tmaiorigualNode2 = (TMaiorIgual)nodeArrayList1.get(0);

        psimbolo2Node1 = new AMaiorIgualSimbolo2(tmaiorigualNode2);
        }
	nodeList.add(psimbolo2Node1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new47() /* reduce AValorElemento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElemento pelementoNode1;
        {
            // Block
        PValor pvalorNode2;
        pvalorNode2 = (PValor)nodeArrayList1.get(0);

        pelementoNode1 = new AValorElemento(pvalorNode2);
        }
	nodeList.add(pelementoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new48() /* reduce AVariaveisElemento */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PElemento pelementoNode1;
        {
            // Block
        PVariavel pvariavelNode2;
        pvariavelNode2 = (PVariavel)nodeArrayList1.get(0);

        pelementoNode1 = new AVariaveisElemento(pvariavelNode2);
        }
	nodeList.add(pelementoNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new49() /* reduce ACaractereValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TLCaractere tlcaractereNode2;
        tlcaractereNode2 = (TLCaractere)nodeArrayList1.get(0);

        pvalorNode1 = new ACaractereValor(tlcaractereNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new50() /* reduce ANumeroInteiroValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNInt tnintNode2;
        tnintNode2 = (TNInt)nodeArrayList1.get(0);

        pvalorNode1 = new ANumeroInteiroValor(tnintNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    @SuppressWarnings({ "unchecked", "rawtypes" })
    ArrayList<Object> new51() /* reduce ANumeroRealValor */
    {
        @SuppressWarnings("hiding") ArrayList<Object> nodeList = new ArrayList<Object>();

        @SuppressWarnings("unused") ArrayList<Object> nodeArrayList1 = pop();
        PValor pvalorNode1;
        {
            // Block
        TNReal tnrealNode2;
        tnrealNode2 = (TNReal)nodeArrayList1.get(0);

        pvalorNode1 = new ANumeroRealValor(tnrealNode2);
        }
	nodeList.add(pvalorNode1);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {26, SHIFT, 1}, },
			{{-1, ERROR, 1}, {70, SHIFT, 3}, },
			{{-1, ERROR, 2}, {73, ACCEPT, -1}, },
			{{-1, REDUCE, 3}, {30, SHIFT, 4}, {31, SHIFT, 5}, {32, SHIFT, 6}, {34, SHIFT, 7}, },
			{{-1, ERROR, 4}, {70, SHIFT, 10}, },
			{{-1, REDUCE, 4}, },
			{{-1, REDUCE, 5}, },
			{{-1, REDUCE, 6}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 9}, {14, SHIFT, 12}, },
			{{-1, ERROR, 10}, {67, SHIFT, 13}, {68, SHIFT, 14}, {69, SHIFT, 15}, },
			{{-1, ERROR, 11}, {28, SHIFT, 17}, {35, SHIFT, 18}, },
			{{-1, ERROR, 12}, {70, SHIFT, 20}, },
			{{-1, REDUCE, 50}, },
			{{-1, REDUCE, 51}, },
			{{-1, REDUCE, 49}, },
			{{-1, ERROR, 16}, {13, SHIFT, 23}, },
			{{-1, REDUCE, 0}, },
			{{-1, ERROR, 18}, {7, SHIFT, 24}, },
			{{-1, ERROR, 19}, {13, SHIFT, 25}, },
			{{-1, REDUCE, 10}, {3, SHIFT, 26}, },
			{{-1, ERROR, 21}, {10, SHIFT, 27}, {13, SHIFT, 28}, },
			{{-1, REDUCE, 8}, },
			{{-1, REDUCE, 2}, },
			{{-1, ERROR, 24}, {7, SHIFT, 29}, {60, SHIFT, 30}, {67, SHIFT, 13}, {68, SHIFT, 14}, {69, SHIFT, 15}, {70, SHIFT, 20}, },
			{{-1, REDUCE, 11}, },
			{{-1, ERROR, 26}, {67, SHIFT, 41}, },
			{{-1, ERROR, 27}, {70, SHIFT, 20}, },
			{{-1, REDUCE, 1}, },
			{{-1, ERROR, 29}, {7, SHIFT, 29}, {60, SHIFT, 30}, {67, SHIFT, 13}, {68, SHIFT, 14}, {69, SHIFT, 15}, {70, SHIFT, 20}, },
			{{-1, ERROR, 30}, {7, SHIFT, 29}, {67, SHIFT, 13}, {68, SHIFT, 14}, {69, SHIFT, 15}, {70, SHIFT, 20}, },
			{{-1, REDUCE, 48}, },
			{{-1, ERROR, 32}, {6, SHIFT, 45}, {61, SHIFT, 46}, },
			{{-1, REDUCE, 28}, {62, SHIFT, 47}, },
			{{-1, REDUCE, 30}, {63, SHIFT, 48}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 42}, {18, SHIFT, 49}, {19, SHIFT, 50}, {20, SHIFT, 51}, {21, SHIFT, 52}, {22, SHIFT, 53}, {23, SHIFT, 54}, },
			{{-1, REDUCE, 47}, },
			{{-1, ERROR, 41}, {2, SHIFT, 57}, },
			{{-1, REDUCE, 7}, },
			{{-1, ERROR, 43}, {6, SHIFT, 58}, {61, SHIFT, 46}, },
			{{-1, REDUCE, 33}, },
			{{-1, ERROR, 45}, {36, SHIFT, 59}, },
			{{-1, ERROR, 46}, {7, SHIFT, 29}, {60, SHIFT, 30}, {67, SHIFT, 13}, {68, SHIFT, 14}, {69, SHIFT, 15}, {70, SHIFT, 20}, },
			{{-1, ERROR, 47}, {7, SHIFT, 29}, {60, SHIFT, 30}, {67, SHIFT, 13}, {68, SHIFT, 14}, {69, SHIFT, 15}, {70, SHIFT, 20}, },
			{{-1, ERROR, 48}, {7, SHIFT, 29}, {60, SHIFT, 30}, {67, SHIFT, 13}, {68, SHIFT, 14}, {69, SHIFT, 15}, {70, SHIFT, 20}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 40}, },
			{{-1, ERROR, 55}, {67, SHIFT, 13}, {68, SHIFT, 14}, {69, SHIFT, 15}, {70, SHIFT, 20}, },
			{{-1, ERROR, 56}, {67, SHIFT, 13}, {68, SHIFT, 14}, {69, SHIFT, 15}, {70, SHIFT, 20}, },
			{{-1, REDUCE, 9}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 12}, },
			{{-1, REDUCE, 27}, {62, SHIFT, 47}, },
			{{-1, REDUCE, 29}, {63, SHIFT, 48}, },
			{{-1, REDUCE, 31}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 15}, {35, SHIFT, 18}, {38, SHIFT, 66}, },
			{{-1, REDUCE, 12}, },
			{{-1, ERROR, 67}, {37, SHIFT, 69}, },
			{{-1, ERROR, 68}, {35, SHIFT, 18}, {39, SHIFT, 70}, },
			{{-1, REDUCE, 13}, },
			{{-1, REDUCE, 14}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 2}, },
			{{-1, 8}, },
			{{-1, 9}, },
			{{-1, 21}, },
			{{-1, 31}, {12, 22}, {27, 42}, },
			{{-1, 11}, {59, 65}, {66, 68}, },
			{{-1, 19}, },
			{{-1, 67}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, -1}, },
			{{-1, 32}, {29, 43}, },
			{{-1, 33}, {46, 60}, },
			{{-1, 34}, {47, 61}, },
			{{-1, 35}, {48, 62}, },
			{{-1, 36}, {30, 44}, },
			{{-1, 37}, },
			{{-1, 55}, },
			{{-1, 38}, },
			{{-1, 56}, },
			{{-1, 39}, {55, 63}, {56, 64}, },
			{{-1, 40}, {10, 16}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: 'programa'",
			"expecting: identificador",
			"expecting: EOF",
			"expecting: fim ponto, 'constante', 'inteiro', 'real', 'caractere', 'se'",
			"expecting: ':'",
			"expecting: fim ponto, 'se'",
			"expecting: n int, n real, l caractere",
			"expecting: ')', ';', '>', '<', '>=', '<=', '=', '<>', 'ou', 'xou', 'e'",
			"expecting: ';'",
			"expecting: '('",
			"expecting: '[', ')', ',', ';', '>', '<', '>=', '<=', '=', '<>', 'ou', 'xou', 'e'",
			"expecting: ',', ';'",
			"expecting: '(', 'nao', n int, n real, l caractere, identificador",
			"expecting: fim ponto, 'se', 'fim se', 'senao', 'fim senao'",
			"expecting: n int",
			"expecting: '(', n int, n real, l caractere, identificador",
			"expecting: ')', '>', '<', '>=', '<=', '=', '<>', 'ou', 'xou', 'e'",
			"expecting: ')', 'ou'",
			"expecting: ')', 'ou', 'xou'",
			"expecting: ')', 'ou', 'xou', 'e'",
			"expecting: ']'",
			"expecting: 'entao'",
			"expecting: n int, n real, l caractere, identificador",
			"expecting: ')', ',', ';', '>', '<', '>=', '<=', '=', '<>', 'ou', 'xou', 'e'",
			"expecting: 'se', 'fim se', 'senao'",
			"expecting: 'se', 'fim senao'",
			"expecting: 'fim se'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 1, 4, 4, 4, 5, 4, 6, 5, 1, 7, 7, 7, 8, 2, 9, 8, 10, 11, 11, 5, 12, 13, 14, 1, 5, 12, 15, 16, 17, 18, 19, 19, 19, 19, 19, 16, 16, 20, 11, 17, 19, 21, 12, 12, 12, 22, 22, 22, 22, 22, 22, 22, 22, 23, 19, 24, 18, 19, 19, 19, 19, 24, 25, 26, 25, 8, 26, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            Parser.actionTable = new int[length][][];
            for(int i = 0; i < Parser.actionTable.length; i++)
            {
                length = s.readInt();
                Parser.actionTable[i] = new int[length][3];
                for(int j = 0; j < Parser.actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    Parser.actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}

