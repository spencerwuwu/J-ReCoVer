// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a004 -= 0;
a002 = a006 + a002;
a004 += a011;
a015 = a016 + 3;
a015 -= a016;
if (a000 <= a011) {
a019 = a018 - a014;
a002 -= a007;
a000 = a012 + a007;
a005 = a013 - a000;
a008 += a013;
a009 = a012 * 3;
a004 = a007 + cur;
a012 = a014 + a014;
a015 = a014 + a008;
a008 = a008 - a012;
a016 = a001 + a018;
a016 = a005 - a016;
a002 = a015 - a006;
a005 += a000;
a017 += a006;
a012 = a019 + a002;
a001 = a013 - a002;
a014 = a002 + a002;
a015 += a008;
a000 = a010 + a011;
} else {
a006 = a015 + a000;
a000 -= a017;
a002 = a014 - a011;
a002 -= a006;
a011 = a015 + a012;
a014 += a016;
a005 = a004 + a008;
a012 = a011 - a008;
a008 = a002 - a006;
a013 = a001 - a017;
a007 = a011 + a013;
a002 = a010 - a018;
}
a016 = a019 + a005;
a003 = a019 - cur;
a019 -= a003;
a012 = a009 + a017;
a008 -= a005;
a002 = a012 + a008;
a002 = a012 + a002;
a005 -= a013;
a005 -= a015;
a006 += a004;
a016 = cur + a011;
a008 += a007;
a003 = a002 - a002;
a002 = a007 + a003;
a018 += a011;
if (a015 == cur) {
a011 = a016 - a014;
a001 -= a007;
a005 += a004;
a016 = a019 - cur;
a019 = a002 + a000;
a012 = a012 - a010;
a017 = a006 + a006;
a003 = a010 - a007;
a011 = a005 + 1;
a001 += a000;
a013 = a015 - 2;
a016 = a009 + a005;
a003 += a016;
a003 = a011 - -1;
a015 = a004 + a013;
cur += a005;
} else {
a017 += a016;
a003 -= a012;
a008 = a002 - a002;
a019 -= a017;
if (a015 >= a004) {
a000 = a018 - a008;
cur = a008 - a016;
cur += a017;
a004 -= a011;
a000 -= a017;
a002 = a003 + 2;
a008 -= a006;
a016 = a019 + 3;
a006 += a003;
a006 += a019;
a009 += a017;
a007 = a012 - a014;
a004 = -1 - a016;
a003 -= a011;
a001 = a009 + a011;
a016 -= a007;
a018 += a018;
a019 += a018;
a015 = a012 + a008;
a010 = a013 - a017;
a005 = a007 + a013;
a001 = a014 + a005;
} else {
a009 += a002;
a015 = a006 + a003;
a005 -= a009;
a005 += a004;
a009 += a009;
a012 -= a004;
a016 = a015 + a003;
a013 = a012 + cur;
a010 += a019;
a018 += a005;
a014 = a004 - a009;
a000 = a013 - 2;
a016 = a011 + a018;
a014 = a009 - a017;
a015 = a010 + a000;
a001 -= a004;
a017 -= a011;
a017 = a018 + a018;
a001 -= a008;
a008 = a013 + a011;
a006 -= a005;
a017 += a004;
}
a009 = a001 + cur;
a010 -= a002;
a014 += a001;
a001 = a015 + a008;
a003 += a003;
a006 += a019;
a008 = a006 + a009;
a014 = cur - cur;
a006 -= a016;
cur += a011;
a007 = a009 - a017;
a008 = a017 - a000;
a014 = a004 + a010;
a017 = a014 + a012;
a002 = a013 + a019;
a010 = a013 - a017;
a011 -= a002;
a004 -= a016;
a015 -= a008;
a016 += a004;
a014 += a001;
a017 = a018 + a011;
cur -= a019;
a015 = a006 - a015;
a003 += a013;
a019 = a012 - a018;
a007 += a000;
if (a011 > cur) {
a010 += -1;
a009 = 3 - a013;
a016 -= a003;
a016 -= a004;
a012 = a001 - a003;
a019 -= a001;
a001 = a017 - a007;
a010 = a018 - a002;
cur = a019 + a002;
a014 = a012 - a011;
a011 += a005;
a019 += a019;
a006 = a009 + a008;
a007 = a007 - -1;
} else {
a013 = a018 + a001;
a001 = a001 - a002;
a006 = a004 - a010;
a008 -= a015;
a001 += a015;
a018 += 1;
a019 -= a017;
a002 += a018;
a012 = a008 - a011;
}
a013 += a006;
a018 = a011 + a010;
a011 = a014 + a012;
a000 += a016;
}
a005 -= a010;
a005 += a015;
a004 = a018 + -4;
a018 -= a015;
a017 -= a016;
a010 -= a018;
a012 = a001 - a014;
a007 = cur - a005;
a010 -= a010;
a001 += a005;
a017 = a016 - a009;
a002 = a012 + a019;
a013 -= a003;
a015 += a014;
a019 = a015 - a014;
a014 = a015 - cur;
a012 = a015 + a011;
a019 = a012 + a001;
a010 += a019;
a019 = -5 + a003;
a000 = a018 - a000;
a001 = a014 + a019;
a015 -= a010;
a018 -= a007;
a009 = a006 + a014;
a018 += a008;
a019 -= a000;
a014 = a016 + a004;
a004 += a006;
a019 = a007 - a009;
}
output.collect(prefix, new IntWritable(a000));
}
