// Note: only +, - operations
// Parameters:
//   Variables:   20
//   Baselines:   200
//   If-Branches: 4

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a004 = a005 - cur;
a003 = a009 + cur;
a002 += a018;
a007 = a000 - a017;
a015 -= a012;
a017 += a002;
a016 += a017;
a017 = a016 - a003;
a002 = a004 - a002;
a015 += a017;
a004 += a006;
a017 = a016 - a014;
a000 = a003 + 0;
a000 += a019;
a010 -= a018;
a011 -= a007;
a012 = a003 - a008;
a016 += a004;
a011 = a000 - a014;
a011 = a007 + a016;
a010 = a005 + 0;
a017 = a013 + a016;
a008 = a004 + a000;
a007 = a016 + a000;
if (a003 == 3) {
a017 -= a014;
a019 = a013 + a005;
a004 -= a008;
a015 = cur - 1;
cur = a018 - -4;
a014 = a000 * -4;
a017 = a005 - a015;
a001 += a004;
a019 = a017 + a007;
a019 += a012;
a006 = a012 - a019;
cur = a001 + a017;
a007 = a011 + cur;
a004 -= a012;
cur += a015;
a003 = a017 + a012;
a009 += a005;
a005 -= cur;
a003 += a011;
a010 = a009 + a014;
a018 = a014 + a003;
a019 = a004 + a014;
a010 -= a007;
a008 -= a003;
a002 = a017 + a000;
a004 = a013 - a012;
if (a007 > a004) {
a003 += a008;
a001 += a011;
a016 += a013;
a005 -= a004;
a018 = a008 - a007;
a004 = a002 - cur;
a012 += a013;
a006 -= a004;
a019 -= a019;
a014 = a012 + a012;
a018 += a005;
cur -= a003;
a015 -= a018;
a018 = a013 + a017;
cur = a002 + a011;
a017 += a004;
a007 = a019 + a000;
a017 += a003;
a003 = a015 + a000;
a013 = a005 + a010;
a000 += a004;
a012 += a014;
if (a009 != a003) {
a019 = a012 - a006;
a013 = a010 - a013;
a004 += a007;
a015 = a009 + a005;
a004 = a003 + a016;
a015 = a018 + a016;
a005 -= a010;
a006 = 2 + a018;
cur = a001 + a015;
a014 -= a004;
a014 = a014 - -5;
a008 = a004 - cur;
a001 -= a004;
a005 = a007 + a003;
cur = a018 + a011;
a003 -= a000;
a014 += a002;
a019 = a008 - cur;
a006 += a000;
a013 -= a018;
a007 += a005;
a014 = a008 - a010;
a010 += a019;
a017 += a016;
a003 += a004;
a015 = a007 - a004;
a012 = a014 * 2;
a003 += a006;
a010 = a016 + a000;
a015 += a005;
a008 += a004;
a004 -= a004;
if (a008 <= a006) {
a013 = a016 - a006;
a005 += a004;
a001 = a019 - -4;
a002 = a010 - a011;
a013 -= a002;
a005 -= a019;
a015 = a018 + a001;
a012 = a011 + a001;
a002 = a003 + a006;
a019 = a018 - a007;
a015 -= a002;
a018 += a014;
a008 = a014 - a006;
a014 -= a002;
a016 = a019 + a010;
a006 = a010 - a000;
a005 = cur - a006;
a009 -= a018;
a013 = a012 + a001;
a014 = a005 - a013;
a014 += cur;
a006 += 2;
a009 = a008 - a007;
a004 = a000 - 1;
a017 += a005;
a007 = a014 - a012;
a002 += a010;
a002 = a019 + a002;
a008 = a011 + a011;
a016 = a008 + a008;
a019 += a008;
a016 = a016 - a017;
} else {
a016 -= a013;
a008 = a001 - a002;
a002 = a008 - a002;
a015 = a003 + a014;
a000 = a014 + a016;
a019 -= a011;
a010 = a016 + cur;
a016 = a016 + a007;
a017 = a004 - a019;
a012 = a014 + a017;
a017 = a008 - a000;
a019 = a005 - cur;
}
a006 = a018 + a008;
a015 -= a015;
a019 = a017 - a009;
a001 += a008;
a017 = a006 - a019;
a015 = a005 + a013;
a004 -= a011;
a018 = a008 - a006;
a012 = a012 - cur;
a016 += -5;
a018 -= a007;
a019 = a004 - a002;
} else {
a015 = a000 + cur;
a009 -= -3;
a019 += a007;
}
a008 += a016;
a001 -= cur;
a002 = a008 - a005;
a011 -= a015;
a000 -= a008;
a018 -= a012;
a018 -= a005;
a009 = a009 - a007;
a013 = a010 - a006;
a018 = a003 - a011;
a015 = a012 + a000;
} else {
a007 = a003 + a002;
a006 += a013;
a015 = a010 - a012;
a015 -= 3;
a009 -= a002;
a002 -= a007;
a000 = cur - a017;
a005 = a015 - a008;
a003 -= a017;
cur -= cur;
}
a004 = a009 - a006;
a000 += 1;
cur = a000 - a015;
a000 -= a014;
a011 = a009 - a016;
} else {
a007 += a013;
a009 -= a016;
a012 = a016 - a012;
a008 = a014 - a007;
a007 = a015 + a019;
a008 -= a005;
a018 = a001 + cur;
a017 = a000 - a000;
a004 = a008 + cur;
a017 = a007 + a010;
}
cur = -4 + -5;
}
output.collect(prefix, new IntWritable(a004));
}
