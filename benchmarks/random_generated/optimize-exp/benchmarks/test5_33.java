// Note: only +, - operations
// Parameters:
//   Variables:   25
//   Baselines:   250
//   If-Branches: 5

public void reduce(Text prefix, Iterator<IntWritable> iter,
         OutputCollector<Text, IntWritable> output, Reporter reporter) throws IOException {
int a000 = 0;
int a001 = 0;
int a002 = 0;
int a003 = 0;
int a004 = 0;
int a005 = 0;
int a006 = 0;
int a007 = 0;
int a008 = 0;
int a009 = 0;
int a010 = 0;
int a011 = 0;
int a012 = 0;
int a013 = 0;
int a014 = 0;
int a015 = 0;
int a016 = 0;
int a017 = 0;
int a018 = 0;
int a019 = 0;
int a020 = 0;
int a021 = 0;
int a022 = 0;
int a023 = 0;
int a024 = 0;
int cur = 0;

while (iter.hasNext()) {
cur = iter.next().get();
a018 -= a007;
a011 += a016;
a006 = a022 - a004;
a019 = cur - a003;
a002 = a017 - a019;
a018 -= a007;
a021 = -3 - a010;
a012 = a000 - a022;
a022 = a015 - a018;
a013 = a024 - a003;
a014 = a024 + a003;
a009 += a011;
a014 += a003;
a024 -= a003;
a014 += a021;
a003 += a000;
a001 -= a007;
cur = a015 * -4;
a022 = a001 - a024;
a006 -= a003;
a023 -= a015;
a000 = a011 - a019;
a006 += a020;
a013 = a018 + a022;
a019 = a023 - a005;
if (a011 >= a022) {
a024 = a015 + a016;
a014 += a006;
a021 = a014 + a009;
a008 = a001 + a014;
a001 = a001 + a013;
a017 -= a015;
if (a006 < a010) {
a005 = a010 - a022;
a006 -= a003;
a022 = a002 - a012;
a005 += a012;
a009 += a011;
a006 -= cur;
if (a008 != a021) {
a005 = a002 - a014;
a021 = a022 - a021;
a007 = a017 + a013;
a003 -= a011;
a018 = a020 + a006;
a016 = a019 - a006;
a011 = a008 + a003;
cur += a017;
a015 -= a000;
a003 += a022;
a013 = a003 + a009;
a006 = a001 - a006;
a018 += a000;
a003 += a015;
a023 = a008 + a001;
a021 = a022 + a015;
a012 -= a004;
a005 = a008 + a005;
a002 = a003 - a020;
if (a009 <= a020) {
} else {
a013 = a003 + a024;
cur -= a002;
a018 = 0 - a005;
a006 -= a015;
a016 = a020 + a003;
a008 = a021 + a009;
a014 -= a015;
a012 -= a005;
a018 -= a007;
a004 -= a001;
a023 += a020;
a016 = a013 - cur;
a020 += a024;
a014 = a002 + a010;
a020 = a016 + a000;
a012 -= a016;
a012 = a008 + a024;
a002 -= a009;
a005 += a016;
a022 -= a016;
cur += -4;
a013 -= a002;
a022 = a008 - a003;
a017 = a008 - a018;
a020 += a006;
cur = a003 - a011;
a010 -= a010;
a013 += a022;
}
a015 = a004 + a016;
a005 += a005;
a009 -= cur;
a019 -= a011;
a004 = a024 + -4;
a015 = cur + a017;
a001 -= a014;
a004 += a017;
a021 += a013;
a011 += a003;
a015 += a019;
a012 -= a020;
a014 = a008 + a008;
a008 = a003 - a000;
a010 += a005;
a023 += a002;
cur -= a022;
a014 = a014 - a017;
a015 = a023 - a009;
a013 = a016 + a016;
a017 = a010 + a024;
a011 += a016;
a014 += a008;
a021 = a022 + a017;
} else {
a012 = a001 + a011;
a022 += a023;
a024 = a011 - -5;
a002 += a009;
a020 = a006 + a024;
a019 -= a002;
a005 += a005;
a005 = a013 + a009;
a005 -= a003;
a000 += a012;
}
a010 = a021 - a022;
a003 -= a020;
a000 += a010;
a011 = a015 * -3;
a007 -= a003;
a001 += a023;
a010 += a018;
a019 = a020 + a009;
a023 += a019;
a024 = a007 - a024;
a022 = a023 + a000;
a006 = a002 - a010;
a009 = a012 - a022;
a019 = a007 - a007;
a006 -= a017;
a018 = a017 + a013;
cur -= a008;
a024 += a019;
a008 = a007 + a006;
a015 = a024 - a010;
cur -= a017;
a011 = a009 + a023;
cur = 3 + a018;
a012 += a010;
a015 += a004;
if (a014 == -5) {
a023 = a021 - a000;
a009 = a001 + a023;
a024 += a020;
a018 -= a011;
a014 = a003 + a004;
a015 -= a013;
a011 = a018 + 2;
a021 += a004;
a000 = a005 + a010;
a020 = a024 + a014;
cur = a017 + a015;
a010 = a022 + a022;
a005 -= a022;
a012 = a009 - a019;
a012 = a024 - a007;
a002 -= 4;
a023 = a024 - a019;
a010 = a012 - a009;
a011 = 1 + a014;
a020 -= a011;
} else {
a017 = a021 + a023;
a007 = a012 - a016;
a016 += -1;
a018 += a018;
a005 = a000 + a006;
a013 = a011 + a009;
a021 += a009;
a002 -= a024;
a009 = a008 + a001;
a022 -= a013;
cur -= a024;
a010 = a010 + a011;
}
a017 += a017;
a019 = a023 - a019;
a015 -= a003;
a024 = cur - a002;
} else {
a004 -= a002;
a008 -= a018;
a013 = cur - a019;
a000 -= a005;
a005 -= a002;
a018 += a001;
a003 = a022 - a004;
a021 = a001 + a014;
a022 -= a021;
a009 += a003;
a016 -= a000;
a013 = a015 - a005;
a006 = a001 + a011;
cur = a021 + a012;
a012 = a020 * -2;
a017 = a007 * -3;
a016 = 3 + a021;
a014 -= a017;
a002 = a022 - a024;
a018 += a022;
a004 -= a023;
a008 += a024;
a011 = a017 - a003;
a001 -= a018;
a005 += a000;
a004 = a022 - a013;
a009 = a013 - a002;
a011 = a006 + a020;
a007 = a017 - a011;
a020 = a009 + a010;
}
a010 = -3 - a008;
a022 -= a022;
a002 = a015 - a022;
a004 = a000 - a020;
a011 = a019 - a022;
a019 = a001 - a002;
a019 -= -1;
a016 = a011 + a000;
a014 -= a007;
a009 = a003 + a022;
a006 -= a020;
a004 = a014 + a019;
a013 = a013 - 1;
a000 = a013 + a005;
a021 -= a001;
a003 -= a014;
a002 -= 1;
a018 -= a004;
a006 = a008 + a014;
a014 = a005 - a001;
a016 = a018 - a023;
a016 = a012 + a013;
a000 += a003;
a007 = a003 + a016;
cur = a021 + a021;
a018 += cur;
a003 = a023 + a018;
a012 = a003 + a021;
a014 = a001 * -4;
a019 = a015 * 0;
} else {
a009 -= a005;
a012 = a001 - a006;
a015 -= a008;
cur += a005;
}
a016 += a011;
a009 += a023;
a003 += a007;
cur += a015;
a016 -= a013;
a000 += a009;
a002 = a002 - a022;
}
output.collect(prefix, new IntWritable(a008));
}
